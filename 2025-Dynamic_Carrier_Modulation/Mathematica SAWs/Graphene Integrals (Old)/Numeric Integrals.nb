(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    359596,       6949]
NotebookOptionsPosition[    356769,       6900]
NotebookOutlinePosition[    357162,       6916]
CellTagsIndexPosition[    357119,       6913]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "=", 
   FractionBox[
    RowBox[{"2", "Pi"}], "\[Lambda]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.937437778611351*^9, 3.9374380334585743`*^9}, {
   3.937438074704915*^9, 3.937438112704074*^9}, {3.937439161803776*^9, 
   3.937439172194804*^9}, {3.937439613682345*^9, 3.937439644547933*^9}, {
   3.9374398158313*^9, 3.9374398164470654`*^9}, {3.937440025273114*^9, 
   3.9374400398078814`*^9}, 3.937440088677985*^9, {3.937440213387698*^9, 
   3.93744021513809*^9}, {3.937443266012683*^9, 3.9374432673633757`*^9}, 
   3.9374433503780727`*^9, 3.937506904214542*^9, {3.9375255476698914`*^9, 
   3.9375255490770407`*^9}, {3.937572659015107*^9, 3.937572659124819*^9}, {
   3.937596357201303*^9, 3.9375963576380033`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a17fa008-9101-4cfa-8b4f-07ba45ed53e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", "[", 
     RowBox[{"x_", ",", "u_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{"u", "+", 
     RowBox[{"\[Delta]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q", " ", "x"}], "]"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "chemical", " ", "potential", " ", "\[Mu]", " ", "as", " ", "function", 
     " ", "of", " ", "position", " ", 
     RowBox[{"x", "'"}], " ", 
     RowBox[{"(", 
      RowBox[{"denoted", " ", "simply", " ", "x"}], ")"}]}], ",", " ", 
    RowBox[{"equilibrium", " ", "u"}], ",", " ", 
    RowBox[{"and", " ", "perturbation", " ", "\[Delta]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"m", "[", "\[Mu]_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["m", "0"], " ", 
       SuperscriptBox[
        SubscriptBox["v", "F"], "2"]}], 
      RowBox[{"\[Beta]", " ", 
       SuperscriptBox[
        SubscriptBox["v", "F"], "2"], 
       SuperscriptBox["h", "2"], 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         SuperscriptBox["E", 
          RowBox[{"\[Beta]", " ", "\[Mu]"}]]}], "]"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         SuperscriptBox["E", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], " ", "\[Mu]"}]]}], "]"}]}], ")"}]}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"total", " ", "carrier", " ", "density", " ", 
    SubscriptBox["n", "+"], " ", 
    RowBox[{"(", 
     RowBox[{"named", " ", "m"}], ")"}], " ", "as", " ", "function", " ", 
    "of", " ", "chemical", " ", "potential", " ", "\[Mu]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"n", "[", "\[Mu]_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], " ", 
       SuperscriptBox[
        SubscriptBox["v", "F"], "2"], 
       SuperscriptBox["h", "2"], 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PolyLog", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", 
          SuperscriptBox["E", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", "\[Mu]"}]]}]}], "]"}], "-", 
       RowBox[{"PolyLog", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", 
          SuperscriptBox["E", 
           RowBox[{"\[Beta]", " ", "\[Mu]"}]]}]}], "]"}]}], ")"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"carrier", " ", "density", " ", "difference", " ", 
    SubscriptBox["n", "-"], " ", 
    RowBox[{"(", 
     RowBox[{"named", " ", "n"}], ")"}], " ", "as", " ", "function", " ", 
    "of", " ", "chemical", " ", "potential", " ", "\[Mu]"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.937437778611351*^9, 3.9374380334585743`*^9}, {
   3.937438074704915*^9, 3.937438112704074*^9}, {3.937439161803776*^9, 
   3.937439172194804*^9}, 3.937439613682345*^9, {3.937440077456407*^9, 
   3.937440121603904*^9}, {3.937441314370919*^9, 3.9374413162089777`*^9}, {
   3.937506329396071*^9, 3.937506335005142*^9}, {3.937506978173451*^9, 
   3.9375069852995977`*^9}, {3.937524215356318*^9, 3.93752421606328*^9}, {
   3.9375719698570547`*^9, 3.9375721034125643`*^9}, {3.937572369385832*^9, 
   3.9375723780903883`*^9}, {3.937572655232232*^9, 3.937572655374922*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4fbd73c4-4d7e-4c00-8f63-53055783248c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Integral", " ", "Calculations", " ", "for", " ", "Current", " ", 
    "Functions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox[
          SubscriptBox["v", "F"], "2"], 
         SuperscriptBox["h", "2"], 
         RowBox[{"(", 
          RowBox[{"2", "Pi"}], ")"}]}], 
        RowBox[{
         SubscriptBox["m", "0"], " ", 
         SuperscriptBox[
          SubscriptBox["v", "F"], "2"]}]], ")"}], 
      RowBox[{"(", 
       FractionBox["1", "\[Lambda]"], ")"}], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             SuperscriptBox["E", 
              RowBox[{"\[Beta]", " ", 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}], "]"}], 
           "+", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "\[Beta]"}], " ", 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}], "]"}]}],
           ")"}]], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], ";"}],
    " ", 
   RowBox[{"(*", " ", 
    RowBox[{"\[Lambda]", "-", 
     RowBox[{"average", " ", "of", " ", 
      RowBox[{"1", "/", 
       SubscriptBox["n", "+"]}], " ", "at", " ", "equilibrium", " ", "u", " ",
       "and", " ", "perturbation", " ", "\[Delta]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{"\[Beta]", " ", 
         SubscriptBox["m", "0"], 
         SuperscriptBox[
          SubscriptBox["v", "F"], "2"]}]], ")"}], 
      RowBox[{"(", 
       FractionBox["1", "\[Lambda]"], ")"}], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             RowBox[{"-", 
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], " ", 
                RowBox[{"\[Mu]", "[", 
                 RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}]}], 
            "]"}], "-", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             RowBox[{"-", 
              SuperscriptBox["E", 
               RowBox[{"\[Beta]", " ", 
                RowBox[{"\[Mu]", "[", 
                 RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}]}], 
            "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             SuperscriptBox["E", 
              RowBox[{"\[Beta]", " ", 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}], "]"}], 
           "+", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "\[Beta]"}], " ", 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}], "]"}]}],
           ")"}]], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], ";"}],
    " ", 
   RowBox[{"(*", " ", 
    RowBox[{"\[Lambda]", "-", 
     RowBox[{"average", " ", "of", " ", 
      RowBox[{
       SubscriptBox["n", "-"], "/", 
       SubscriptBox["n", "+"]}], " ", "at", " ", "equilibrium", " ", "u", " ",
       "and", " ", "perturbation", " ", "\[Delta]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["I", "X"], "[", 
      RowBox[{"x_", ",", "u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{"e", " ", 
      SubscriptBox["v", "s"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x", ",", "u", ",", "\[Delta]"}], "]"}], "]"}], "-", 
        FractionBox[
         RowBox[{"B", "[", 
          RowBox[{"u", ",", "\[Delta]"}], "]"}], 
         RowBox[{"A", "[", 
          RowBox[{"u", ",", "\[Delta]"}], "]"}]]}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "current", " ", "density", " ", "j", " ", "as", " ", "function", " ", 
      "of", " ", "position", " ", "x"}], ",", " ", 
     RowBox[{"equilibrium", " ", "u"}], ",", " ", 
     RowBox[{"and", " ", "perturbation", " ", "\[Delta]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["I", "aec"], "[", 
      RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", " ", 
         SubscriptBox["v", "s"]}], ")"}], 
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], 
          SuperscriptBox[
           SubscriptBox["v", "F"], "2"], 
          SuperscriptBox["h", "2"], 
          RowBox[{"(", 
           RowBox[{"2", "Pi"}], ")"}]}]], ")"}], 
       RowBox[{"(", 
        FractionBox["1", "\[Lambda]"], ")"}], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             RowBox[{"-", 
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], " ", 
                RowBox[{"\[Mu]", "[", 
                 RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}]}], 
            "]"}], "-", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             RowBox[{"-", 
              SuperscriptBox["E", 
               RowBox[{"\[Beta]", " ", 
                RowBox[{"\[Mu]", "[", 
                 RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}]]}]}], 
            "]"}]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], "-", 
      RowBox[{"e", " ", 
       SubscriptBox["v", "s"], 
       FractionBox[
        RowBox[{"B", "[", 
         RowBox[{"u", ",", "\[Delta]"}], "]"}], 
        RowBox[{"A", "[", 
         RowBox[{"u", ",", "\[Delta]"}], "]"}]]}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"current", " ", "\[Lambda]"}], "-", 
      RowBox[{"average", " ", "J", " ", 
       RowBox[{"(", 
        RowBox[{"DC", " ", "current"}], ")"}], " ", "as", " ", "function", 
       " ", "of", " ", "equilibrium", " ", "u"}]}], ",", " ", 
     RowBox[{"and", " ", "perturbation", " ", "\[Delta]"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["i", "aec"], "[", 
      RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["h", "2"], 
        SuperscriptBox[
         SubscriptBox["v", "F"], "2"]}], 
       RowBox[{"e", " ", 
        SubscriptBox["v", "s"]}]], 
      RowBox[{"J", "[", 
       RowBox[{"u", ",", "\[Delta]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"DC", " ", "current", " ", 
     SubscriptBox["J", "aec"], " ", "in", " ", "graphable", " ", "units"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"x_", ",", "u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["h", "2"], 
        SuperscriptBox[
         SubscriptBox["v", "F"], "2"]}], 
       RowBox[{"e", " ", 
        SubscriptBox["v", "s"]}]], 
      RowBox[{"j", "[", 
       RowBox[{"x", ",", "u", ",", "\[Delta]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9374411959015017`*^9, 3.937441368126061*^9}, 
   3.937441407720358*^9, {3.9374417260089827`*^9, 3.937441728897019*^9}, {
   3.93744178131953*^9, 3.937441792750203*^9}, {3.937441829749358*^9, 
   3.937441857892832*^9}, {3.9374423889851503`*^9, 3.937442392759963*^9}, {
   3.9374424471106157`*^9, 3.937442481786358*^9}, {3.937442541823079*^9, 
   3.937442594859405*^9}, {3.9374426719323053`*^9, 3.937442676962068*^9}, {
   3.937506425118209*^9, 3.937506485259478*^9}, {3.9375065184052*^9, 
   3.937506527015092*^9}, {3.937507005139804*^9, 3.937507007693263*^9}, {
   3.937509487512788*^9, 3.9375094944379587`*^9}, {3.937524233996932*^9, 
   3.937524242787546*^9}, {3.937524384207101*^9, 3.937524479916483*^9}, {
   3.937524514994502*^9, 3.9375245216737623`*^9}, {3.937524573538547*^9, 
   3.937524654917573*^9}, {3.93752468987121*^9, 3.937525064214552*^9}, {
   3.93757197348285*^9, 3.937571975310107*^9}, {3.9375721124226437`*^9, 
   3.937572153604357*^9}, {3.937572217937789*^9, 3.937572355332087*^9}, {
   3.937572392234198*^9, 3.9375724023425627`*^9}, {3.93757243800107*^9, 
   3.93757251550368*^9}, {3.9375725489027443`*^9, 3.937572636448121*^9}, {
   3.937573690242989*^9, 3.937573710789506*^9}, {3.937592939617395*^9, 
   3.937593038166296*^9}, {3.937593071699205*^9, 3.937593122042704*^9}, 
   3.937593184398221*^9, {3.937593242251418*^9, 3.937593242517289*^9}, {
   3.9375933651123457`*^9, 3.937593370392084*^9}, {3.937593936088003*^9, 
   3.937593940540427*^9}, {3.937594362879383*^9, 3.937594367430616*^9}, {
   3.93759491579115*^9, 3.937594922834691*^9}, {3.937594995000153*^9, 
   3.937595065061166*^9}, {3.937595117665517*^9, 3.937595133497856*^9}, {
   3.9376615304471693`*^9, 3.9376615690785913`*^9}, {3.937661618661776*^9, 
   3.9376616398680153`*^9}, {3.9376616717079973`*^9, 3.937661672226883*^9}, 
   3.937661729339027*^9, {3.93856736396213*^9, 3.93856737925665*^9}, {
   3.938657116155298*^9, 3.938657123553556*^9}, {3.9386571581531353`*^9, 
   3.938657171512541*^9}, {3.938657244010334*^9, 3.938657247494421*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"cb1122be-f8c6-43ae-af3e-965d8be04740"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Acoustoelectric", " ", "Current", " ", "Plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["i", "aec"], "[", 
       RowBox[{"u", ",", "1"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"x", ",", "100", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.937442701057733*^9, 3.937442703638595*^9}, {
   3.9374431369033012`*^9, 3.937443253291823*^9}, {3.93744330885143*^9, 
   3.937443340795977*^9}, {3.937443390695778*^9, 3.9374433924864197`*^9}, 
   3.937505906042294*^9, {3.93750622210014*^9, 3.937506225611842*^9}, 
   3.937506517015367*^9, {3.9375069081163883`*^9, 3.937506909564095*^9}, {
   3.937508859301547*^9, 3.9375088936132097`*^9}, {3.9375091392139482`*^9, 
   3.937509140981044*^9}, {3.9375091809740067`*^9, 3.93750922452528*^9}, {
   3.937509278239127*^9, 3.93750930613342*^9}, {3.9375093373903103`*^9, 
   3.937509386037369*^9}, {3.9375095033741913`*^9, 3.9375095133754187`*^9}, {
   3.9375253424206877`*^9, 3.937525351884378*^9}, {3.937525476985711*^9, 
   3.937525543797576*^9}, {3.937525581787592*^9, 3.937525583100329*^9}, {
   3.937525716094982*^9, 3.937525744085823*^9}, 3.937582166105226*^9, {
   3.937582251665818*^9, 3.937582278878796*^9}, {3.937582939630682*^9, 
   3.937583016650227*^9}, {3.937583136706294*^9, 3.9375831391023073`*^9}, {
   3.937592070879477*^9, 3.937592092396122*^9}, {3.937592344204591*^9, 
   3.937592361553152*^9}, {3.937592632634151*^9, 3.937592634329116*^9}, {
   3.9375928197210073`*^9, 3.937592844647167*^9}, {3.937593156815061*^9, 
   3.937593157150365*^9}, {3.937593201741177*^9, 3.937593208576598*^9}, 
   3.937593354872327*^9, {3.937593400613769*^9, 3.9375934701327*^9}, {
   3.937593503731373*^9, 3.937593504012349*^9}, {3.937593823198455*^9, 
   3.9375938463010893`*^9}, {3.9375938837399406`*^9, 
   3.9375938866604853`*^9}, {3.937594155964077*^9, 3.937594158545888*^9}, {
   3.93759508468237*^9, 3.937595095419079*^9}, {3.937596386830531*^9, 
   3.9375963984618*^9}, {3.937661576495439*^9, 3.9376616006117363`*^9}, {
   3.9376616802111*^9, 3.937661680784885*^9}, {3.9385673411616383`*^9, 
   3.9385673574088306`*^9}, {3.9386571792400837`*^9, 3.9386571832302732`*^9}},
 
 CellLabel->"In[66]:=",ExpressionUUID->"8ef288e6-0475-4439-9068-c5c6212f0440"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2nk4Fe/7B/BDdrLvWY4l2beQCvOULS0oyr5TEpJKKuWUpbKUEimUIiHZ
zgn5lHmUSIRskaUjJUpSiDZ+9/lev38+n+t1ve/7njkzzzwzXaXkf3BXEDuF
QrGF/7D+f+rTjh/Ly2sxxVFIo8uXQY6flJwf/AumJJSybC/8bqHmFxib6neD
qesj/h2cBUt7mPaAnyZd4WGOg4MvbesD8+i+UcCvwFsHTr0FXz3iu42WDY4V
FBsD32c7XEBZB2a3550HcwbZGsp4GWLKgZMrqH4MUqz/eeidywaYwhX/aQd4
17MbARov9TFl+J7LGfDJb+ahaWN6mPJ+Z3sDuPbYjZByB11MKfjbyO0P53tl
N3Xpujam6B9O9QXb5j6x3zKliWkNREIzuLD5eN9hDw1MWbNkZBrAIL3jr0p0
FK3BlDq5O03g074ryvjF1DBlf/28VyCDpOgokpYJqphWuCT3Fxwjuck74bQq
ptSvbl4CLyz7/2s6Br4YGcEWxCCnuwo3bg0B73XAXODBaN1aRwfoz21xEgFX
N5pXeslAPku3UAOHeXrmH3uggvHe/dgePGF9evOjQhVMqeUy3gkO1Msb/X0L
8ozpQiewO/sHxdNXVDDNdedZV/CWogM58cegvn+9hD9Yde5ExuVNKhi933z9
CPht8vVz93uVMfYMOpoJ7n5OLfXtUMaIaLDJArct3+uUaFHGtL2yYjfA9Yer
ZWiPlTEl1CcnF3zHo/u+cz70W3mGF4CzM9w7eXOhvqVNvBB8tWN0rj4T5g3v
fXgPnGg5Y66RBP3FhR9KwCFaKzv/RUB+cM1iBTgg6OpcVQjk9x+FVoE9b62S
CQ4ET51/Swfbi2n6d7mAt/jergYb/rGZK7SA41nt7f8PrGXcLu1pCvNiXMSe
sH7vwd3mIoZwfsWnbOrBkmMBiSdXQ7300FUM/vOSJu0oAPVcU68awXMcPOac
XGDB9KbnrPtlccmvblkJ45gt1U1gZlVuieqsEqbFbjrxAjwwpdoxMAW5sbF9
C7hLrXT24jj4yjXpl+DGG3VmvwbAh9nTWsFPejb5lXWD71abtbHut2BLQsAr
8ID+O5bLtziWSDcrYXTY+tgrcNHZN+2vMJh4wdEOvv3Ye/ZsHRz/UMo5lm/8
/ChlygDfCVxmOV0/zOzrA/BL5dAOcErInO+dezDfKusVywkFJxNcbsO8Fxkq
neDTI+wlAtngA1/CWD4mndTecBXqbwSXshyxS2Q26iJ41dAIy/tTsqS0zyth
ioA452uwf5Oi2egZON7bYQWWPSj3fDNPwjxbLm2WnTfoJmw7CvZ1+593HHlY
TDkI8+LvKLJsU2bW/jAY5rmU/m8eMfHsR4g/uAX973imytukqJ4wf6VGMcsG
nl0be3fDvBydvSxrZrr5JjmAdSQlWFbpZMYTdtBfU/yQ9Xvl+IKL5zaDw8ps
Wfaub0tRNoN51Q3k/65npEGEozE4TUON5Q9qmU6ndaF+w/UTrOuvNvjbpHQN
uOfpY9b9Cb7kI/uWCvZ1mWLdzxLLxn/csuBHXLws65WmNgYIgPcd5GGth0jf
H/cuc8L5pZ393AxmiLskk0tUTFMPrGWtJ9NT1F2rvlMxYppKstbfCYMEY7vP
VNj/Yu4+Za2Xj5PSx8aoGCfoKDaAN9vT33X1Qv/5sE7W+o5nl35G6YD6/E3c
j8HN1TGFui8g3ya0pg68XdEmLKkO8kQxKut5udhd4lhLh/xh/CLreXp9Tsho
vBTye4G1leA9M/2/N90Cm/VNlYKzCsxHDmZB/ftMX9bzOuh6pyH3MthGtY71
PPs2HDj/Kw6c9UPuDmt9XFmSqAyGflvljAxwqU3ArxE/8B5prSus5+l385CA
B/we+e35F1nXJ+ByfvAOyJ8kmJ5jXR+pn4mZNpCXpDvHgRda3UMaCfDhb46x
4BgjVQOqIVwvntSJKNZ+NHFe3F4L+o+8OBsJZsv9unBSFfIJqz9hrP2Gs6b+
jST0u7yLDwQrPEjPUlhQxFh60xcHcL6El8+JSXCnafBWsPppNbW+QUVMOf67
3oq13hwe0VOxIkY10QumYKvvI+1/L0D+3CBOEdziVpThGgN5rusTadb+9PSQ
JyMc5hXZtbH2c9d0js8HnBQx7fJI0ArwAWNNzkE5MG/WkQ/wfojkfHQvSgj6
tz0MHgKf6LXdKsoO83PbdHrASUeDLtl9UsC4W0L9GbjkYZ5MbaUCph3878VN
cFWC3mOnAsiFAvQzwHW7672/ZUKeKxuQDH45P5ivFgN57WW1Y+BJYyndDBvI
tWcEt4NnOAs79dcrwPvkaC0CL/YaHW7Tglz+kJoxmCdqV+0KEfCc5XZ5sHp1
6ubIQXmMglcUfob34T4TDheHCHmMZyIfR4PDudJ/ffaXx7RPC2b7wVF9SjmJ
uyGv94x0AydGEaNPNkC/XOAC6/1aWH3igDanPKZMjm6dg/dvWSKv4IsFOXjf
LO56D67ek1UR8FkOI4lGrk5w08+H8zc6wD3XQkvAH02+x/LekMOUJW5BD/AU
F035bgrY4rGjDXiuT/A5ioV5P6aMDMAcx7T5ogPlMK52HOIEq9bsuzquC/Pm
pmNL4HshYN1I0bNnqzBFL6LzHXx/7C1at8emZhWmHbFybQKHyFxe0VIC9uc5
XgqO+GPp3X55FZzPWOwxcAxZLDbgA85MPckDjtVf0eDhBPOmb+d/8WGQZ297
ho/YQP8lU7d28Pk4oZYxHcj3De29Ar5qe/T09B9ZTPWNYoqDr9W2ax36Jot9
o0zs5rxhv9dQH5h9D3buNewG5/EPrv3VIotxze8zl8APOtDkiixwDn7HBm5y
EXCWMZLFTMVgzjZPWK8vgthy1oDpJvfugNvWk2UKq2RxXkpUaTS4a1Ukryq7
LKY8lRpQBr9796Zet1MG00g+2kEPWB/78jWsQmUwdedmqQk3eH/2/+1r8pHB
KI5jig5estsTb+ckg5kbLSmxYA5t3nf2G6A+Y+2wKFhkJvyqG48MpixzKRm4
wv4dvWE5vEAa1id7lPUeBomH7TXHMqUx8n8csbQb9iPLgN0uF6Rx3uLK3dXg
s4Ip94lwadi/B18qgwcKhl2ETaUxRfzN769OsP74fpyN14Sc7teVC+aI4Cpb
lIP+p8zI7WD9jXoco2xQL+f27+4uuP6vaRWVrVI474nmf3Y7YX9YlzG4ul4K
U+arvb45wn6UU8x1o0IKM1OZBelg5r4uz7MZUD9VsbLfgUGuW1LhdfKRwrhR
pt7BHr6PNZv95n5IYnTrH9fPrbAe0gZTgj9KYubpsqQ4sOjPbzVDbySxb9B5
LyGwRYO04PPHkBs39CvZMcgMl5C6jERJnLeW47iBLew38SvF1snCvFOjNfOb
4XttUsnivgBYjmttEDjCwWS/4rIERsa56V2b4PtL1ofk/iCBmasTPhUiBvmj
ouJA/wPILbw5jS3gfTfs1Hh8kwT2FU9YxTSF76cPhr97jMDdNw6ZgBs/i+jr
q0vgvKQdZ5LWwe9Z6MgeF4TcmlmuZQL3S3T7YachcczMmD+ycy3sPzZWyjrH
xDGee12kosMgLXeouJ4PAesOT+3UZpA9TuwXx7ygXqQh+JQWg/zpi39dt4Jc
R+RDqwaD3HjS7DWXqDjOq7k1bq0Gxy83ojFLxTDS1y+5q8Agd1eLVW/ME8OU
XdULd+ThfB7/+JKZLoZ92cl3OXKwP72scNlxAvLvpFOiLHxffNDWq7MVw0xt
tnRdSQbZJ716JP29KEZsd01fCsB+pcgh/q1XFDs+M2lN5of1vHrMbmuLKDwP
Yhvs+Bik7NrbDykV4GLR6Bpu+F7YIZ8adgr6q/X++rAzyE9nJMxspUWxsHBt
X89POsl3qvxbOp8opszda9Sep5O60Xb5zL8i8H543nx6lk5GhZ/iOzEqgiMe
zT0WnqGTXB4f+0tLRDDtzRz18wSdVDV6eFTUHHKNHR98BujkFj0HDR89yJGE
lsMbOhmqOTl0Xwny8f1q63rpJIMqb2XNJYL1Q6f7ZzrppOXKBNHoDmFM4wqJ
4HlBJ/3HncuH/YSx/t6wuEoGnUwcnfbXdBaG50NjSbGKTpYMnZc8ZiOMO59y
xCWU08kfXY9PCWtBrhBobFxCJ9lj7bISJ4Swvj7tu8otOkkYTL7euVIIO2Zb
7FA5B/PWyK//8l0QU+UmP83G0cl2+Z158X2C8P15MfURjU568z0Kr7kliH05
I8JUTtDJmLHz/PKGUB8gdTUslE7WZahbT+xZiYXrQkfr7Okkj8enADYz8Lms
4OGtdHIPtfCsrNJK3DnTKz1rA+dXooK3fxHA+hecXBcs6KQGVthYGSuAKaUG
v7x16WTWZ3GDE0X8OG1rRU0iH50cL+92SE/lx74JWY9fcNJJo6NXwksj+THN
+4z9Hwqd7FgWKh0x48fIZUOQwUIVySXBv8byNR9OM2zxHHpfRR4l2OQFfvNi
x7fFRhw1VeRTDrxx9TtePBPdrLW+sooUfnna3aKRF6cpajz0uF9Fljr/vRZx
EfKRUnrwrSryw/4F0V5lXpzleZ7MSawid139ynNzGw/s19Z8xM4qMs+tdE2N
Pg+uZfhVGG2tIqcVDth0SvBgdQ2LLHHLKjKpeCKOncmNX9SsdbhiVEU21I8t
7T3CjbckjmyIlawi9ScH5vRyuXCFQl3A195K8siMjoZUPBeeMflybvlVJVm7
cMZrKYQLR1zxKPnzvJLcxKXZ1GbKhZmSKjqVDyvJXSonru3v4cQVJWxL/Fcr
yaNeshvy+TmxtHevv8v2SrIuMDw86QcHntDDaHZzJbl04OmdQwMcuPZisEbU
+koy8UQIP7rHgV0tzH311SrJrGt1Q0ObObD+8rmdh5YqyLrX7rGSJ1bgrFlz
l3/FFeRSfxn9n+8KXNv7PWDuZgW5mck+8cF2BUYnuIo70ivI1ukSR7rECmz6
eo2h4akKcoj/j5JjJTsOjkmouGNfQS5bZzdemGDDzNg9Y3L95aRV3SDvvz0U
zOySKzSklpFlJXfXN2+kYN8WXj4FShkpnX1w/2UqBesPX99e/+4B2bfAdWVb
zzKJRf1uy918QK4+uUc49/cSyWOZ2r5N6gH59My8ALL9RzLl/K+5/rlP/r24
liuR+YvcorC6nyupmOw82BwkW/KLxA3Zq8J8i8l8R4/nZYd/kbWcx4rOmxST
W0Xj4t9w/SKzjthVMEeLyOsZXewaOovkzEzOkJxxEWmSc2i59fhPMm2oWk+y
vZCMKC5fFBGbJU25eLK8XuWT+oLhcZuZP8jor/lVl2/mk98jtQUPP/hBuu5b
EXPlYD4ZaVas0mP7g6QmL+3/K5xPHu24Y58Z851ErWVmZ3feIWc/a9kZt30j
P2TOfB1pySO54hbzbCInSfxkywW6aTa5Z6/K7a6YAVJ6dCGZozKZbG4bSFrr
1E9Q6v/NJkYkEcHRb5s9tAaILeoFSnvckgke1UGO+BVviYkLFeOfN6UQW08O
ne6hDxJYgv7GQ/Qi0abxLvKo+DuiZ1PaT/7+NCLYMvLB4Of3xJDkug1+4VeJ
0LxjGfKlk4R64c/+lsPZhNnPBbqB9Gci2oXO+Wc0mxDYHt1lHf+ZKDrqs/O9
Qw7xYCFaKNzzC+H6Ay+2aeYS0/YnLtQLfCXQo2ebxoduErWn6+vLTWYIGnKV
CZC+TWzQaahyvDZL1LazGRnbFBDGPX2Z9S2zBJ456fzlcAGhf3LqhPbfWaLf
2Swo9HYBodYiZcnjN0fMzNPsXv0pIMSCwrtJzXki+lyd8t8Hd4mpnFVzuvU/
CWGVAaNC7nvELYEo45UffxGOciEZx1OLiRv0ZJmTUr+JtML49Cf0YiLT/fa/
CbvfBPXt4DIeKCZSitqeN5b9JmYep0dxri4hoq1U9sRE/yE64w630WpLiF0x
nVFf+P8RpuQWX83u+wR7lMRQoAwFUfdRHqi/eUC4+5Z01RpRkH7j3pV44QFR
tZVoEXCkoDQPtSx+6TLCX3F/NSORgmaKEQW7lBFPXzxO45ijoLx87eyC7jIi
blWgdUE7G9KvfHrh+pNyYojz18bFSTYkHJJgfGWgnDCaSTXczsmOEHtNmuV8
OfGhsUZxbiM7oqCN7yckKgircP7flsXsqH+e27Z7awXB0VBVNha3AjG7leSs
yyoIz/u2d9fdWoGCC4XkFeoqCEbGUHZy3Qqk/+dXad/zCiIwhOvC2u9QH/fd
89NQBfFczD0gzpsDmZ402JbKW0kk7mWTVlnPiforX04peFUSI46ZgsecOVFF
ZuJGgX2VhMlGLc7Wg5zohW9/61BEJTEutPtHZCEnonby3FWPryRsHhW1PRXj
QvpGZZ8OFVcS3AKOZ/ynuRBTlalC+VZJuK5xxya83GjGvGdIaqGSKNkcuMyn
yo3U3yunSC1XEvbHo0/R3bhRlkJ2ZYdgFZE5nnec4zm4xc5OQ6eKUGv4fqgw
mwcV1X1LqwqqIqKH/lScqOZB0kvu/wJCq4iXC5wz9q95ENN79g3lcBURrisb
vsDFi/QfLpf+i60iqrM3h2yJ5EXCtOxs3utVhHVUuv/nLXxI/1djybVmON7l
3Nv1AXyIMhzoIv2qipgovce8chryy+vyz3VVESlj/3lvZICHO/sNh6uIHscP
7imK/MhX/sUU/l5FBGoZO+n+5Ed5zp6cH6ToRLUNcYVdRABFBF6MCpSjEzz+
dq/7tASQYzPVp49KJ0qzvBxi/QRQ2qcrxCUNOjHHmbits00ACcdQW9w20Ik4
Zp9lZP5KxCziVT3qRidGHm0Li368Ejl+Ih1GPenEhnSceboXcqWffzb70okZ
65LJJG5BFJGxafunvXTC+/6pS/kHBFGaceuv6sNQH6U62LNWCFUIe4onJ9OJ
TIfrHIPbhVDavoPXPS/Sie/qgrqjQULI8Wix2+rLdKJocIH29RrklzS/52TS
CclNrWpcf4UQhZFpvOY2nfjFuf7RKn9hRHP2Fn7CoBOFkbOvboYLI+SW/mBl
DZ1wfvfgvdJJYZT3TZzi8ohOVNQqC6hfFUb6Qg6rep7Qib0HBHyMmoTRzCOn
Eyea6ERP5zuOHZoiCGcq3L7QRyfOmt+Q6TQRQWlJ/mYH++mEfomzrpOlCGIW
rHxl/5ZOJMe1uLh5iiD9QHepv8N0YrMJvSToItQfX7VZ5CMcLzvR8fQPEUSL
SH9v9INOtIolfhKiiCLhS9qWY7N0Yjw54fTtlaIoIrWnKXmeTsjFxJc2qosi
HDoR37pIJ857nuXh9xFFvmx609zLdMJX/jS+1iqK0vTYtsTzMYiTGadcNAZE
kSOZGT3MzyAyV56arhsXRXmf0yYMVjKItn8n5UbYxBB10KupTYhBmI4cj1Y1
FUO+ezi128QZhPCto/qVBWIor7kkY0meQWhJHW3eXCWGKFpGr0QVGYTNpSPe
PSTUL81rq1AZREzs4ZSFt2KI6aZ63VSZQUz4HJowFxFHvtUC59apMQhMDct7
eUoc0T7VbUvTYRCDWaHrPJPFEUWo7GWoLoP4KRza/jVLHDGXavVs9BiENtuB
v8IMcYRdQ/q+6TOIrNFgV5fPUD/ws1rRiEEcvBMo/GGPBMJ393n9Xs8gLh6/
nnMxQAKhl3edb25gEGWO7errIyQQM0JMAW1kENNL6zZdvCCBqB4nLE+ZMYhQ
D/5I08fQH3rv2ogFgwgRr+pOUZJEtOZiWUtLBpH0Zdxnna4kYt5g29kMLnm6
amp0gyTKU5fHdlYMYjIigWOdsySiWOT42FkziOBXrsajiVD/vBYZ2TKIvYnL
mcZTkgjdadrwZCuDSPQyUmEugiumk9ZsYxCFRvvLkzilEPMhX3Aa+OP7ruZ3
ClLId83ioNd2BhFIFC5e2Al5rbfWxA4G4b+43X2kWgpRZZ2JekcGcbbjzPj5
Z1JwPseixHYyiDuF1ZFrO6UQMkuJ3QcedaYmn5+Eefx/JQV2MQjfytn/DOWk
EZ52brR1YhDeITfkz52RRky7C+YpuxnEnwHe9u+p0ojypWS+HZxld/y05w3w
qv8ahPcwiNfqru8M6OC41NuXwVafJG4PfZBGVDf0+rwLg9AIvKxquEUG0Wgd
Xg5uDKKpm9Kb4yyDfA+Y3osH+1tGJHD7gbGa/iNwjrLD+NBxGZT3aw8f1Z1B
CI4KFJ27D7lLpfJH8JzXea1hQVmEjl5l2nsyiLRXC4O2q2QRzXVk3XGwjvm+
lKo1soi5OuzHHfBeOZuv55Aswsbu1+fAA29XlBtGyiJKktTHNC8GEbX1sE/u
acgLPFKrwaJ174V4kqFfzLpoELz9ekPEcL4solrZmKt6M4h6l1jD871wvM3H
JMrBHs3T73+MQn9JfHwneNHEO91rGubzKB/5DjaQNJ8z5F6FaJU3Bg18GERB
z++Hw6ar4HmzWiwFX9gZtX5tDuSzG+pTfRnElTbN0NJisGeUWgk4x/bdzdU1
qxDW4ZRoAleYb+GQ7gLHziX/BfdryHb85ZZDqOahUKAfg3gPL+soCTmEp3YN
xICnFOOMvinLIYqTp0kGmCI5dX3UHGzZV9EIVmevD2w6DPVpBq8V/BmE4anI
a8QZOURLVvI1Apstqr2svQj+vvGiHdhx+pLe/WLo5454FQk+9tbv96V3kB/f
/g+Dm6o409y2ySNKURmxI4BBdOrUPe1ylUdYuMXTC/y2KHx+217w0gqdMPD0
zTfuFmfAO2y+JIMlk4tXq9TII5ql2L/nYCqXt2tOozxCyoGvu8GaZ0STJbpg
/jU7v1GwxbGTM9xfwfuaa/6AgwJ2/DelrIAoj8+66wQyiPARtukgfQWEXBLU
1oOj3aqp78wVEBYrf2gFTnFQTHztqoBoj5aoHmDGxu+O1RehP6zdMgHMIZ4x
Hvsb+mNPHuoAi06fFhTlVkS4pdv6DVjpRbBJgZgiQh1uMyNgixizxBfakD+3
ePkVfPzD2GoRH8j79G/zBjGI8/WvduQfAOu0mAiDM7NqjhpHKyLavqVCSTBj
e/Jzt8uKiMK2W0YFPM0wDLrzDOa1TTptAP+7KJdq1An9t0vbCLDAfq6HTUOQ
l/OrWoM15N9yfJmHeTtiIxzAVU9Rl4w4FVH8BFL9wY/Kjcf9ZakIzyRz7wPj
HM3f96ngf5sCD4A7osSVLXTAQ+xNh8FTmhOH/G2oCLX4m8SB56SGE+5vpyJa
glZ7IvgPR9f1uV1QX7F/WxKY791/DYk+kOe3LaSBRdoqejuCIA+uXHMVLP3o
7qR0KMy7mWxxDbwm/ZLI/WjwsyvKuWBdWvzqudPQP3Z05hbYJOz4evME6B+p
K7wDtrIN8Ou4zHLLq3tg/z8mlbMl0N/kKlQJ3j+h9dysEvIn5Rp0cEQvdSCh
BvIwPr2H4NhyPjbpRpjvxv23FpyYsyzu9xLqjawb68AXL8ypl3TC9eKtj34M
zgkYcTQbBj9LuUeCCxy7AxPGYJ5tlHID+L75i+j2SejnfZr0FFwnVZXn+xO8
mKP6HNzAcY9R/BfqtWv3NIFffM9+8YNdCdFKdxxrBr9pTZiJF1JC+NZ8fAv4
qkWu9W5JJYR2Nya8BO+qZNxYLQ+50IbDrWBh1bZv8yqQxxXtaAO3Z45ZNWkq
IYqJr8QrcArvn+uZBlCfVPGS5a0xot/2moLrP4W1g3m+aVitI6D+2y7W3+cR
TX6brnPbwDxVi9gOcHyP6/Sb7VBvN/eV5c22EZZFTnC+5uS2TjCl7lxWtDvk
Lz5lsVyvfevrFj+YV/awl+WYW9WbZYKhvvAg+2vwBtH2a5PhMD/Ig/X3ccRi
/MepR0ehPu8J6+/riOqFv5uSYli/760my0dCxK+5x0F/+KwMy4bDWlOaSdB/
fttv1vwZB8tNf9KgX1eljeWyp+6Zrdcg31J3ieVQ48gv2TdhXoeDNcuaRRdQ
6F2Y16f0v98zIXs7w6wUnBh2juXC1NrPAnTo1zwoznIgpZMYfgS5uv9V1vVR
Pvzp6gMM88TOcLPM/Lg0eaoZfIMznHV9b7pKEvbtrPun/oJ1Pzxbda4q9IK1
lCVZlrWwnpwehPknNFxZ9y9T5Uj6pUmw7YZHrPvtnJk84TMD9ZvL+l+ARXnz
zfUXwOycX1nr4+L060+dHMqI5rJmnrWetvtNmt3mV0bYxWWykfW89VCuHBJV
RmjBsPsZaz0/0jMTpSojytcH51nr00rb9vJ7NfDMfWcMZr/lPV6lA/XfRaVY
6/l0fGqa00bww9exrPUe5fDlw9U9cDzh8Y/VYKOn7BuCvKD/LEcI6/n5YSR7
yTgQjl8y/pH1fIXL2q3vOwT9udeeV4D3fixMlUqF/u3z6iXg3Sf9TW48g/4E
obxs1u/PFedaaAF7CXRfB/eRTb1OndB/vZuSBd7DoXV05TDM71TfwdovXFNn
6bSfUB9Wfj8F7H4r3mCfhgrCl8QzYsC+zwq1jS6pIJrS03I31v3n/6Lc7q6K
aF7FPQJgxftNmVyfV8P+ns4fDvvxyVpLJ6HsNYjy63NMK7wvIgpDq030NBDF
YHetNViAfZ2/7kdNRBl/4t0C7zPrMOcMzXRtRGn9IOjvz9q/5A9aq+oiis7z
aSHwlcjzl/Xf6CFKw/22Z/A+3ZXooJNbrQ9//g19ngjW9IjfXXDKAFHEe/Au
cN8475303YaIEtl9Qwnc7v9xk6jiWkQp2HjiF7zPRznuLWYog/eZdi2C5wqD
y2XUwKWXNVmW+fJFTkkHnOM69BMcePjHgt5GcKe+1Rz4d9zygx0u4LpO1W9g
tbsyshcugUf51T+C19sOdgqkg5dkkj+At0/mnEvLBOfGTI+BD+lQ56/lgr0s
qt+DHz9U6yy8D054YMcE72pam9jYDA7log2Cg4Lnzba0gi+jibfgaL6a2dZ2
cHqrI8u59hv8unvBUt3KA+CJPmT2fgyseudlH+t8o9lngz6Bb3kas7xyVWPx
5Gewxt68XrChj63U9+/gk0HHesDWbLztR+bBY+5j3WDX/Jfxi4vgIzcdWA6x
TtkY8xfMrv+4C/z//74IUez/9++LiP8Di/yAXA==
       "]]},
     Annotation[#, "Charting`Private`Tag$892745#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {-0.07967860539190585, 0.07967860548308181}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9374427049223537`*^9, 3.9374431746128674`*^9, {3.937443221504094*^9, 
   3.937443256286031*^9}, 3.937443290826208*^9, {3.937443337795133*^9, 
   3.9374433937206717`*^9}, 3.937506290567853*^9, 3.9375070272985907`*^9, 
   3.937508902803244*^9, 3.937509145424559*^9, 3.937509191720663*^9, 
   3.937509235686892*^9, {3.93750929696949*^9, 3.937509318915319*^9}, {
   3.93750935727041*^9, 3.9375094035931664`*^9}, 3.937509559963225*^9, 
   3.937525387488686*^9, 3.937525520078836*^9, {3.937525568279763*^9, 
   3.9375255912901373`*^9}, {3.937525727308717*^9, 3.937525753774125*^9}, 
   3.9375737227025337`*^9, 3.937582185850751*^9, {3.937582260346792*^9, 
   3.9375822898194*^9}, {3.937582965582396*^9, 3.9375830316287613`*^9}, 
   3.93758314669816*^9, {3.937592077284809*^9, 3.937592094176519*^9}, 
   3.93759237017458*^9, 3.9375926439050217`*^9, 3.9375928467365637`*^9, 
   3.937593113729945*^9, 3.937593175010158*^9, 3.937593214072057*^9, 
   3.937593359573453*^9, 3.937593442502324*^9, 3.937593473445067*^9, 
   3.937593507169302*^9, 3.937593850850054*^9, 3.9375938940374413`*^9, 
   3.9375940571171293`*^9, 3.937594162415749*^9, {3.937595091712328*^9, 
   3.937595103557197*^9}, {3.937596382013973*^9, 3.937596394618883*^9}, 
   3.937661495205319*^9, 3.937661608628517*^9, 3.9376616881664*^9, 
   3.938075752875484*^9, 3.938657263730625*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"78ee9281-3eb5-4226-bb27-f8f95a3b8a7c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
L5jo+qXr4MssnVSaX14G4wxLgROZzP8DAbnGrw==
       "]]},
     Annotation[#, "Charting`Private`Tag$940558#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-15.796124888545592`, 16.034859553836554`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9374427049223537`*^9, 3.9374431746128674`*^9, {3.937443221504094*^9, 
   3.937443256286031*^9}, 3.937443290826208*^9, {3.937443337795133*^9, 
   3.9374433937206717`*^9}, 3.937506290567853*^9, 3.9375070272985907`*^9, 
   3.937508902803244*^9, 3.937509145424559*^9, 3.937509191720663*^9, 
   3.937509235686892*^9, {3.93750929696949*^9, 3.937509318915319*^9}, {
   3.93750935727041*^9, 3.9375094035931664`*^9}, 3.937509559963225*^9, 
   3.937525387488686*^9, 3.937525520078836*^9, {3.937525568279763*^9, 
   3.9375255912901373`*^9}, {3.937525727308717*^9, 3.937525753774125*^9}, 
   3.9375737227025337`*^9, 3.937582185850751*^9, {3.937582260346792*^9, 
   3.9375822898194*^9}, {3.937582965582396*^9, 3.9375830316287613`*^9}, 
   3.93758314669816*^9, {3.937592077284809*^9, 3.937592094176519*^9}, 
   3.93759237017458*^9, 3.9375926439050217`*^9, 3.9375928467365637`*^9, 
   3.937593113729945*^9, 3.937593175010158*^9, 3.937593214072057*^9, 
   3.937593359573453*^9, 3.937593442502324*^9, 3.937593473445067*^9, 
   3.937593507169302*^9, 3.937593850850054*^9, 3.9375938940374413`*^9, 
   3.9375940571171293`*^9, 3.937594162415749*^9, {3.937595091712328*^9, 
   3.937595103557197*^9}, {3.937596382013973*^9, 3.937596394618883*^9}, 
   3.937661495205319*^9, 3.937661608628517*^9, 3.9376616881664*^9, 
   3.938075752875484*^9, 3.938657266335935*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"6b79d781-aa6e-4460-9cb3-d5b1beb21966"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Approximated", " ", "Integral", " ", "Calculations"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"l", "[", 
      RowBox[{"x_", ",", "u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{"e", " ", 
      SubscriptBox["v", "s"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"2", "\[Beta]", " ", 
           RowBox[{"Log", "[", "2", "]"}]}], 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], 
           SuperscriptBox[
            SubscriptBox["v", "F"], "2"], 
           SuperscriptBox["h", "2"], 
           RowBox[{"(", 
            RowBox[{"2", "Pi"}], ")"}]}]], 
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x", ",", "u", ",", "\[Delta]"}], "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           FractionBox["1", 
            RowBox[{"\[Beta]", " ", 
             SubscriptBox["m", "0"], 
             SuperscriptBox[
              SubscriptBox["v", "F"], "2"]}]], ")"}], 
          RowBox[{"(", 
           FractionBox["1", "\[Lambda]"], ")"}], 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "\[Beta]", " ", 
                RowBox[{"Log", "[", "2", "]"}]}], ")"}], 
              RowBox[{"\[Mu]", "[", 
               RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Log", "[", "2", "]"}]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "2"], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "[", 
                   RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}], ")"}], 
                 "2"]}], "4"]}]], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Beta]", " ", 
             SuperscriptBox[
              SubscriptBox["v", "F"], "2"], 
             SuperscriptBox["h", "2"], 
             RowBox[{"(", 
              RowBox[{"2", "Pi"}], ")"}]}], 
            RowBox[{
             SubscriptBox["m", "0"], " ", 
             SuperscriptBox[
              SubscriptBox["v", "F"], "2"]}]], ")"}], 
          RowBox[{"(", 
           FractionBox["1", "\[Lambda]"], ")"}], 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            FractionBox["1", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Log", "[", "2", "]"}]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "2"], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "[", 
                   RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}], ")"}], 
                 "2"]}], "4"]}]], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]]}], 
       ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"approximated", " ", "current", " ", "density", " ", "l"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"L", "[", 
      RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", " ", 
         SubscriptBox["v", "s"]}], ")"}], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", "\[Beta]", " ", 
          RowBox[{"Log", "[", "2", "]"}]}], 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], 
          SuperscriptBox[
           SubscriptBox["v", "F"], "2"], 
          SuperscriptBox["h", "2"], 
          RowBox[{"(", 
           RowBox[{"2", "Pi"}], ")"}]}]], ")"}], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "\[Beta]", " ", 
            RowBox[{"Log", "[", "2", "]"}]}], ")"}], 
          RowBox[{"\[Mu]", "[", 
           RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], "-", 
      RowBox[{"e", " ", 
       SubscriptBox["v", "s"], 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{"\[Beta]", " ", 
            SubscriptBox["m", "0"], 
            SuperscriptBox[
             SubscriptBox["v", "F"], "2"]}]], ")"}], 
         RowBox[{"(", 
          FractionBox["1", "\[Lambda]"], ")"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "\[Beta]", " ", 
               RowBox[{"Log", "[", "2", "]"}]}], ")"}], 
             RowBox[{"\[Mu]", "[", 
              RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Log", "[", "2", "]"}]}], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Mu]", "[", 
                  RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}], ")"}], 
                "2"]}], "4"]}]], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[Beta]", " ", 
            SuperscriptBox[
             SubscriptBox["v", "F"], "2"], 
            SuperscriptBox["h", "2"], 
            RowBox[{"(", 
             RowBox[{"2", "Pi"}], ")"}]}], 
           RowBox[{
            SubscriptBox["m", "0"], " ", 
            SuperscriptBox[
             SubscriptBox["v", "F"], "2"]}]], ")"}], 
         RowBox[{"(", 
          FractionBox["1", "\[Lambda]"], ")"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Log", "[", "2", "]"}]}], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Mu]", "[", 
                  RowBox[{"t", ",", "u", ",", "\[Delta]"}], "]"}], ")"}], 
                "2"]}], "4"]}]], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], 
          "]"}]}]]}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"\[Lambda]", "-", 
     RowBox[{
     "average", " ", "of", " ", "the", " ", "approximate", " ", "l"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["L", "aec"], "[", 
      RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["h", "2"], 
        SuperscriptBox[
         SubscriptBox["v", "F"], "2"]}], 
       RowBox[{"e", " ", 
        SubscriptBox["v", "s"]}]], 
      RowBox[{"L", "[", 
       RowBox[{"u", ",", "\[Delta]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"DC", " ", "approximated", " ", "current", " ", 
     SubscriptBox["L", "aec"], " ", "in", " ", "graphable", " ", "units"}], 
    " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.9385673180519743`*^9, 3.938567332369163*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"7585566a-f5a5-477e-a8ba-0debaf12fc4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Series", " ", "Approximations"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"?", "Series"}], "\[IndentingNewLine]", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        SuperscriptBox["E", 
         RowBox[{"\[Alpha]", " ", "\[Mu]"}]]}], "]"}], "+", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        SuperscriptBox["E", 
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", "\[Mu]"}]]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "0", ",", "4"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PolyLog", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", 
         SuperscriptBox["E", 
          RowBox[{
           RowBox[{"-", "\[Alpha]"}], " ", "\[Mu]"}]]}]}], "]"}], "-", 
      RowBox[{"PolyLog", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", 
         SuperscriptBox["E", 
          RowBox[{"\[Alpha]", " ", "\[Mu]"}]]}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "0", ",", "4"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.93752359922011*^9, 3.937523779682435*^9}, {
  3.938567294467206*^9, 
  3.9385673070189257`*^9}},ExpressionUUID->"6c3a0915-c178-44d6-b40b-\
12a83149ca2c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Series",
              ButtonNote->"paclet:ref/Series"],
             "\"paclet:ref/Series\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}]\\) generates a power series expansion for \\!\\(\\*StyleBox[\\\"f\\\
\", \\\"TI\\\"]\\) about the point \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"=\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}]\\) to order \
\\!\\(\\*SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\"-\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}], \\\")\\\"}], StyleBox[\\\"n\\\", \\\"TI\\\
\"]]\\), where \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is an explicit \
integer. \\n\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"\[Rule]\\\", \
\\\"TI\\\"], SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}]}], \\\"]\\\"}]\\) generates the leading \
term of a power series expansion for \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\
\\) about the point \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\
\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) successively finds series \
expansions with respect to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), then \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), etc. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Series", 
                    "paclet:ref/Series", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Series.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Series.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Analytic", "\[Rule]", "True"}], ",", 
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     ",", 
                    RowBox[{"SeriesTermGoal", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Series\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Series",
              ButtonNote->"paclet:ref/Series"],
             "\"paclet:ref/Series\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}]\\) generates a power series expansion for \\!\\(\\*StyleBox[\\\"f\\\
\", \\\"TI\\\"]\\) about the point \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"=\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}]\\) to order \
\\!\\(\\*SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\"-\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}], \\\")\\\"}], StyleBox[\\\"n\\\", \\\"TI\\\
\"]]\\), where \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is an explicit \
integer. \\n\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"\[Rule]\\\", \
\\\"TI\\\"], SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}]}], \\\"]\\\"}]\\) generates the leading \
term of a power series expansion for \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\
\\) about the point \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\
\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) successively finds series \
expansions with respect to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), then \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), etc. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Series\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]], \",\", StyleBox[\"n\", \"TI\"]}], \
\"}\"}]}], \"]\"}]\) generates a power series expansion for \
\!\(\*StyleBox[\"f\", \"TI\"]\) about the point \!\(\*RowBox[{StyleBox[\"x\", \
\"TI\"], \"=\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \
\"TR\"]]}]\) to order \!\(\*SuperscriptBox[RowBox[{\"(\", \
RowBox[{StyleBox[\"x\", \"TI\"], \"-\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"0\", \"TR\"]]}], \")\"}], StyleBox[\"n\", \"TI\"]]\), where \
\!\(\*StyleBox[\"n\", \"TI\"]\) is an explicit integer. \n\
\!\(\*RowBox[{\"Series\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{StyleBox[\"x\", \"TI\"], StyleBox[\"\[Rule]\", \"TI\"], \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]]}]}], \"]\"}]\) \
generates the leading term of a power series expansion for \!\(\*StyleBox[\"f\
\", \"TI\"]\) about the point \!\(\*RowBox[{StyleBox[\"x\", \"TI\"], \"=\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]]}]\). \n\
\!\(\*RowBox[{\"Series\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"x\", \"TI\"], StyleBox[\"0\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"x\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"y\", \"TI\"], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"0\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"y\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) successively finds series expansions with respect to \
\!\(\*StyleBox[\"x\", \"TI\"]\), then \!\(\*StyleBox[\"y\", \"TI\"]\), etc. ",
     "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Series", "Web" -> 
      "http://reference.wolfram.com/language/ref/Series.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Analytic -> True, Assumptions :> $Assumptions, SeriesTermGoal -> 
      Automatic}, "Attributes" -> {Protected}, "FullName" -> "System`Series"],
    False]]], "Output",
 CellChangeTimes->{3.937523610796493*^9, 3.937523691741962*^9, 
  3.937523783782946*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a699b208-2d65-44ee-a0c7-e3282de6f223"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "2", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], " ", 
     SuperscriptBox["\[Mu]", "2"]}], "4"], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "4"], " ", 
     SuperscriptBox["\[Mu]", "4"]}], "96"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Mu]", "]"}], "5"],
    SeriesData[$CellContext`\[Mu], 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Mu], 0, {
   2 Log[2], 0, Rational[1, 4] $CellContext`\[Alpha]^2, 0, 
    Rational[-1, 96] $CellContext`\[Alpha]^4}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.937523610796493*^9, 3.937523691741962*^9, 
  3.937523783794195*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"1a203983-af19-4adf-a093-b14440a1b315"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"2", " ", "\[Alpha]", " ", 
    RowBox[{"Log", "[", "2", "]"}], " ", "\[Mu]"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "3"], " ", 
     SuperscriptBox["\[Mu]", "3"]}], "12"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Mu]", "]"}], "5"],
    SeriesData[$CellContext`\[Mu], 0, {}, 1, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Mu], 
   0, {(2 $CellContext`\[Alpha]) Log[2], 0, 
    Rational[1, 12] $CellContext`\[Alpha]^3}, 1, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.937523610796493*^9, 3.937523691741962*^9, 
  3.937523783810712*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"52cf4026-cfd8-4008-9fcd-9537cabf80f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Series", " ", "Approximation", " ", "Plots"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", 
          SuperscriptBox["E", 
           RowBox[{"\[Beta]", " ", "\[Mu]"}]]}], "]"}], "+", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", 
          SuperscriptBox["E", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", "\[Mu]"}]]}], "]"}]}], ")"}], ",", 
      
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "2", "]"}]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "4"]}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", 
          RowBox[{"-", 
           SuperscriptBox["E", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", "\[Mu]"}]]}]}], "]"}], "-", 
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", 
          RowBox[{"-", 
           SuperscriptBox["E", 
            RowBox[{"\[Beta]", " ", "\[Mu]"}]]}]}], "]"}]}], ")"}], ",", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "2", "]"}], " ", "\[Mu]"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["\[Mu]", "3"]}], "12"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Mu]", ",", 
      RowBox[{"-", "40"}], ",", "40"}], "}"}], ",", 
    RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.9380757881499166`*^9, 3.938075890097815*^9}, {
  3.9380759284329967`*^9, 3.938075928504622*^9}, {3.9380759753278513`*^9, 
  3.9380759768709583`*^9}, {3.938076195497923*^9, 3.938076195790224*^9}, {
  3.9380762478549643`*^9, 3.938076281086132*^9}, {3.938567258022972*^9, 
  3.9385672602923307`*^9}, {3.938657087019485*^9, 
  3.938657102242084*^9}},ExpressionUUID->"5e7b1e5b-7f84-4f34-a637-\
da675aa06870"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14497#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FqqPbgpy+vWDyHt8umw+gIVU0r23dXuMEal7AtY+U1jo4O1q1bQb3wmLMb4f
RSQWSi3mEHLqGiWIg5KswmEmmiPuDHZZfyPMukKzUAETqbXNv7gW9ZXQ639F
HY5jokN9tJK9NV+I5dqkjzXHmAj//EbvUh0heET2NLPrM9H49DFMqf9M2F7Y
z4yUZaI93LxXCrWHiEN9r5zVOZhIQX/nlkLRj8ScACNp8wADXbAbX1KOGyAi
Zyo9I5oZ6KdH0uuC333E+4d93qQqBnIO23xD2beXWLUPuFKfz0DPL77yLeh/
T/xpDhh9eJWBlO/4GSrbdRNvpAe8Pp5joKRnvJwFzzuJ4zur+M3OMNDnvL1F
Vgc7iM/Oi4PvjjFQefs1ayvzNoJqXt6Xc5iBoha7hkHhFWG2+nYp14mB7NTE
YoCthaDkuu3ss2MgKWcnWRhtJIakXIjt1gzUtqYSdPZyPeF/st5jwpyB/A4V
Fcfue0q05l9TbzZiIM5q1dEY2UcEs6JbvlePgUDG3nIJFxGLN/4xlddhoJkb
2T6z2WnEW/ecs9naDBTNntGywyQChZCo0/bru/ZN79aNRnloMkYqyWjrOn+Z
R78EhMuQQT99l4vuuh76A3UJVjVoj6CtUZkBAz35cOB8YtRzZEE+v9vElIGE
8BS12RWjZT6NlKVtDITSSxOaw5vQpe5tc3M2DHTa9/hEc8ZLNBOG45QdGKjQ
VNO+5dFrpMqs2JZwgIF6BKcqWjrakaYzP1XZi4G4R0pEX069Q5yp3TpzJxjo
1iFDM+/4LlRxm8dvMZKBDGmZx7+JvUeal4tfGSUzUMeWhVveBT0o4lCtU8kN
BiKRHq95N/Sj1Dj5b/r/MlD2xEbdUfsPaM/X0xN2HQyk9/6Ml8/gR/Rd3kAm
6ysD+dwzaPFhDaFE1bXfnRuYaOVKBmM0YRilzfMUEGpM1GaxlF6VMoKCcmPC
RhET+ai5tujJfEX58ZW5naFMpCPH/zl45Cuabzw+fT1t/V74OaPq/jckPZgR
kPmQibIWZTbrG31HA/laQ3ozTNTa/iFF33kcaUVGVDNjWMiP/rHVTXMCJc+w
aC/usxCvyiBnPMck8p12+rTYzUK7oj7F9lRPoYKELJWHWouoXX04OHTjNFKS
Oyxu+nsRBfYOV+b+nEbneyu/HldfQglwiuHlNYN8pD8/EziyhDb9PKWfajaL
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
/r8P+R+cOBjl
          "]]}, Annotation[#, "Charting`Private`Tag$14497#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
f2qIpcL/AMScCcc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14497#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4gctHf4Hg98nww==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14497#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-40, 40}, {-644.6351899362026, 806.2418348751523}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"log", "(", 
           RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Beta]", " ", 
                TagBox["\[Mu]", HoldForm]}]]}], ")"}], "+", 
         RowBox[{"log", "(", 
           RowBox[{"1", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "\[Beta]"}], " ", 
                TagBox["\[Mu]", HoldForm]}]]}], ")"}]}], 
       RowBox[{
         RowBox[{"2", " ", 
           RowBox[{"log", "(", "2", ")"}]}], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox[
             TagBox["\[Mu]", HoldForm], "2"]}], "4"]}], 
       RowBox[{
         TemplateBox[{"2", 
           RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "\[Beta]"}], " ", 
                TagBox["\[Mu]", HoldForm]}]]}]}, "PolyLog"], "-", 
         TemplateBox[{"2", 
           RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Beta]", " ", 
                TagBox["\[Mu]", HoldForm]}]]}]}, "PolyLog"]}], 
       RowBox[{
         RowBox[{"2", " ", 
           RowBox[{"log", "(", "2", ")"}], " ", 
           TagBox["\[Mu]", HoldForm]}], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[Beta]", "3"], " ", 
            SuperscriptBox[
             TagBox["\[Mu]", HoldForm], "3"]}], "12"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.938075875921027*^9, 3.938075891503525*^9}, 
   3.938075931274558*^9, 3.938075977502845*^9, 3.938076197030772*^9, 
   3.938076285677442*^9, 3.938567273544857*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8b6507a7-5469-4ec4-8cb5-1e1c3df920b0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"j", "[", 
     RowBox[{"u_", ",", "\[Delta]_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"e", " ", 
       SubscriptBox["v", "s"]}], 
      RowBox[{"2", "Pi", " ", 
       SuperscriptBox["h", "2"], 
       SuperscriptBox[
        SubscriptBox["v", "F"], "2"], 
       SuperscriptBox["\[Beta]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[Beta]"}], 
              RowBox[{"(", 
               RowBox[{"u", "-", 
                RowBox[{"\[Delta]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"q", " ", "x"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
          "]"}], "-", 
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[Beta]", 
              RowBox[{"(", 
               RowBox[{"u", "-", 
                RowBox[{"\[Delta]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"q", " ", "x"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
          "]"}]}], ")"}], "-", 
       FractionBox[
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"PolyLog", "[", 
             RowBox[{"2", ",", 
              RowBox[{"-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Beta]"}], 
                 RowBox[{"(", 
                  RowBox[{"u", "-", 
                   RowBox[{"\[Delta]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
             "]"}], "-", 
            RowBox[{"PolyLog", "[", 
             RowBox[{"2", ",", 
              RowBox[{"-", 
               RowBox[{"Exp", "[", 
                RowBox[{"\[Beta]", 
                 RowBox[{"(", 
                  RowBox[{"u", "-", 
                   RowBox[{"\[Delta]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
             "]"}]}], 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{"\[Beta]", 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}], "+", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{"\[Beta]", 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}], "+", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]]}], 
      ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "current", " ", "solution", " ", "as", " ", "a", " ", "function", " ", 
      "of", " ", "u"}], "=", 
     SubscriptBox["\[Mu]", "0"]}], ",", " ", 
    RowBox[{"\[Delta]", "=", "\[Delta]\[Mu]"}], ",", " ", 
    RowBox[{"x", "=", 
     RowBox[{"x", "'"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["j", "aec"], "[", 
     RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"e", " ", 
       SubscriptBox["v", "s"]}], 
      RowBox[{"2", "Pi", " ", 
       SuperscriptBox["h", "2"], 
       SuperscriptBox[
        SubscriptBox["v", "F"], "2"], 
       SuperscriptBox["\[Beta]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Lambda]"], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             RowBox[{"-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
            "]"}], "-", 
           RowBox[{"PolyLog", "[", 
            RowBox[{"2", ",", 
             RowBox[{"-", 
              RowBox[{"Exp", "[", 
               RowBox[{"\[Beta]", 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], "-", 
       FractionBox[
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"PolyLog", "[", 
             RowBox[{"2", ",", 
              RowBox[{"-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Beta]"}], 
                 RowBox[{"(", 
                  RowBox[{"u", "-", 
                   RowBox[{"\[Delta]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
             "]"}], "-", 
            RowBox[{"PolyLog", "[", 
             RowBox[{"2", ",", 
              RowBox[{"-", 
               RowBox[{"Exp", "[", 
                RowBox[{"\[Beta]", 
                 RowBox[{"(", 
                  RowBox[{"u", "-", 
                   RowBox[{"\[Delta]", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
             "]"}]}], 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{"\[Beta]", 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}], "+", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{"\[Beta]", 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}], "+", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[Beta]"}], 
                RowBox[{"(", 
                 RowBox[{"u", "-", 
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
             "]"}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]]}], 
      ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "acoustoelectric", " ", "current", " ", "obtained", " ", "by", " ", 
     "averaging", " ", "j"}], ",", " ", 
    RowBox[{
     RowBox[{"function", " ", "of", " ", "u"}], "=", 
     SubscriptBox["\[Mu]", "0"]}], ",", " ", 
    RowBox[{"\[Delta]", "=", "\[Delta]\[Mu]"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.938567534636281*^9, 3.938567548506997*^9}, {
  3.938567695958737*^9, 3.938567831419339*^9}, {3.938567869554696*^9, 
  3.938568035639563*^9}, {3.938568099515489*^9, 3.9385682697190123`*^9}, {
  3.9386571920927887`*^9, 3.938657194416853*^9}, {3.938658089062924*^9, 
  3.9386582147594967`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"04ceb339-ce66-499e-bdaf-42b13fa8c888"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"e", " ", 
        SubscriptBox["v", "s"]}], 
       RowBox[{"2", "Pi", " ", 
        SuperscriptBox["h", "2"], 
        SuperscriptBox[
         SubscriptBox["v", "F"], "2"], 
        SuperscriptBox["\[Beta]", "2"]}]], ")"}], 
     RowBox[{"-", "1"}]], 
    RowBox[{"j", "[", 
     RowBox[{"u", ",", "30", ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Lambda]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.938603648173214*^9, 3.938603652555851*^9}, {
  3.938657325341085*^9, 3.938657325604282*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"707887d6-d4bd-4bcc-abd0-b175f7f68361"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyMvXVUVc/3x43Y3d2CndjNQUHFFhURFREDUVFUsANMVEREVBTF7sLC1vOx
EwMbuwO7k+feu+f9vl/P8/zWeviHtV5r1j579uzZs/ecOXNL+gxx62trY2PT
OpONTWrT/7NVFjzd+G1d46NX8xxPSWmhO+wfsyCtNkS33T87ZXDSM0fwmNd9
XnU8H65f97nkODjpK/nr2CvOTaYv1jt/Tp4YaZ9KA1/ce3GdunuX6457Ptz3
T0pHvmXV2AJmXn7MV0fXyCzkd/pVXuVkkjMz9k+7SPuc5HP+LOnqZnpuiuUv
N/n73Ftz2Zj0DOxlG+eflI+8WIZvtU/8N1x7eTSNd1J8QfK4xjkqBzSaonnZ
p8/hGlmE/Pwtz4W9p4ZqiVMz6vH+xcmvbPq0x8xXf0pbN9K+JPnmK09WmOX0
tMgpRd4nqXfWU6bnFuqc4UVKih15i2kPw386DtFh53e3c66P93fRQ109nnTr
H0A7g9etkWrOzhZhtDN4pe6ZgmoWjqadwXPvdDtz3yuWdgYv4749wsxhZ3D7
wkUf1zDJgZ3Bd91dW3GH6bmwM3jjva7Tu5r0hJ3Br99oeXhVxwG0M/i8z796
fK03nnYGd3tX+vaLRSG0M/jRsdPemTnsDD5FO5Hhm0kO7Mx+FRm8e63pubAz
eLMaDSp0MekJOxd5mC3MP8lJr7mm0rw69YfRzuBB1cdMuOo6k3YGdw6Kazn9
w3zaGfzYz3unt82JoZ3J9VvzzRx2Bq9XcezpaSY5sDN4cNDsFomm58LO4Eev
fVlcy6Qn7AyeJ8Hv5JCS7rQz+MJcma/PeBdAO4NP+eHi2a9jIO0M/jTtosFm
DjuDf5/+2WmmSQ7sDN4wsqlroOm5sDP4+lxHVtYw6Qk7z0vI/6BFZEM9g+tf
7d7I4bQz+JVrQ9/ctgmlncF9H+R9cH7lPNoZPDiqQuiwmGjaGbz/+P88zRx2
Bu8+O9rfLAd2Bu+7/eOTW6bnws7gQxss23LHpCfsDJ4m+uf6dm3r6rAz+Psi
j+2zPutEO4PvLrilwKvLHrQz+PgnIRXNHHYmrx10yywHdgYPi2rWqqnpubAz
ePX6WqEkk56w81uLn9fS93/ee753YC/aGXzpsZ5xQwIn0s7ge1IO9hu7MYx2
Bg/36TrVe30k7QzuMzish5nDzuBrmldfMcYkB3YGv7Wp4U9/03NhZ/C6PTYO
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
S9lfnJNMenF94vTBC9nf0KCo5fGzW+j9ftxd2+aHtW59r+qytoY6tKLSp8n+
is5VS/Zmf9X+kh6wr36eV0lj2C839dyrE48+aZsYzH65a3O2xbdpot+ev3yE
R25rfYfzORe15e8q14liv/CeIub1hjRxlxezX3ifkmmyb8cVPaz1+O6xc6f4
/3LWvXo+dHR8bK2vi6r665KhjvNQ+uQIeJe7glsz9kvtn+j2Q/bu8Bg4lPpn
mF2gbNKIRvoEp5xfCh231mvj1b79PY91tXz8I6n/x4yFdqc4Our9G5e/tmhw
NPVfp/ZVFsb/dNOCrHXoo5Dw/vZ+Tvqs/Z035qtrrUNVnNTHG+q1zEqf4FGP
A0fdac16LVjp0/Z3NY9pqbpQfx/LeNXWf7e+XGrZx/HU/6Y6L3Hs8NkJmU/O
op4b1HuEozWvO3hvj6CeJXLkXxS/pYFeZuvlnb3Cphr8p5beyVCX9VPPtdkW
eHvbipK0c5J67sh437tzmljrMvGfunrjOSUKtx7jSf3l/UgVvanb+n1pzgyl
/jXUe41viemvtW42mfqnUe8pvpcpPWjk4+nUf6zFf2rq78N/aGXPj6X+C1Wd
0t5QN01Sz+3k3+786oHWer8OznGVWetWJdCD+m+1jG81vVDmMwkTh/fivMim
9Olxf82S1L+t9eNUpY/3xisV8mx1YX8dLPJL6G5hK88fe+tj2A8pqVf9L/7O
vhHWdUH6a6fXbLvmUtY+U2iHI2o/M0POmrN+BQTTDpst41tBn+1wpKDDOmv9
uEjVI8GGOqiu0ud73UXf7zx1oR3slD5Zd2/9eregD+2QQ+nTuUYmlxD/AbTD
ZaXPh5lnapYb58H+9rU8N/nIrDvOuZz6ubG/09V7mUu9f2UZc3QI+/vM4m9p
9Wvx2w8euT+W/X2h9mM/n/Wd3XlzEPt7zPLcArrzje4eM4b5GOqa9wflvxvr
mktKn2+zDz/yrtSR/T2u9DlcO/zuxg0D2d98SaKPU4B/9ZkzA9mv0/Jc7dUQ
f9tT0dZ85pN6v2PbrlG9AXl7s1+lLPbMqa3Ws4/c0GgY+7VD7Rvfluca9nmS
HbOFW/Rkv+aquqCAoR45oPSpKnZgv54ofe6I3divTEqfSzfiauz+PoH92ib+
o917uvJpSd+27NdxtT9/UcaX/bpjme9ltedOv6p0b+PLfpVU74lKiP+wX/J+
pIRWvp7F3wz7V5W0A4Y6Yr3SZ6z4M/t1UOnzPYfF/9mvS0qfjZ+mVq3tNc0a
Z2Q+ak82WOYj+5VenWvqIPOX/Yq0rBfVtS6Dm9bN1KQn9Z8gcUPbInHDuH+l
FTbUBaPVc29LXKL+qdVzn0sco56lJA5rwS5JXbc2bsI8f7N6X/My1fKjDa52
pD6SP9TWum+3xGHqE6Xy8O6GfL6Ykp9X4jz1UeuCttiz1oPzMyKozxNZv7SG
f5JGJfd0ot3wXn7f8HL7ztb2pT4ZZf3SUsv6pRnWa22jIT9X66M2StZH6qPW
U22mrKcc34HHZpeMnKJpix/GXl1fcRH13CN5gnbqw8NeX3dY4yrOZfXuv+nQ
nIiR1FPlCVqy5AnGfEkrZcifVR6itZY8hHqqvEVLmWTJW6in46GIRkn5nLV7
5QI3jp0awzgZrt7jDJzw5GWDv9Z6QeVvWt1Szg+qrx1M/XF+7O2NG49ufbPW
BX3Ve8ApkqexXxUkr9OmSF7Hfv2n8tI4Q947TT23teSN7Fdr9dzzkmeyXzn3
zOtqv6G5lsOn/1xv91j2q5fSZ73ksWw/QMZLTx/ZOPWQrwNYRwxVPK3HzYb/
y1+p/KpqbMGNfot8NMzHz8K1LsK5jwHuni9L8P/ywcpPqstzdYOd9dhW3onF
42ZxvueSfumd2rh/MfWLcsALS3/JkZ8nPHX3M+fn6G921f763bU7AjJO1fL9
e/+bHqvuGQa/rniU4rBDPiXnaZnw52Y54IvVc7+Wr7q8d/fJzDdmq35dF/8h
t1d5/q63WieXo31oT038U99262SacVNj2C/wJ+K35MjbZzU9vGmbKW+Hn4zG
9/UP4r6GR4zkuDdScub4D6q2fOs49jcD7hNW9wyDp1F8r+Lor7OS06rlzuFm
OeCnlT5XN630PJBvNPvlr/zqRxf30hsqWt8fga+UuEGOfP7cpZtTzfk8+rVW
5fMDzrzae6a2L+cFzvk81zckbNnak/rXVvy8un8YvJriSxSHfarOy5s58kk9
fUHH4dMuPvBgvyB/uvv2FpvH96OcE+pc0Bh1LzH4AcWnKA45DZX8vDFNd/2v
/KYqD28fMLWHOQ+HnzxXdYrNwJt7jwVr5L/DpB7R+zf/cCzBlfNIrSN6SFHP
h65VpnIe1VLP3TXi2tHJn6JoZ3CvFw/G/C9vrfR5+HxcbMCYeZxHPO86eEv7
PkO6sr/gEwz9Bd9Z9/10c3voX0HpecXZsp7q4F1U/dK7TEjF8E216T8Rsu7r
c1z6e7cvPod6gn9Nc+xxu//h61VdsGLTs3wVloZR/5mq/blp9iMzNrH6SUnc
n6zuQwbPr3iA4ujXIiWnt+Qh5MvUc6sNi6gfbKpHoL/Ek7J66dejc8/0m0Y9
wXdJXkSO+mLd5XUDzfUF9D+r2jc7GxnSrY3Vn7+p81rf5L5c8seKZ1T3J0PP
Z0rOB8kPyT/1kOf+fL/xj7mOwLgcUfVLlmeW/JO8kKpTHPaOKFQrV0v2N5/k
sXrhTEl3THks+wX+RPJbctQXoevsCprrC/T37wNpXyLm7Y/1jYaxX9vVebBE
da8yeC/FHyiOftVVz90keT75KvXcu3sr7DbXEejXn/NSjzTuvPpx24Md2K+/
0l47LO2pP3hbqUfIUV8UF/3ZrypSv2izpL/Uf7Q6V1ZL3bcMfkbxxopD/wPq
uQ+lLrPGZ/VcZ7E/+/VF1SMpjsHFZr71Zp5TR+X/aWQcGTcyiR9ql8Qf2C9w
P6k3yVF3uIh/sr/5VPuN4s/s10t1nq2yup8Z/I/idRVHv36If2r1pO4mT1bP
vRTSYaG5vkB/T6g6xe98RJayZ4ZwHDfKPNXyyzyl/uBlZT/B+r5Y1R0XJG6w
X3GqvYoz1L+gOreTWd3nDG6neC7Fof8KJSfP0kJzzHKYV6jnbpa4x/FS+zxa
a3tLnOR4tZe4rTWRdYT6g7eVfR7yuhL/tYWy3pHjfUGaFok5GzbwYH87KzmP
ZV1gv47gvmh1nzP9VvG7iqNfLZScM3O6PzHLAdeUPqdkneI4eqr+lmtj2U8j
r6zqpp2y3tE+mVS9c8nPsj5y3HEOcKas48zbg3Evk+zjWfflVL0TJfkG7fBT
5bdfXrZc8HFrNPtbXcmfoO6FNuQhWoji6O9rJcdf9i3Jh6s8OY2HJV9if1+q
uizgyp93/xUJZb8SJO/SnknexXEEj265rfj/8iaqDtokeaD1fIuqg2rKfiw5
6jUHySdph8tK/kzJP9lfdf5NO6julwbPpLiuOPp7RslZKfvP5M2UngclH+b4
qn1yra3kz/T/5ZKHa38lD2d/wZ9uGTrkf3keVTc9kbrAeJ5NGzv89G7zew30
d5WSc1rqC/ZL3Yesqd9JIb+juJvi6NcSJaeLvEcgL6D06Sf1DuUY75c2nB/T
ati96N6x/zL6SRlln2nyXoM8XNWVN6XOMp4f075k+nag57VZxvdB+kHhxvc+
up08l5y/q5J60Fy7T0tpT/DaSxyqmLnhfY0+SuzMPBztz8/p3H2y/RSjnfVo
Q13G36/ZvnqOuT30wTnM+X5V034ua62bwMs0itj0ycRRR4CfHLIqIXVMoNGf
9aOqDoJ81AWHY1un9n0aTfngxze32NnPxCHH+Hso4Mb7otEv8AGxYbVNcViD
fOTVn4/PSjO7hPU9Dr4LqP8z3aeQk7MN5/Qc9Bw2g0ab+b/n5Rz0IgMCqgf3
8aY+4H6GvBd8VFxMtLk9novvBYoWz7Pqvpt1HoFfW7StoZnjueCz9mSpPTiu
P58L/vfXv/kqeFm3nC/N7fFcfBdwN+vJ+1c6jOdzwQu/8atn5nguuP+xjS3H
tRrO54LfNOSN4BN/Ljprbo/n4vy/v3A+F3y4yOdzwfOIPnwueD1DXgf+TfrF
5+L8f3axA58LHin25HPBr4j9+Vzw6ob8CryijCOfi3PIA2Tc+VzwUuI/fC54
RvE3Phc8myH/AW8pfsvn4pz8Dqkf+Vzw4VKHcn6B31T5BtYvrPuF/rPsD1BP
/i6DzFPqCT7RsF6Dn5L5Tj3xncKlCkHTXl4dQz3Bg880bWbm0Af8gcQZ6gNu
J3HJuD+jHTasm+CxEt8YH/CdwnWJn5QPXknisHEfjOsX5IMXk3jO+PxN7c/0
lf098lTqPanX5mvvgn54Uk52xQ9fP1NkhImzvlB52lbh1vpC8Qkih+MbruLh
WRUn0R7fcRy/0m7Hqqk92F9857VBOPtrvK8Y7Wep/bqGxf+cGrJ8mmF/o4We
Xf3umGFd5u+Rob9TlByPGd1tA0xyIL+02vdwS5qakrenB/dphyk944aVSpqe
qgvtg/w8j+wXWd9bqbx38M4C5fP1tHLk7f1kveB+NfLbwyKfHP48bmeziG2m
eYF+Ge/X/XddsN6jC/2xri0ROWyP87rv1P234Pxdb3XPLTjOZ0ap+2zBcS4x
SN1bC47zeCXV/bTgOIeWUd1DC87fXVX3zYLDbuoeYEO8ctLUfcIGOS5aN3V/
7L/ro5Pe61S31ebz5+D31D7e86G9f3+LGKr9Gz+dtKVyXp32/6jsf8xgf+M9
q+DJqv0+Q3slXz+kxuvf+F9LTzaMy0vFPxv4EjVe6w3jFar4HgNfpcYxwjCO
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
0l2L+R4fqudQcQxx71Jpy/mTIzNVHAM/MbZ2q5dtm3D/FryL38l7Sd72fJ9C
/1HxrdD/65xPXXPcboz3EfCfVSKf7cFLiHwd+4o8d63uqcC+IngZWXe4fwj+
WNY1xk+Mo4Oss4x7fJ8i6zvjP3h9sb92QdkNvLfYU0tlyNNeqzwt1b+/U697
XTi7ye+om5bawDXFVxm+k/JT30nh/SbkX3k/ruqEaQ3oJ+DRtne2TWjciv4P
OcV61Ip4ti9Kj1Hn4hC3P8Vund//qJu+wsCfKI5+gWccks3NJEf777i8z8X8
6ivn92g3cOfUFn20Z+r32SHHQ/qrfzTwPoqP+P+Zx35ReezV/+P9SDn13hl8
c66N5Wxmj2G+QTnDRhdu2TVErxSZOtTeld8164fEDlo1A09S/LXh+7h66vs4
6Mn3kmJ/LUyNI+zj9ePk4Dt3pnIcwW2HW/TRsin9MX/rDW+R6r+4sTp+jx76
F1H3TuD368ErbXxwa+CEwdoVg30ClH1wHg/6l1ff2eH8G8+fDwi4Omz/IsqH
PkWGZ88bd60zOb8fVP6MdRb7IY1tBxQYtnQa11N+v/B214T9Hb3IuR+o3kfj
vCj06Sx24DkK2K1c7N7o4RdGa68M3EvxgWo/HPqP2+aQpcLVOfyeC/yRnJPX
q6v3v4yf8l5Vhz/zfdn4mwtiHs6kP4PfVfyO4fvNRur7TezPI08eKeffuD8P
/nfE6LR+n6fo2G8E98z8tM7P6Jk63l+DZ5DzcjreX4MPqFDvQ906w+j/GJea
lYbXio3oqT9U8xq84qc3D2bNb683OPEv76t49v3/nneNVOddbQ18mOKBhrw9
UuXtruqcJNaXz3Zt/nzZ78Zz4Gg/XZ0jxTk6tM+q7qNYq96Dg9ed/zDo3u4m
2pTCEdvuxL9kfp7H3iKfeoLbyndeureyG3hDkaNDH/CB8t0fnwt/7iZ25rxG
PuMudtauqvkLXlPd/wD54PfkO02tjOG7m2bquxtndQ4Bz11ZNDo4bEJnPVbF
c9bdUUsPJn3qRM7zJyrOVzLIb6LkIx6CH223es3ihzMZD8EvKf7a8P3OOvX9
TsVvocvm2T/kulBteZc73rHOeloDL7RM+Cv1ngvzvVjegAebr8zVCqnzouBD
ZP7y3BHfZ8k9MFpvNe7I99Lse5s3eG+APlXNI/DGT4+e2/d4op5TnRcCf/73
xsgdb4J1rOM8lyLzmus4+EnFG6j1l9+rPiq6ZGmlUL2qgS9T3E7ZgfvYNW+n
3Pjsq2c18FGKV1b+CT9f3eHDvanf3XTEPfjPDJmnjJM8T6X4KsN3VQ3Vd1W1
DHquVHomq/gGnnPb8O69ro7RH42L7NkyMpl8XY0DzWYvCtK/G/hBxSEH+s9u
l6/xk3VD9YFqvMDz7yyX0NTOVx+i4iR422GO66+2H0I5iA8r+7T6NT5XPx35
JPw/v9+dzfYxXTS0h7+VkvVRv630BN++4f2M0Yd8dZvx//KHin9W7bGeLil9
IfHwijnUBzxp1OHhMYUjdby3hT7JEs+5boL3ndi75hzvyeQYlwTlV9PUPRuo
F9qq39W9tDPFNXK19R6JtfqpZJ9sI/Tsyn+gT13JN/Qe6v4N8Avq92qX+6bM
s3e13s/Q6GLmlqkujdXznUnlHGlvvZ/BpsDlo2V6vHBcqdYprI8FZJ7qI//9
/TL+buywwil349/ksp7HXvrGp8WjifrzcanC7c/kJQ9+ceN2mF1Pvfu91I0j
Vxcg//nacs5Ka3rxb1nXyFzMN061uKt97DFO31st1U3zfUDghysd2L8lm7ee
Z/LfoUm1c3E/qnDn4QmLxgbqM57YlHLNlZc8+Wzj82lLt9P/usi5ZXAbh8LZ
g7J01B6qe3LgzznU75A+q/33gPneInCvHWlrZO09SO8WbTMoKT6P9T3UoElH
01cqr19S57TB75S0nNvXJuf6tsneNSvXr8HyPYK+R/3OHXgr9buff/6/vr+2
6X6oUmubeP9uedg+sNembgV2VNdWbLHtl1Q7P3lT+Q5CC1Z+xf0u9fueF5Vf
8btjH4sc/v4mvy9Wv7+ZSfkb4kxXOe+qeyp/Az+tfk8T/sb3zgMs9tHyKn8D
ryD21KqouIf5cvu35XscfbnyQ/Ad8v2OHqT8EBy/awk/BHeVcdeeKT8E/9bJ
4ica/JDnauS7Ifoh5mmI+JsGPwRfKP6pwQ+xThUSP9fgh+ClZV5o8EPwWvLd
k/ZU+RvikuZnmY//T11XGpzjFYUZW4pRRuezpK0QU2MvtZbqa0ksmQyNVGKJ
JZWICGImkvikykdCGWZslcTSjFCM0iq107dIVJKSCGJKMWopmjaWNomgTb5z
nueb3tbfZ+7c99xzzz3vvefe85zvxqi9AX9x1r1+rXNqb8DTJJ/Lcqm94X/n
LXlq9n61N+BbtK5ie7Ur4BPEz1gZalfAUyU/zjrcrHbjoUGe/L5Yycuz5uu8
YFyDtb5hsL6/Be6v9Q03apwN/s0r5dfLq5tvsis0PkO+mumny2s2Wm8ffcl9
t3l+fKLnR9x7ws9clXetlBN+IE3ro0FO+odaUh/tgsYrgOdoHTTcVwIfJfEr
q1Tlhx8okXwcG/c+wAOLO1db2WKK1UTlB25LfpBVoXFL8hJEd4nc2ddlp6ne
gB+XPCbeI8Bv2Pq+DnEVtK9VcLT6a5dmMa4CfLXkYTE+jH5m6Lu7ica+PUn3
7RkqD/zGK9K/XUP7B35N5Leeq37gB0aIHuxjxn3ucL3Pbab6AX7i1R8zq/Kb
ML9Yv9sk78DCfMHeyrTeEOYL+COJr1rX1f9jHXXVOj41db6ADxM75HwB/0ry
Lq0M9bdYF3FaZ6er6p/5rWLn1t8Foh/giySP1eDx9sRvY9VueS+pvLhharfA
Hyn/Ld4bY30pj6611YhHTdJ41DqVH+vlF+VdnKJ+nu8ilP+wleb3wX6a9in0
3VmSYB9R/wA8WvL++F2MK1nzCo9qe9hJHenHitbvQs8+yjv3ln4X4602Yc7l
9FNJdrrKj++2U96zrcZ+uIfuh8FXBv00aDP+3IGsteQ3A36ifMawHZ9uIE8m
8KEJC4u3V+Lg2QO+5FDe3Rf315p1bG3XpIhFax1L+Z8FPkDzi5HfB/xusrXj
gZeT9sA4s767A+8Z8FRr8+R6m5zk/4Q/LG8R0MMKSzfqsg2wU9O9b7xfiUN+
4I5ljuycIWsoP/B+8x4+fJy5hHmIwH00X9jxkvd+4HdlHHVphFdRQAL5DGFv
EUduxx5et4rfBT4vdElZWuPFJl+unbWvw8WyIyvYnnG8ejc33JrlYnv459+z
rlyZUZjC9sDn+N/bPmB/InnqgI8eVNHQlezhjQQe2G5J4o7Ogy30Q56ik/W7
F7SdyX6AV2geMeYF9j/O73nA3f4JnBfg1n7frDuVOOQHPnTwiaOlmTGUH/gn
D3N2t74VRLti/4LTroD7SD/kawXeXr7L+QIeKXLS3oAfv9jHr7yyn3/zjdc8
Br5xrC+s67yC3GqxU8O5voDX3tbixrOmsdQD8CeOtbOrcOgB+Nu97vkWTv6I
egC+MKT+8DYbh9E+gSd6bRpVMiKe4wV+vXXGxxsOevjh+X5J309CD8D/zAks
rGoPPQCv0df/ZtG12Zxf/Kfi+3U59KxOJMcFfF3h+TeqcIwLePIPFzq+e30c
xwW8Z9P0bWULhv4n/9esFw88rVFG3xXtPHUugKfqO0+MC3hS7oUtVe3xXfxP
G7b/4lpiVH/WR+B9jb7zRHu+dyqbm/n5yW7E8Z8tnftm7+KF7xGHP+8w1Vk9
43Eg1wvwGM3/Rb1v+Ldk5VEEznsB5RuE/TMeHuXun/3An4xVHj+0J+9fkltO
9g9/0kH59NAeeL+n7vHSnuEf1uh+kvXrFR+k/HLoB/g37dx65jrleTZqz4i9
RaM4v8Bt3X9ONP7LffW/DHnI//Zo4E91IhbTDhnPETuhHQKvq+dfyA+8wwjh
c4P8wOuLfVJ+4GFiz5QfuEvsn3bIPEpZLxwX40i/9SuKuuypCwC8WNajp643
cFnXHBf3t+IHuL6AD9JzN8YLPMglfGgv/u88Pv+DY9AD2o8U/0M9MI4t/op6
AH5T/Bv1ALy++EP6GeC3xX9SHvifeOUNM8/vnfT8PtE4p1/Sczr64XlcebrQ
D/m45L9GPlv4gctt3f9B8r4CD5D/JvsHflX5stA/8DD5/1Jv7F/+1xwv/MxN
5ZtCP8DPyH+f7ZnvoHxNaA88RvYV/C7w0bIP4XwBL9FzxERjX6r88LRP4D/L
Pod2CLytni8gJ/AhyncEOdle9l2UE7iX7NMoJ/AVsq+jXQGv7uPeB3IesX8e
oOcUjAt4RuqB8M9OeOqvAS+VfSnXEfCFGk/AuICHKu8QxsX3+bIf5riAO2X/
7Kk3gXcdst/muIDnyv6c6wV4K9nPc7z4j3yo8dU4g7chR3kblhvnIPDPO434
51SNf0J+4BnjpzduHjr2pXwFRr0D+2ujzjv66ZU2J9sV1ZM8zGhfM3zSobzG
LrOun12mdS3RD/kHTkc33JjpzToO+I/EaB492sMPH34n++Tw3YHUA/PaBKce
sE7HafwN7bEeD+a5v2vW37QSjfqDZl4w5AHeQsbL8wLW45eiZ44LeKzm1cYZ
+aGLNT80xOC1yFNeixAjT/y85okbdT2sA1pXMd/IjwvV/LhOBj/JGOUnCTHi
YH4aBzPqfdiRoh/6GbSvu3rft96V44Wdo/9AwWlvzL/QPCaHka9UoPlKDiMv
qaXmJZnxh5kaf3Aa8T1/je85jLwezediP9zvaf6Ow8jTidY8HegB+7djbe+f
vxTgqVOP8cbqu2Wj3qW9SeuthBhxvGfyvoj2iXFlx7nPKdQ/5tep9VbQD+Q/
LPLQHsi3ZtQnAv5E4zD5xruyv4w6QcBLNT6Tb7yPeqDvozoZvATrlZfA4J+3
pxt1baDP9UmnGvgFBXEdYbzpWnfGqKPB+i/QG/p5PHtPaLeRnjgAvrvAqOdC
vkejngv02TLe3Q/lR/+d9N0Lvsu4eoHv3c1Z/bkumN+086mr94FVZv0au5VR
B4R+z3l1Z3BkCscFPHdujyZnnyQQx3p5vfu0DbsOxdCvMt9H3ycsN+5Z/tB7
ljiDN+OO8mawbpfOY7l8l3ogL6tRPwJ4Ynzu3mXTpnMe0U9U8ffhM8546jvw
/kLrOEBO6H9HoDOx48Bg+hPoOUX0ye8Cr9D7d6OOktXNqHcA/Xhr/A36x7or
Cpvl2hIcQxzznq/3legf40os2bUyMj7F+gctIUDJ
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8V+P//1+vs17nvDVllZFZpCJUSmhQyaxkpES2UEmyQmRLKOMjtGwy
C1ESUcimISKlaNoS5fe497i+t98f1+16nus8r+tc55xrPMfjee3St3+3i6JS
qdS9UirFyvdPSqXmysfrYkFRKp2m632Vf6s0UHQr5UempVLDcqm0RNeHiN5S
9Huiz1e6U3VXqO6/eal0uvKtxX+42t5X5WdmpdL3uh4ivjbKFymdJ/oA5c+J
/z91ZK3yj5T2Ef/Hyjup7rPiqVVVKu2m+3foWQ2UBqj8SvE8oTaXiu8K0cuU
H6f+7KP7q1TnaNF7iV4muprqJ7oeoXqXKN0q/hdUd4Dq3KN2pysfquuOKj9N
948Q766q+43qVqnuv8qvV/lE8ZwjnkvU59NVNkz0Ir1nPZXvJv7FKtuo9m5T
GqHrtmq3q+jHlZ+V+LlLxH+A6BaiJ4huqWeVxfuiyg7UdQ3Rx+jeM3rexaIT
1f1BPL+rnWXKL9WzDtH9L1Q+RPTBoueLniP+yeIfKbq2eIeKrqnUQe0eL56X
1fZn6veJum6s/DDlPVT+isrbqN1a4n1XZX+rnV9FH6x25om+TPe20zc4UPRo
3d9KdHvRDVW3j57/o+il4t9S/C8rHa9nd1D+ptJA0ccqP1VpuOiyntu54nc/
V3X7qvxmlZ+pfD8950+VP6pntBXPLqJPEU8H0XuKflL5T0rL9KxtxH+A+P+m
XPwrVf6DyndQeePEffuf3muQym8W/bzaOUb8jcSzXPcvVT9uUPmzKr9MZX+r
D010/ZXyf5Vu57vrPd8Sb8+K768PPD+qncaMc+UDVX8L8X5e8X34Ml0vUP6P
0k2in1Gf/hJdiOeW0D5jpYeup6n93fScz1S2QemKsscOY2h30RvVz33Fs6Py
ESrbpLS3ystMVqWnla3LTb+rvvRTmxfocrToxYH/bvFfpPJBKh+n8ptC33ZQ
+cW6rqb8Y8a8Uom5rLxteAbt0zb0ISq7Wff+U38aqM8r1Eak8vEq36T+NVf5
zspf1PV8pd5KFfGdqfL9VP68rucpnai0repex39UaqfvuK3yj8Q3PPPYP1PP
OURtH6zUS9c3iH+YeLZiTKvNBqozUTzHqM4Zuv+2+HKV92cO6VkX694K0Yeq
7Ejlp4vnTfEMVPl1oifpOWOVzhR9oco6q71d1PYi8c5USkW/qvxxvqfoSN/4
tszz5WyVfa3rfqK/UV5dz8hV/y6V1xBdXfQ9okeJv7d4zq+EsRDGw7GJnztL
/dlRZTerbCeljqpXn7HDO6nuwLLnzqEqryP6A5V3EF1X9Kei/5f5vfZmLqu8
HuNQ5XP1vKmi71Tdy/kHZa8Rb+peIvpl5VeKZ5zKZqiNE1X3QJX/pfKnVf60
+vS26j6kstZKj4mvg8qeZF1Sekt17lfZS+LpmXpcbFTdi5XGqvwXvddVzBld
N9H3GJT4Wb+qfLp4H1Zqo1RN11soHST6UvHfxRrFO6nNY1lPlO+k+lsoP0vv
OCD1e12kfEe1WVv8V6l+wb9X+lv3Llc7+zB31Le3dH0m8539TXX2E/2z6m0o
+94KlZ+l/EcP8dJ1qnuA6jZU3dGMP9GNRW8Uz9tKK8UzVNcLRX/NHqLUSjyN
VNZN7TdT+Vq1P0Tlvyhvr75fmPhbrdYD7lf5/8T/gfh7ib+z+AvlV4tnungi
5Yv0/lPYm8QzWOkB9hHlJ6v+SUrv6N57mb/zzyrfVmUrxTNBbT2idHjZ9d9S
WRulTro+JPNefLDyU/S89sxt5SeorJ3o55g/rEvhHb8W3yusn+rv2bnXo3OU
r0q9R69Uflru8Xy68st4L/G/pnoXJabXqO0rVP47/4m9Q/eOYu6q7hm510HW
/FN13YWxoLyP0pGiayi/TPWeVTsb1M7uqv+OrrtqDHyRub+j1PY1KnuDf8c3
Vnl/0duofNvc82o7vh9zWeXXqp0HKh5XG5U30b224mmmfK3qvi+ew9X+L6I/
RP4RzypdD1f9dsgp9E91d1PeV+k41iLW/9R7bj/ld/D/VLeu8mWqMxT5SPld
yr9T+Q7KZ+h5ddWXD5WP1PXXKq+n/N6K3/0RlZ+beu3cRXlrpSrRb7Dvql5U
toxyfmYZ6VPx1wj7RqF0AHNB+aG695fa/Fl0c/H0z7znvib6ILV1uOinxPus
7n+pdLzShsLzahvWcPEluv+78nFq52Tdv1L0esa26FaiK7qfKf3GnqV6C/n+
ys9Ozb8j40X5bKV1fFPdq6H8TvYS1f8K+UrtjRTfO6IvUX6u8jXi0S8vNdd7
/cXaxbxlXVGqrrRTblmwvvLtlepH3vf3VWof/ukq5pySXrt0VO76JT1rsNJe
4tlVZVsr7RBZljisYlkFmeUApcMjf7cbE4+HGspvYG2lD8qXZh57D7Jvive5
sK/10budwDfVvZNV/q3oIfxLvdAkvd+havNM5d3YA1N/+x7h+7fRvaMiy10H
KnVG3kVuFF933a+r/KfMa8B6lc/S/Y7867LlZubms8q/DvID8udG1dlb/P8q
38QeovLzlH+h67mix+ldVul6quhR4lvJvof8I/rm3PRNfAelV0Q30PuuFs9r
oseI51bl3yldLvpu8dRTvkl9vDV3m7covz03/23KR5XN3zjkS0LdsawnyvdS
+28rjdH9PdiDWF/45+y5qder1alljx+Vnte9JrGvoffQd+6md9pS/AvF11L8
J6T+Jt8onS+eh3PLRjxrCwaa7t9Ssay0OMhXfL+vgwx2Y6Cpy4Bajiyn/FTl
09BZxHOK8teV1pS9rvBv+C8fq+11zOvU+wn8L5TM867S1JLX6HcDP/XeCf+V
stmB57PU86IpfdW9yZFlhrv0Lu9H/uZtAj/tMSbnKM1Tnetz82+td+yi9+2u
71NH9G3sFZHlnuG56e1Vfr2uX4wsm41EXoisc91V9hhAp7ohd/kuYQ/k3SeU
rAe8IPpE0YO1jlyq/JHMsvlLKj+btTjwoDfeEMqRaZaF5/YJ8ityLP3kn/PN
Wfdn6fpBXU9AJ1LZsvDctshyGgeHKr9Cz+0r+oPM+RlKHVSndmyef8TfXvV3
iS3nnKI2dxU9i71e6VjkTXRV1Xle7R+n658it/Oi6A+R12LrAP+x5vDt9V2b
K/2l//MG6wd6ongOy1yvb6h7sHi2V9kS8RytsvOU7mUPK0xHyjvp/rmiO2Ze
T04Lawry8IVBJv5C/flS6UqV317x+/VXm3lhnkrhcUs7jOHOaquB6BTdUX04
RWNgH+RkpS1V9rbylrp/gdLR6s+C1M9g3+E50O1K3ms+D/tN49jf7RP6Iv6D
2F/Yi9WPT1V2H2sGc0B0K91rlXotfFH5s+jhog8Tzxj+AfJGbt0IHQz9aFHq
/4scuVD8V6EnVHmu/RD++4O5+Vkfvle+VGk8MnGV17j+eq/R7BP8q8x79Ufi
OVDXc7EzhL14VOCB90bxzGMuKO8ZvjPvfqDa3Ed92aHw2vkha0LZ+iv854nn
gdy6H+/C9+E7tClZ/qccnWte6j36p9T15oe6n4Vv21b00crfY80SfVBYE14t
OZ8V6GnsYXpGl4qfs03sZ/2ZejzEyn9TX29PLNv8WnifPkz50sIy1sHKN6re
y6p3AGNV7fwaWVcbXHb7LXXve7X1c2SZHBkT2QA5c1ji/aiSeNN+Rfmx2JJE
Txd9UsX9RHYZoPb/LCz3dCo8V95Stb/R44Oc1JnxKN4dYus/fwce5MbvCusY
rZWvV9pVZf2U/1FY9upYuN6WYY7XDnR90a+rD3Viyz//iW8K9iH1rU1ieepp
3VtSWFc5qLCeyneYX/J7/6L0lMq+TS1v821XKV8dWT9K9b7vq25ftfmH2nqc
rSK1/rQq+v861LrIetRjueuOFP/aUD67ZLkrji3/c39NqLscnUf5Xbr3neij
1cZpyjPGuZ57LjqmrncQz0jxHFexDvu88j6h/3N0b53ebTvkLOWzc9uUnlC+
VGXrdf9xtfVDYZ3kUOXLC8vZbQu38XNoZwDfXfQg/dM1heWkDspXF5aT2itf
XFgfaKl8pVIdPePswv2i7hGsq7p+H5tW7n2C/WIH9fktZHhkWdH1lG8fu38f
iX8+44p21Eb12DagtzPrHdeI/wPd+0w8JzDm1fYG/q+u3yuse++l/N3CdoEG
yt9R+hAbWWF9FL30CdX5WNc9VN6osH61MuzdcwrbHfYsLJtWCzos+wn9GRDG
CXvGYuX76h8dH1s241/MiCxDo2+hd6Gf7CmeuSIuVJuPI+9H1os+0fUJiXX8
n0P5myXb594U/THzVnUj1b1N7z4plCNfto4sI2Gf+UT3v0dGU1ufiv5B9H2i
Mf7WCH1eGGyazZR/Vdheub/y1wvbK+srb4CNh3ZU59Gy9W7a+jvQr4meWtgG
t33hsiLwvFnYFrm78q8L24ubK59eWCfZVfnMYJfcg/uR/33d8Dyey/5+Udnl
jIdvCuvYLQrrIugkvOea1Hvm9so/172TsEWgPyqdLLopc5x+iD5F+Sv6NzVj
2y3nM0cy23ixh2WhTb5TzfCtBiceI3/q+nT+YWwdYJbqtFPdTbn1Iupiu5ys
66rYNpOXxXMzfcYWpfxd3c+Vrxf/Z8hBup6JTl22HWMucnvZe+iXFdNfKB+i
d3sf+Ql7TuqxeIXyc5R6ia6v/FX2X6UnVffGimXMLuyZoj9H/grt8YxLlR6O
rJN8Lv5FFcuS84M96Qulp9h3Aj/9qR9bFvowPOej8CzWij5hzRzD/hnWvYeU
PxjK0cWfVnpP/N9mHjusD70i94120D25vybzGrk2tHN56jl3svKdma/MJfG9
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
8P3qupvoyWr7msx7dJX6PjjzWo3t/cncNuRLVPYl+rjy1vrPfeibyi/X9TZB
LkL+b5u4/HFk4tS4qVkqa4ctSuVPqHxeZl0PPz56IPrgO6I/ySyLMm5Zr1h/
dmM+ZpZ3wQC8mnuf6amy2oXtDydnXsdY9/Ahttdzt+M7JLalg10Bw9IxsX3r
WWT0zPrpJeLvxJhV+XN849R6xFyVnVEx/7Xi7ZDZ1l9H+beqcy57CP7tirFn
YNDweeK/wXczqDDOBLzJ6ew1kb8tPoh2amcbfBEqP4m5I7p67u9YQ/mJKq8u
OoMfG6Pam6f+1NV3n6O8O/o4e7nqJuI9FflW/Ln4j6zY9rCNeC8QfRrycmaf
Kj4q/FN/Ki1WWqp7XRP34TV8G+w9kbFtdaosx8+uGM8Hrq++6Nq6Vzcyrgy/
wC1BbsQ/0ok1T/l54usp/jtFP5lZhtyV/Sqy7wq/Vd0gu6LHtUM2jYzn6YTt
QGUL1a9NFeuZ/ynvovI9RH+bGE/0gNpci0019nrC/P9M9avrea3U9+vF8zrr
VWI7JfsHtitsPyj47BNjKub5LjMOAR0Im8cZelZX8Wyder9bGOZXX8aT8k/U
xomRbTTIFd9WbO9sp+cvrpj3GuTZxHLOMPF3ze1fOF73e+TGD2CHR576rmyc
wHMVYwnwHbRIjCd8BBkhN14IeQNbUyz6KOVDVPePsq//qdimyjrZR3UHID/z
T3NjycCULan4OScofy5yObrxsMj9Yd6CrWO+4zv6qGIcHXg6ZLzawYaPHx67
AfZM8GXIUxNj+ytXqGy16i3O7evqg58ht30AnCB+z+WiVyGPKD2jup+y3iSm
16ud3nr2EaxFqX2arOdrxPun6JfEswA/YG6dHawi2B0wPMzl7xLL2B/E1rmW
h/F2sMo7qfwZlTfPjN3ZP7O9Hrt9LeWTxLMbMl5seXKRyjeWbBecyVqd2DfV
VGm72LICMkMV/6KwnQqcztG5v9MnuXGCzdj32NcqtgH0Vv5QxW0uF/9JudfJ
Xir7ruJnDsuNm8AmB74LXZDvid/w4tR2s/6pfQnY7vHvXBp5LIBbxc56UtmY
h5a5bdvgRI6JbGdBjsQeeWrZeJc7E/u1tlfeNzOmEmwk/mr81j3Fd17msYEd
75Sy8SQLdP1y6uudlF+EXT4yLuVAbNW6Pza2renXMGZaqfwAlY9T+STxXa57
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtnAfcVuMbx8/znP02hMoeGSmjMlIqLaMhUhlly4ps/oiMJKRCQ8jMbNhS
JCIyIiMzGSmpZGVl+/++7+/+fN77817Xue9zn/Oc5z7XfV2/63c9TQae1ffM
ahRF66VRlOh/UkbRaXEU3Sv5jSyKTlRrJbmlOtvWRNGu0g9T/6M6NkTHPpL+
hOQ99X9/9ffQ/wvUv76OXab/jTTfxfp/n/S/iyj6L4+ivypRtFr6p5L31vjj
1f8k/fq/iY6dJ/kdyZN07l46p7tu8HCd87v67tN9/iD5K425V3Km/kukl2qH
q38H6Xto/G3qn6+5r1XrK7mX7nW85rtB50Tq/17/7tCxbTV+Z+njpD+v88/S
mDOkP61xO+nz1JV+tu5lMPersZ/o+DL1T5b+s45vrGNbSN9S11+j87fR+Nbq
u0d9z0neSMfOlv6m9Jul99b4czS+hY6doHt7V+0hyUN1LzPUv4H6N1H/Jppv
lc59Vf13qP8C9T+p/i107ELp72m+Oxif+95ek7697vdRjR8p/USNz6WPVH9X
zXWk7ruO9Ef4DjT/GumtpG8nvaX0STrnRY29g+PheVwt+Xv194t9D49K3krX
bCr5Vh17VnJ/Xa++9Mm63l/SJ+uctuH5XCN5d/UP0Nj50odpzBjN8RzPV/r/
JN+v/kGSN9P/vXU/7+jYX9LrSP9b89XTPe0j/UHNMUb63urvpfOP1mf6Q31n
aNwe6t9Lc1+v/qr6Y/Vvwznq/0ftD42dLX2S5Cc1/nLJgzT+Ib4f6V019+Ya
01jyLhozVv2rdOxh9d+lz9Ba8+2t/jMkn69jp6j/VfV/JPnNzGs7UV9d3f+t
+r+dxp+vY1dJ3lX301n6M9JbSd5A51yoc7eWvr7k0Rrzq+beUfoonhfvi+QP
NOYTyRfo2FrpP6rdlfj7ulXjW6sN0b0+o35e4M0ir9nb1HaUPlz6CMkrdX/z
JK/jc+j++krXX7S15rpM83fQHKukbyV9qPQX1XmT9O31v7PGd1b/L9Kbqf8q
9f9e+LsspK+VXuF5hOd3jPqW6rxn1T9c/U+p7yTp20nfVfoo6UdJbyS9ufSr
pW/OmtL9NtH53+R+Hr9IXq4x4zXmAPV/J3kRn0v385T+H6/xH+pYI/Wfpvk6
Yn8kV9X/meb4ROdfr3FX8r6z/tT/vvoz9f8Zrj9M93yp+tfPvf74PidI/yv3
9R/V+ddJj9ROVl9DHVuse/lX7STpb2q+l9V3iObToWhb6VfwfKRvKP3y2M/z
0Kx2img79Q+TcLj0ejxf6cOl/6frbKWxCzX/FanX90+S39aYDtgmtY76vI9L
/1DnfqQxi6R3lv6AzpulYyP4fvS/iz5fB/0/Vsc/0LHrdI1npY+RvIv+76P+
RPOVOn9XHXtIn3WOjl8v+WyNfVz38wD3oP7HdOxaybPVzpXenM/Ed6Pzj9D8
sdoTkn/FhqmvqfrW0/xtpB8Ze81lmrOxxmwe7ONqXS/VNQarv7f6/1FfAx07
QvKzOjZOfR9n3gv20v9umu+vwvtDR+ndpffOas13tKXmvkTj98x9/fWlz5T+
hfRPda2xup+R9Ktdq/6lmuMzyS/o/AnSe+p/L83XWseukL5E/Z9K/kjnd9P5
ndSuxnaqreP5af5r1b+V7mdb3UBT9X+HvZfeXPoojZkjvU1p+/ul5vuc94M1
o7F3Jl6Pf2rMz9Kbacw+udf3adh76XtLP0X6KOnbacxJks/XfbZX3zydn9TY
nnRV/0Hq30Xy3+rfWP0jY6+/ftI1TdRE4y+XvqPacdJfUP/bkheyv0h+iT1J
8j+Zrz0q9vr8U89ts9j3NEvyC3x/sW3yvpq4vvRluvbB0utJXqfzNwh7Pd/H
X9Ib8/7Hti/NdM7V0r+QPiXsb8vZq/nO+G7Vrta1TpN+nOTXuXn1L9O/NpK3
U7uSvRcfQudvp/l7xt4Dt5X8u+5xY+mLpG+gz3wGNlvzlZKb6XkdpzGbq+8v
jdtT+oaa73Tpr+ucntJ30vjj2fukvxP2j9N1/V91rEvu6x2gvp10bBvJ01jz
mj/lGaj/AumTpDfQ/KuZS2O20LlfS2+p+ffRseekx7qf7yQ/o/Hra76tsNeS
X9O4m3T+PdggyaPY7zT3b5L30PnnY+/VP0P9izOvtwnqb6H2P9an5pyDS6P5
v2V98p7EXj9bSq7kvp8bYtubTmoPS/9T+grJ87CTmr8Lz0DyofhT0neXPkDn
ztWxodJ3wz+S3FnnPMLz1PlfS96MPTSsv2ckH6nzh2l8Vx07Vuevl9v+zlb/
WO5P+iVhf7tL+rTM/tGxuv97pTeU3inY2w0z+4uLK7ap/0reNvf+/bHG3BPG
d5R8lI511xxfFd4/j5TcUc/ve91zHvude1byzhrfO/aa3CmzfrD03dmDJQ/l
O1HfQo1trvOP1LEm0ndgL5J+svTtpe8mfTTfrcZvxL3o/LMlX6Y2teo9qCPP
Uu0e6a/rnLt17/3VatTXTvPHmm9AZl+gqebbTfpX2FiN76ljj2jeNTq/j/7f
Lv0Vja2T29+5K/Z+Ol7jN9D4buxpqfeLBzV/T7UJue39uZL/Uf/+0n/VmIY6
d3/2F11zoY7dr/4V0ttJ3kVzDpT8ksa8F/anz9W/E89f8vY6tp/k6ep/sfT7
e03V+/+xkuvn9refVP8N6r9ex+ZW/UzbSq5Ru0JjN1A7XmN7536XXiT4wB/V
OftKnKbzX5B8o8bPq9omv5nb3/4aX0xjNpL8pO5pgPov1LHTJb+sY0Ml18Pn
1fgbpL+IPyb9Nd5XPcMDdW5HXa+9rtdd13gn7B9/BH9khcaerGObSW6qY33C
53lF8uO6xuGa7wKNeUzy25qzruRE7aDc+8MqyUPZowrb8+s0foj0kyXfSJwl
fVNsZmp73DK2DZsrubXafurvqznWEe9IX111jDVR+sWZ/eEuut8bdT+nq62s
2NfcXJ+nCfes8V+p/wH1NdD4tpr7IJ3TCZ9X4w5S/3E6Z7rkb1LHA8Qg6zSu
Pv60/nfC/mr8iZpvpPq31fiB4fvbUHp3/AGNnc9+GNtf+ABfiHdAY9fDH9T9
Hiz9oqpjyP2kb64x+8Web1PJXxJjqP/VyDabz/+j+l6Qvofkn9XfQOMbSB/K
vqRjYzX+bumXaL5TeYclP6NzK/r8b6h/J43rpTluUf+uegbnqP9tHVssOc39
/k6M7X8WOr+55Jk6drHm+EHXK2PHDPdLPjrsZzuq7xqN3zm3v/SVxkyXvpa4
ir1Nx/6XeH9srPtrrPNX5p5/R/XvJz1nr9axc8P93Fp6vW4juQPnE0Pr2Bvs
rZrrV8ndiDGk15f+W+nv41rNf6qOnVDYv/qKd096I8nN8AEkz9Scr/Guqi2Q
Xkfn/yy5OT6r9Fnqf13ySzqnieSzWQ+6tymF7c8Kfa4Wep4tNOYEjX9ZY97n
3Sxty2o030+SX9X47WL7KFML74+/6fx20s/T53lE8/QJ/uNtGvcg36n0s3S9
zoX9ObCCLTTfn8R3andKX6uxy/HN9P9b6WvUJhEjq8UVx0zEB+dr/vmSX2E/
5J7VTpW8oOqYoWXQGUO8n0vfX3L7qvGDxrrG15r7lnD9Vjp2Grai4nhrj9T3
yjs7RfoWGvO3xrfW8X8kt0ltW/CRH1f/o4l9O3yYxyRvjQ2NLP8reVHm/fpS
9irpb+mZP6uxT0n/T/oq/d+5Ypvxfuw4H1+nBzGjzp2e2V89TuM+Zq3o+Fns
TzpnqY59Hjse2E36D9LXxI7nhsT2eV/LvP9fqL5lOn8L1lxsjAOfCH9+qfrH
Bnv4hb6jfbBPmePdh/R/mPqPT/w+LVLfBbwf7CHEEOq/TvpJiePXj/ADpbck
viMmVP+N0k9L7G/PkH6D9FOlL5F+Fj61xn4q/UPWWmZ/46LE6+Ee9R+LL6bn
/rv027Ax+AfYMumlWmeeiVodyTWl5S74H8QO0k+VfKDaKn22Hlrj+2aOYYll
X9B8EyOPiaWvV9o2nI8NKh0z8Bx5nhtK3yN3/A/G1TCM/19szOMTsBHp/WMf
4/wBYb3XYmTh/CHhOyL2Jt65JPZ8YGd56f3qdOlF+Dz4OmeGz0f/GbF9oOHE
9rxDsY8x/n0dex5bndhfey+zP3pZYv/vXvZTAiodX1n6fvms//J8JH+Z2R5d
xVqSviyzPRoR/M3fcuNxC4L/u1z9C9V/dfB3f5S+RPr1wZ7NV3si9p56EniT
Wj+dvzG4nvq+1/jF6hsV7MsP0j+RPkb6L9hb6Z/izwZ7iE3DttUN/fj0r4f1
DHb3Tex4by/wQ42ZrfNv5fkljs8G6vobEu/p+qnOba//l0rfQeclGns4mErF
mNhvOudi6W8Rn6tdgu+hdmfFx4ZIPiK37/FSiNcOK+w/P5fY33s68d5ZN/g8
7yX2NUZI31fnj9X53SUfJbmexg+Svpn0DwJ+sY+OX8Xz0pzvMBc4Bb4+PieY
gsZ3lH6Ejtdo/Bjp+0pPAz7VvDA+FwU88Ez9f0b9bXTsX53/vcavlj4ptf9w
jvRm0k9Q3/3Sz2b/lH609Lv5vgvbj6MS+/ODpI/WXC/zXEq/79iLwYnxtLcS
71XDNUcXjXkis304JfF+envm/fpw6Yukt+Ud0dhDNLbQ/R6o/zdWjLEtx2cu
bS9XBbyzr/onVoyBfZc4piO2m6f2LmsbHxf/Tn1TS8elxAIHxcZQXkkc2+LD
dOD+1PprrrfV9pJ8a2Kc/GR8YmJlKcfwfandiE+meQZL/ikyJvpQYiwSH5w9
497EsQwx5q7oup+BrLeAn+xf+Hqzgj/8vO7pLs6XvlT3+7T0W6SfkRjPWB4b
39lTc/yc2C/BP+kbG/N5LvN+eo76vtD4uZl9p/Okfyn9gcTx/5k6f3fdwyC1
xyUfoHvYWvLJao9JvxcfX/JxalMr9tmW4m9nXv+8Bxvofn9NjB3zzhymY/P0
+SZJPlTy+upflhgb5TvspWNfJPblrydmkf5TYizl1vCdv5EYK7givKPfJsY2
+Y77sDen3j8P0/20JZYGU8Efklxf1zte/6dJv13960s+Ue0h3jV8NMkPk2+Q
vid+psYP1v8Z+BLqn4NNS+zLE3P3To1BgUUNxEaXjsmIzQ6R/gO+q9qhsfcs
9q7PCu897EnkD8Dv2U/3VVsq/X21NrFtPLHJUerfiz1T1++P75zZF+fYh4Ux
IWJ7YvwVhfEVfAMwka+ld9L9rUy8ptEHZ/a9W+NLFI7RiNXAvD8v7NPji+OT
Lyscb0axbchVuePpbrHfcd71dpp/vXBP3BsxFLFUO/V/rP6PCsu98DGw3YXl
9jq2RPJLmnN5NeRQpO+u83/Rc22jMWdr/C7S/2Adg4mof3zuXBN7FHvVy9JX
SD5SrYf0UwtjM59Lv1PyIbk/KzFHH+lbggdLXqJ2B1hd7rFfqN0lvYOu1zXE
hMPD/XbQ+cM055O5MV+wiA7h/h/XscbYEp1/i/Se0huxv2vMo7ntH8+Ta94O
dqP2seTF5KQk76Xr1QvfCd8NmBTY1BbE05wrfTW2jncGX6jGMeehOr+31ltj
6XP1fKq8o8TDNcaNwY8/ZK+QfnPqGBY8vUmNfXDwD7DHLWuM8X6PD028Kn1K
6piLeLMEI09sY+bp/hrW2OdeLr0teFiNMSMwHrCeLWqcI3la5/fQ/W0tfVpq
DJv8zEbSL5X+rvTF0jeVflNqDJD81iY1xjC+lP413zV7QOqc3PGl45HtY8cY
xBp1c8ca6K8UxsjAysBgwGJq82sVY5Zgl0XuZwsGBjZ3Yu5YuCnxUegnftyS
PUL622q7Sm6l9pbkd1mjsXMM5BpWqbWIHbODn7bR9TNd/0H1v6W+XXPbg2b4
04XxuykVx6TEpqxx1jprZk7hfNdu+Cv6vAcWzqHwfrJmJkm+ufBae0ftpsL5
0LUVYypgK7foGS2MjaFNypzTWhH2AHJdk/HhEscH2+TOGW6S2QZhi26X/lli
n3tz6dOkr0nsr++UG7NtktnGYGseJF5K7O/vkDsmvjl2TE2sDOZ8deyYGSx6
hPT78dWkJ/jW0j+WvpXOb5wb81scG9MDC8RnwHcg5jm6dI7mtsTxH7mb/fS8
98jsk+Nf36w5jtb5t+h5nKfn0VX9axP7098UznmwD7Iffsuzzp3LJKf5XeF8
KLYbnVznvhrfKuyRCzKP7xueJ7kScgrkFjK+L8nXqP/w2JjEYJ0/RO0wfbbj
dOzPwvmMo2LnRH4rnNMgt8E9ryucTzuG2Frzr86cTyT/Qc6DfPkfhecip/NN
5nvi3rjmT4VzVOSqDiEnUDrHjb9zfOTcNzkh/Br8m9XsRcypvnrSn2Ktq//H
1D7xS1wbjCf2eub930f6etLrq80sjBGAFXBsFvawcC7oZY1fovGzwYdiY4Rn
4U9p/He6t2/VHiicUydPSb5yvPR/M8fqb6iNK5zjI27n2NjCx+gjh0Ki7RHN
91bVezR43gQdWyj9zarnuyH3tdao3S99aub4+JjEePERmbEkMCXw99PVJmuu
qvTHCuc8yX32kr5Seqvczw7MmPUE5nt3bAwWLJic85TYmBy5aDC5GbExULC6
1rnnOletXunn9RTvQuz8WV+1i7HNut+HC+fkyc1HwZ8g/wMWDCYDvgImAzZD
DuJs4l3Nv478msYMzJxzIPfAsemF+3dR3+9gfIX5BGB9YH7k84kRiBXuqpgv
QXwPPjUwcb7lR52/pmKbjG3eCPykah8KX+r2YLuwYS10zn6F8VH2LPau64iX
Ip8zVXITtQOr9jHxNUfHxkIHh3zTg4llMKLl7ItqJ1Ttg+KLbqH5t2bvDXgn
OCd4J/4ksUFdtU6sNenHSB6pNjfysQclb6n2UeQ5Z4b7gUsAJgo22qkwXsWe
yd6JT4lvyf4L3kuOnlw97xvvHf4ie/9ctXNSx1OdJT+vdrbkDXV/j+DLqo3E
106d231Y+kmSt1X7XPoT0k8N/izY8gtgSpKHq52k/k11vYk8b83xcsWYFlgX
MSixKPsv/IR3E48lRiRWvJL71/kNdWyC5F2I+yLPcZ7k9/T91qnYp8C3eD3x
2Mt1rCNzaz0sqngPZy9/Nfe7x2fdUPqSxN8HMSixKJyPyZp/N/wxybdpzbwb
m9NzZm5OD9we1tidmfcjMC4wpP+V3m+IyUbgD5fen8CY/if9qNKYKdgpMeLt
Yb/4PLHPhe9FTPph7BwTserkgEFdig0ovabJJRKTstbZz8DMrpJ+bOmYlzXV
vOJYmJj3s9g5SGLhtdiXijkz8C+eUP86jW9L/CX9sYA5jOcdKr2fEqONln6c
5GaF+ST4TPhO5NjBztvh7/Jdl86/46Phq41JzR3pUDUefXNimZzIu9L/kb5n
1e8v7zGcHeIv/CfeWWJ6YnvG3J06BofbAgZHbP6D7vmbinPY5BOJiZfFxvCI
lYnJvwoxJrE6NuB7zblrxbbhEemrY3NmLpBeSf1ZsKlwjrC55OqI8bHFC3Lj
t/iU+JbLcueX8GHxZV9PvZezP7JPklclv0rMSexJzELs0jcx3+nO2FyGIWAs
6p/Dd1l1DpF8IBwt1uM4HXsltY3H1n8ruWmNfQ3wCnK85JPTzNgPHIXumX06
8gNg9/h65AVf03w/EsMQ86aWiTGJNeerXV91TpH8IjYd245Pj2/fp3S+FR8a
XxoOR2fNd7mOvcC+qHa35BT/RPLFhfU3U+ezwSDAImZVnO/aTu31qm0q+Rz2
QPbC91PvtXcn1sG0wbafl/5+1Zw5cpCVzL40PnZVcqxj31TtT+NXf6a2Uvou
0kv1/xp7b22n889PHKPdLrl/6tjt7sKxHTy5nWucU+4S+Zofp85x3xM5vlvC
95ma28I1v5DcszQehe1sVONrcm1yTGCUm5f2zWsy8xGJ0YnVF+icC1PnGJqD
b1Sd79249F5PHon8Ku/Pisg5HnI9+Dzkb8jj4AuNS3wuOcN3UvMNyRXAWXtb
8kz116naZr4Q8g8/aD5IKXAL4Xn8G+wzuQc4M9wP/iJ+Y7/S+VpiHmIfcrbk
bplznOSfUvtacLqmaa7nC+cG4TnA3yLGgS9QTR37EE+QzyWvSyzdKXM+mRim
c+YYk3weeT1iT2J28oHkBYnlH4sdmxOzE8cTA4Ml75M5NmY//j0yJwRuyD+p
YyU4S+SDyR9Oj+yv4LewzlnvcJQ+TP08l0XOwZOLZ02ztuFwzWC+2L4QOTLy
b+S/e0T2b/BzVqX2XbKKc3y8t7y/rMlPU2OOcAnI+YNPTCwcK5FTI//7PPGE
zqtfMZ5yqT7XoRq7b+L8NRj0RupbmBibHpo5P7ZP4vwzeDrY++NqL5WOGYkd
u2Tmf12SOd/WVePnlva58b0PSJwvJh8BVv8c8aLkkZnz6weq/1Xpo4hJpfdO
nI+7LnO+7aDE+btTiJl1f4ukv8G95I6dPpL+lvRjsVfY+8T8i2My8zN3kv50
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt1wncjlUax/GH9/E+71tDUkMkS0kLIkspbSSyFiKEirJvMdMriSaylS1j
bSOJFm1kX0qpJmVvYrRpKjVaVJr2mu81x+fz/D/PuX7nf51z7vs+9znnrtpz
SPvBxTOZzHYqQRcXZjIjspnMz3mZzDLx6/mZzIXYMOwb7CFsA3YBdgt2GPua
nhPXo5uxA+JJfM/wlcplMpdhS7DLsZHYM9hfi2UyRTpcrq6V+LOCTKYNzxnq
v8GKsNLUXPkZvJXcu9Tl8Q2RW1/u4+ra6PN8Gqz8Jd9cvtV8JeU2xB7G6mOD
sEZ8w7FvsYexjdhFWBH2E/YjLRefSzdi+8V38j3J96V+O4hrK59DX4jr8/Xj
+xT/hJ4SP6TuwfAod1E3Pzy8U93kLcZ8EBtmbA3w/soH5U3Txwo5D9D9VEtd
Z3Xz/A+kufL2i6u67i/knoiNlNeatxWdIN6KN1Of453F2yLuiX7/rt/92E/Y
qLgn+BDlr+TP0+8IrA52A/YvbB8tEteka7Ft4rfivor/ob0zlfP1eUTdSLnn
4YOUv8DnaG+NurrYTdiH2ERsON9xMT7saawl9re4R9hArJ3xzTb2jeJica/E
o6kCX0Z8uCA9r3hudWJ+iPfyLsH+i43i3Scek0vXFNf2i3bvFC8vSHMi5sZh
vhXiO3JprDHmn/lGi4tTJWwG9gh2ifg/+rpefFHMHRrhuub7n0c1lDtl0305
os0s328x19R9J+6E71LfVJ93u7Yp+I9UGauB9cYW6+MkvurYfXKPpzVy99Al
xrJYfJyct8Vr6TxsEXZE/jrxTqqNPYiV5Nslfocuxh6N9rC94mv08ZY+Gssb
q9/xeL6+a2H1sMHY4+I8OhM7FxuILYl5Sou1d0R71eUdjPdAe6/HPeIbw1cY
80zdTOrPfwo2wP8CfB9PJ7ofW3j0nembTfMs5tv+wjT/rs+meRbzbW9hei9v
zaa1JdaYj8S1tDkAe1d8lzGt1N9jWB9t14w+Yi3hq4b1VN7BN5xvGV/N8GF7
sTHYcqwd7xbsophv2uhmfEv5BinXxRara81zCY3KpvUh1omPxRX5TuUb4n+R
th6lBfQwDcKqqBvsvyxVVh4Yc07dXCov/wztzdRWEZURZ6iR8rPUhOcPY7kZ
O9Y4etBj2qiBNcbGys1QMTok/j24nCtpgPwSWE/9vaF+mbgFey/xpXzLtPVv
+s66sET8Gt5fvINewqZhfeWfJL6Zlun3E+1+Tnu0M0mbFfB+POVjjNhY8Zx4
X8V1aVP4xEupnvhC2oZNFj9BjcTHxTsSa3qsV1RaXMdYZmGHjPms6BMrojXY
FJ6tNEJ8T7yvyq+XSOvbEKy38Zwg7klPGvMH8ifl0qa2kL7EjsRzoe6uoSU2
FVstPp16xbPGpmNrxW3ohVirsRexXfH8qLVyw9gT6Qf9XoWt4nuer0jdszFH
jeXUuEf0PPYd7+/5aT2717XtxmfI7cy7Qe4m8e2uoyN2hdx7sXLxjsRaJu9W
/A2e7bSBb4p4rNxfs2ktjjX5DWx4jEtO8dgnaai2KvB15Wsud7KxrBR3xt/B
mmGTsNm8J+LXYFdgE7EV8SyopPh9+ly/j+rjOrnvxv6C3cP3iNyW2GxsJ7aZ
bzpfV7mbsbdjbmGzsafjWoyviv+qUZa3/egadg7vn7BbsNuxLtquKHdbrE9Y
Ze114zmFZyD/Uv9lsPZxr5QbuwfvydtSkN6V7vKOoZvkbsR+iD2QyvNtEr8r
59WYf/LrKhfxzTjazhX+m9Jt2Dj/3fla8JVRHoZ9KL8pXwXx+3h3bIqxZEuk
dTLWy6m5dEYamk1ngzgjfCA+De+BvSkeyveENtZhM4y5rfxP1V3PtwabhrXC
DmA9Yl7wjsOaxFzAOmKj89MafDH2GtYeK0unxH6vj9L6aKStj/me4uvF92fq
w7Mql55hPMv3+Lths/LT84958E/sWqwE31nKY7VXVnvdeb6l5/j68FWm/nyb
4h3BOogP8/fEqlCDbNq3Yv+6MtZDrD72CNYA66OtSnF+xBZiC+he8avuczXl
YrH3xnhiThak+RTzam2cHeIdCq7fq7FD2A1yq9KFyo/LX0pT452MNRZ7QtxU
v4NjvdTeDO29KvcPdRO19RteTXky3zF8ncTFYp3ApmKlsM5YE+3djZWkrdgB
7HJsvLhUPGPsI6wZNlVcPs5Y2Ncxv7B7xGVjT4rzCdbWWIYaywP6WId3yKX1
fly8G3QsvSB+IZfe23h/92JdsHZyR8jdgK2PuRHrgzZPi2vK+//2kumYn/ay
O47uHbGHrBBfRmOU82gDvPvoPhX71dnqOuJz/C/MT2tIrCX7sK6xP+nnXOXZ
+jhdbm+eX6gKdhcWS3CHWCvjGWN3YH6ZduJLY/5ixWk9tgtrjk2LPSbO39jh
2Nfi3RRXpA/iLBLPB7tcvFJjHbDb41qxJnGPsBU0XXwmtcVeFveMfSnuvXv1
F9dxfqzP6q6K9yXOIcoP5aX7eDXP2QbfO+pjn+FfH98jsTapXx5MXUNsJVZK
3rex92BttXUePjHWZ9qs34P5aU5ekE3zO+b5+pincufHGTHOZrE2igfhb4pP
jrOTfm/Dvo/znzZ+jW+UOPeKF+mjOk8Zbe6KM5+4fC59d+wpTGeROJMcj7XD
1srtwjcN64vtwdZhXbF+ufQO1o1nHed9WiterJ9Drvf7OPfH/phL3wZx9t3h
f2ecc6lcLs2T7YXpfBzn5BlYgZwf4ttIH/fFeTeXvm12F6bvpPheOkv5KuwV
vl5xTohnWZC+CdrL/0rdjXFmotbZ9GzjGb8mforvR+P7LL6t4v6Ly8W7zjeB
Z3yc9+Kbh/aoX4Af1kfrOBcXpH13I/507JHxjvM1VV4l7xq+UcZSEaudTefs
2Ku2yauOtcJexG7AJuSn8bWJ5429RDPFm3krxbeBPn6NM1bsd/h18Yzwyfr/
BKuA1cim+x73f0Jhms+Ns2n9inVsk/j0gnSWvjbuq7pehel6qyqP47mbVhWm
9s7OpuuP+7Ba3CW+feQ2kvuKuquxA9jJxv5y7PvG8pF4q3iRa2oTaxKN5Ds5
vgnlzIvvAHU98P8BkEAPFw==
            "]], 
           Polygon3DBox[{{1700, 1699, 2420, 1560, 1561, 2421}, {1811, 1107, 
            1557, 2419, 1683, 1684}}]},
          Annotation[#, "Charting`Private`Tag$1130841#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVVEchvG/3exmBV0sC0MwqEA/QdEHqEEIgpwgvJMGhYKkUFBieYhO
hEEFoQ3SahSZNWgWWFIDJ2Xa6WjmyJAiImjgxH6LBus87/Outddea3MqGs/X
nCuKiFGjZVVEyst+FvHkuohtmMH92KFvkqvl58URPfyofEF3Asd0V3Sn5Pvr
I/L26+cD5tt1czzHH/MevsBv82c8y1/hXXxrn0H9I/mnNRN8mL/kBWve4ANd
rW7I/Edej0/59jURU3wHfsI63U55Wn5nTYaP4AwvX+us/LO8y5o8luJu44u8
BwtYhrN42tq98pz83h6Vnq9P55S/6g7wBj4v77PuGx7UNaU7W7PAm3GM/3WP
D7x6dcR3eVx+os/LL+SH8qQ8IpdsiOi07o782r3vmetP38A3nrffAO/mg7zA
b6QzebZNN8Ov8Vs8w3vxOF7UdclH0t3tPWrfbl0Vb9SX4zHdH2yzx9b0f8Cz
aS/rt/CbWIK/jZy8GVfM/8Iu956QN8lV8hl5o3zdOteJLDpuXMU+ozidDb06
fhiXZY/FuHcuYSv6pHFY2WIv03HJjzoO6ZqL/v9//wHiOFvp
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1616, 1851, 2326, 2554, 1615, 2427, 1783, 1617, 1852, 2428, 
        1784, 1957, 2046, 2047, 2012, 2173, 1785, 1958, 2379, 2429, 1786, 
        1618, 2430, 1787, 1619, 2431, 2327, 2487, 1620, 2432, 1788, 1621, 
        2433, 1789, 1622, 1853, 2123, 2602, 2193, 1790, 2194, 2048, 2049, 
        2434, 2013, 2110, 2174, 1791, 2196, 2195, 2603, 2415, 2124, 1792, 
        1623, 2435, 1793, 1624, 2555, 1854, 1794, 1855}], 
       Line3DBox[{1626, 2232, 2233, 2328, 2610, 1625, 2321, 2322, 2329, 2635, 
        1627, 1856, 2436, 1795, 1959, 2050, 1857, 2014, 2175, 2176, 1960, 
        2380, 2437, 1796, 1628, 2438, 1797, 1629, 2439, 2330, 2488, 1630, 
        2331, 2489, 1631, 1858, 2440, 1798, 1961, 1859, 2042, 2593, 2111, 
        2215, 2112, 1962, 2051, 2381, 2441, 2015, 2113, 2229, 2114, 2243, 
        1963, 2231, 2115, 2230, 2382, 2442, 2043, 1799, 1632, 2614, 2241, 
        2242, 1800, 1633, 2607, 2219, 2220, 1801, 1634}], 
       Line3DBox[CompressedData["
1:eJwNzb9KAlAYhvFPiP5YQ2BDQ5Z2E3oBmgaGGl6BWdZidAm1KjSFXkQFrbU0
pTlYgjVHdRkV/YaH9/ne851zss3T/U4iIio4mI+oLkY8orAQsSdf8bMUcYYX
PsEGzycjWvaL9mq6tO4X1+Y58478wDm/wA1fdackG+akPHS/684yP+I9vol7
tM1b8gHHvGwnw/+wy5+RwxQp7w7lpXdH8hYFXrW77azIZ7o3VDDGmj4vS86+
5Dc+sa5/l0/6FXni74Suzq90fQxwZ/4HnkQngg==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzztOglEQhuFBEJTE1h7taazcAAUGFRAQ7CzlqugytHQNakIwlogdiZ1E
WIErkecv3nyXmTnJKVwPa4NURFTwkI1Y7ERc5SKeaYdm8hH3+lf5Gy8o6ka7
EWP9m3xu7x1nCLOS7s5sKZ9ihQr+3fzQW7M13bd7QqcoY+5uZHak/+RnGMpf
7g4w4Oe0gCf05T13j3yPb/MNN5c07Y0m30I2Ud0fmtiW66hhgkO7DX2Vv6Br
2vXesX7F/+JG3pLryZ+SW/qBDXyDJiY=
        "]], 
       Line3DBox[{1655, 2263, 2264, 2619, 1654, 2260, 2261, 2618, 1656, 2262, 
        1884, 2136, 2494, 2384, 2137, 2138, 2055, 1885, 2021, 1886, 2056, 
        2141, 2140, 2385, 2596, 2139, 1887, 1657, 2447, 1806, 1658, 2448, 
        2339, 2495, 1659, 2340, 2496, 1660, 2341, 2497, 1661, 1888, 2498, 
        2386, 1662, 2057, 2387, 2585, 2022, 1889, 2058, 1663, 2565, 1890, 
        1891, 1664, 2449, 1807, 1665, 2450, 1808, 1666}], 
       Line3DBox[{1680, 1897, 1896, 2566, 1679, 1809, 2452, 1678, 1895, 2507, 
        2390, 1677, 2065, 2066, 2024, 2586, 2064, 2063, 1676, 2389, 2506, 
        1894, 1675, 2505, 2345, 1674, 2504, 2344, 1673, 2503, 2343, 2451, 
        1672, 2502, 2342, 1671, 1893, 2501, 2388, 1670, 2061, 2062, 2023, 
        2060, 2059, 1669, 2301, 2309, 2302, 2500, 2248, 1892, 1668, 2418, 
        2499, 2310, 2312, 2311, 1667, 2620, 2303, 2304, 2265, 2267, 2266, 
        1971}], Line3DBox[{1682, 2144, 2145, 2143, 2270, 2597, 1810, 2269, 
        2268, 2316, 2634, 1811, 1684, 1899, 2453, 1812, 1972, 2071, 2072, 
        2027, 2179, 1813, 1973, 2393, 2454, 1814, 1688, 2455, 1815, 1690, 
        2456, 2348, 2514, 1692, 2457, 1816, 1694, 2458, 1817, 1696, 1902, 
        2459, 1818, 1974, 2077, 2588, 2412, 2028, 2180, 1819, 1975, 2396, 
        2460, 1820, 1700, 2421, 2461, 1821, 2272, 2397, 2462, 2152, 2204, 
        1822, 2205}], 
       Line3DBox[{1702, 2147, 2148, 2146, 2274, 2273, 2621, 1701, 2271, 2519, 
        2420, 1699, 1903, 2518, 2395, 1698, 2075, 2076, 2026, 2587, 2074, 
        2073, 1697, 2394, 2517, 1901, 1695, 2516, 2350, 1693, 2515, 2349, 
        1691, 2513, 2512, 2347, 1689, 2511, 2346, 1687, 1900, 2510, 2392, 
        1686, 2069, 2070, 2025, 2068, 2067, 1685, 2391, 2509, 1898, 1683, 
        2419, 2508, 2313, 2315, 2314, 1681, 2425, 2633, 2305, 2142, 2202, 
        2201, 2203}], 
       Line3DBox[{1703, 2150, 2151, 2149, 2277, 2351, 2622, 2276, 2275, 2463, 
        1823, 1704, 1904, 2464, 1824, 1976, 2078, 2079, 2029, 2181, 1825, 
        1977, 2398, 2465, 1826, 1705, 2466, 1827, 1706, 2467, 2352, 2520, 
        1707, 2353, 2521, 1708, 2468, 1828, 1709, 1905, 2469, 1829, 1978, 
        2080, 2081, 2470, 2030, 2182, 1830, 1979, 2399, 2471, 1831, 1710, 
        2422, 2472, 1832, 2278, 2623, 1906, 2153, 2206, 1833, 2207}], 
       Line3DBox[{1712, 1907, 2354, 2567, 1711, 2355, 2522, 1713, 1908, 2473, 
        1834, 1980, 2082, 1909, 2031, 2183, 2184, 1981, 2400, 2474, 1835, 
        1714, 2475, 1836, 1715, 2476, 2356, 2523, 1716, 2357, 2524, 1717, 
        2477, 1837, 1718, 1910, 2478, 1838, 1982, 2083, 2401, 2479, 2032, 
        2185, 2186, 1983, 2402, 2480, 1839, 1719, 2625, 2281, 1840, 2282, 
        2626, 1911, 2280, 2306, 2307, 1984}], 
       Line3DBox[{1721, 2358, 2525, 1720, 2359, 2526, 1722, 1912, 2360, 2568, 
        1985, 2084, 1913, 2033, 2187, 2188, 1986, 2577, 1914, 2249, 1841, 
        1723, 2627, 2284, 2285, 1842, 1724, 2481, 2361, 2527, 1725, 2362, 
        2528, 1726, 2363, 2529, 1727, 1915, 2154, 2604, 2208, 2209, 1987, 
        2085, 2403, 2482, 2035, 2120, 2121, 1988, 2210, 2605, 1916, 2158, 
        1843, 1728, 2636, 2323, 2324, 1844, 1729, 2624, 2279, 1845, 2317}], 
       Line3DBox[{1741, 1934, 1933, 2572, 1740, 2300, 2325, 2299, 2632, 2426, 
        1739, 2308, 1932, 2159, 1931, 2612, 2237, 2160, 2161, 2090, 1930, 
        2036, 1929, 2571, 2089, 2157, 2156, 2224, 2598, 1928, 2155, 1927, 
        2290, 1738, 2628, 2289, 2288, 1737, 2531, 2365, 1736, 2530, 2364, 
        2483, 1735, 2223, 2286, 2222, 2608, 2287, 1734, 2283, 1924, 2250, 
        1923, 2570, 1733, 2087, 1922, 2034, 1921, 2086, 1732, 2578, 1920, 
        1919, 1731, 2609, 2228, 2227, 1730, 2569, 1918, 1917, 1989}], 
       Line3DBox[CompressedData["
1:eJwVzztOQmEUReFjI0oinbHChI5Ee4MFWmkkVgzBSCsJMAVpRXz2PkbgFLQB
BV88tEUcAdJY+Fms7LP2f+5JbmavXDyYiYhdDGcjanMRLVwmIqryQk7ldjJi
4P3HPMEW7/Nz79f8TKZ0Pd0qP+UTLOtK8xErundv93Kff+PKfGLnTT/mm3g1
f8kNvJhHMo87PPOm/WMsuNvlj+Z1dLGoK9hruNvmn+ijjoLuUH6g8v+Pcsdu
2jdZnuO/6Li5pBuaB3jia7xhvrF3JG/lg/wDVV4w/g==
        "]], 
       Line3DBox[{1755, 2225, 2226, 2292, 2291, 2629, 1754, 2319, 2320, 2318, 
        2536, 2423, 1756, 1945, 2038, 2537, 2166, 2189, 2165, 1757, 2094, 
        2095, 2093, 2097, 2096, 1758, 2167, 2168, 2599, 2045, 1946, 1759, 
        2406, 2538, 1947, 1760, 2485, 2369, 2539, 1761, 2370, 2540, 1762, 
        2371, 2541, 1763, 1948, 2542, 2407, 1764, 2098, 2099, 2591, 2039, 
        2101, 2100, 1765, 2408, 2543, 1949, 1766, 2486, 1846, 1767, 2613, 
        2238, 2239, 2253, 2252, 1768}], 
       Line3DBox[{1782, 1956, 1955, 2575, 1781, 2553, 2376, 1780, 1954, 2552, 
        2411, 1779, 2108, 2109, 2041, 2592, 2107, 2106, 1778, 2410, 2551, 
        1953, 1777, 2550, 2375, 1776, 2549, 2374, 1775, 2548, 2547, 2373, 
        1774, 2546, 2372, 1773, 1952, 2171, 2414, 2601, 2172, 1772, 2104, 
        2190, 2105, 2040, 2103, 2102, 1771, 2170, 2600, 2413, 2169, 2298, 
        2297, 1770, 2424, 2545, 2296, 1769, 2409, 2544, 1950, 1951}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{893, 1054, 2427, 894, 1609, 2635, 1063, 915, 1546, 2616, 
        1071, 925, 1549, 2617, 1550, 1079, 933, 1551, 2618, 1552, 1087, 945, 
        2499, 1554, 1097, 957, 2508, 1557, 1107, 2634, 969, 1565, 1116, 2463, 
        981, 2522, 1125, 993, 2526, 1134, 1005, 1520, 2609, 1521, 1141, 1014, 
        1404, 2583, 1405, 1147, 1022, 2536, 1586, 1154, 1032, 2545, 1595, 
        1596, 1162, 1044}], Line3DBox[CompressedData["
1:eJwVz6FLQ2EYR+FXpgOXnGBzwkCQgclgkBWLxSLiytoWjNN/YKDBaHSClgla
BA0GmxsOZhm7YHJxatNg0OjEZ+HwO9+5l+9y89W97dpEROzgIBVxNhmxPBVx
buvTEYfaJV/RruyRdqLd8FVtJhNxy1u8jQee0tZ4iw/sIzpY1LtakT/ZO/d0
3dfn61pi21qivfANbWAbzj19yDe1V3sxfkf74Fvap73W3rVvXtKyvvfD0+mI
X5txLusj3rR/tmb3MedZw/mZn9qv8f/iGD0seZ61FcziDX0U9MTOYxc53GMB
/6jOMrM=
        "]], 
       Line3DBox[{898, 1056, 2430, 899, 1065, 2438, 918, 1073, 2443, 927, 
        1080, 2445, 935, 1088, 2447, 947, 2502, 1099, 960, 2511, 1109, 2455, 
        972, 1118, 2466, 984, 1127, 2475, 996, 1581, 2627, 1582, 1583, 852, 
        2608, 1515, 1514, 1015, 1288, 2573, 1372, 1289, 1023, 2538, 1299, 
        1378, 1300, 1034, 2546, 1163, 1046}], 
       Line3DBox[{900, 1057, 2431, 902, 1066, 2439, 919, 1074, 2444, 928, 
        1081, 2446, 936, 1089, 2448, 948, 1100, 2451, 961, 2512, 1110, 2456, 
        973, 1119, 2467, 985, 1128, 2476, 997, 1136, 2481, 1007, 1142, 2483, 
        1016, 1148, 2484, 1024, 1155, 2485, 1035, 2547, 1164, 1047}], 
       Line3DBox[{904, 1059, 2432, 905, 2489, 1068, 921, 2491, 1076, 930, 
        2493, 1083, 938, 2496, 1091, 950, 2504, 1102, 963, 2515, 1112, 2457, 
        975, 2521, 1121, 987, 2524, 1130, 999, 2528, 1138, 1009, 2531, 1144, 
        1018, 2533, 1150, 1026, 2540, 1157, 1037, 2549, 1166, 1049}], 
       Line3DBox[{906, 1060, 2433, 907, 1190, 1331, 1069, 2440, 922, 1199, 
        1200, 2558, 1077, 931, 1524, 2611, 1525, 1084, 939, 2497, 1092, 951, 
        2505, 1103, 964, 2516, 1113, 2458, 976, 1122, 2468, 988, 1131, 2477, 
        1000, 2529, 1139, 1010, 1584, 2628, 1585, 1145, 1019, 2534, 1151, 
        1027, 2541, 1158, 1038, 2550, 1167, 1050}], Line3DBox[CompressedData["

1:eJwVzaFLQ1EcR/GfzhcUFIPBRScmEQwWk8WyYnBlTRgsDESbf4S6tMWBNkER
RQW3aJnDNRWLuiUNlsmCzLbPwuF8Ofe9excK+9t7YxGRQzkVcZBEnExErPIp
v/LyVESdGzjX+nzBh5MRV/YRjlHR7jDn+yrfartYxw3utXD2wHVceu+JE23D
edtuaG33Ptub2gs3tTftw85qn1wbfaN/2VvaN59pHa1n57RfvtZ+tIGd11a8
9W+/249oYRxr+h+n0EUH05jRd0ZG4r+e++btItKY1QZaxi5hEUsYAtWuMYc=

        "]], 
       Line3DBox[{910, 1061, 2435, 911, 1531, 2614, 1532, 1533, 1534, 1535, 
        1408, 2584, 1400, 1537, 1538, 1539, 2606, 1509, 1508, 942, 1094, 2449,
         954, 1105, 2452, 967, 2519, 1560, 1561, 2461, 979, 1568, 1569, 2472, 
        991, 1576, 2625, 1577, 1003, 1610, 2636, 1611, 1612, 1613, 1614, 2632,
         1598, 1597, 1020, 1590, 2630, 1591, 1030, 1160, 2486, 1041, 2553, 
        1169, 1052}], 
       Line3DBox[{912, 1185, 2555, 1186, 913, 1510, 2607, 1511, 1512, 1209, 
        2561, 1210, 1493, 1218, 2564, 1219, 943, 1095, 2450, 955, 1236, 2566, 
        1237, 1475, 1563, 2621, 1564, 1562, 1246, 2462, 1476, 1571, 1572, 
        1570, 2623, 1255, 1477, 1579, 1580, 1578, 2626, 1265, 1575, 1573, 
        2624, 1574, 1012, 1284, 2572, 1285, 1481, 1593, 2631, 1594, 1592, 
        1295, 1529, 1527, 2613, 1528, 1042, 1318, 2575, 1319, 1320}], 
       Line3DBox[{1043, 1161, 1306, 2544, 1031, 1153, 1587, 1589, 2629, 1588, 
        1021, 1146, 1544, 1543, 2615, 1286, 1013, 1140, 2569, 1274, 1004, 
        1133, 2525, 992, 1124, 2567, 1256, 980, 1115, 2622, 1567, 1566, 1607, 
        1606, 968, 2597, 1106, 1559, 1558, 1605, 1604, 2633, 956, 1096, 1556, 
        1555, 1603, 2620, 1602, 944, 1086, 2619, 1553, 932, 1078, 2562, 1211, 
        924, 1070, 1548, 2556, 1547, 1600, 1599, 914, 1062, 2610, 1523, 892, 
        1053, 2554, 1176, 1321}], Line3DBox[CompressedData["
1:eJwVzytLA2AYxfFHtrnNNASTDBmWocUFk8UFQVYGMoNBEINNl72AxY/ggkUF
RRCM2nQYloZi26KXZtBgFcHfG/6c85zzXiub7ZWdkYhYxUQ24i4XcYsvTOIJ
1bGIou6df8MGSvgsRvTpCy5xgTw61pbtOeO3sY897GIN47pfa74zEW1aMLfk
P/yH7Nq5W3wz3UEHsnPZOt+QvdK+rCNr8UuyAX02d+UNfjG9nfZk9dGIZeSQ
xYKup+vqHvkre4bpjHQfpr3nXv/An+rm+D9r5803/LHsyFzla+nf9FB2IJvi
Z2UndIb+AyRhL9c=
        "]], 
       Line3DBox[{1048, 1165, 2548, 1036, 1156, 2539, 1025, 1149, 2532, 1017, 
        1143, 2530, 1008, 1137, 2527, 998, 1129, 2523, 986, 1120, 2520, 974, 
        1111, 2514, 2513, 962, 1101, 2503, 949, 1090, 2495, 937, 1082, 2492, 
        929, 1075, 2490, 920, 1067, 2488, 903, 1058, 2487, 901}], 
       Line3DBox[CompressedData["
1:eJwVzq9Lg2EUQOErTmErBtFiGCsGUf+DFUEsBjUsDCxbGKg4xGC1WQzDOqtY
1GJQUBgMVLDMHyxMXNEgA1kREVbms3A49577vfBlCuW17aGIyGEqEVFBaSQi
jb9kxJj9AEX7BLpawr6PdXsKX1qMRiTRtr/jG9OpiL7v7s0/wxFvPKu1OIdf
t45+4f2WeXXwjtvaiVY0L2sf/KxVtbx5SWtx036nr5gXtAY/atfaojmrPXBd
O9Oy5hom/cMl77nfYhM7GNc3+AlH7l2+QXXwj5xxP+dPnLr3+AqH7q884/7C
8zh23+U5/ANP9jNe
        "]], 
       Line3DBox[{234, 509, 233, 2012, 473, 245, 2014, 475, 253, 2016, 477, 
        2017, 265, 480, 2021, 271, 482, 2023, 278, 484, 2025, 286, 2027, 486, 
        294, 2029, 488, 302, 2031, 490, 309, 2033, 492, 2034, 316, 449, 416, 
        605, 2122, 319, 576, 2093, 334, 497, 2040, 343, 586, 346}], 
       Line3DBox[CompressedData["
1:eJwV0Dksg3EYwOG3CYNjJo6gYrdImCwWi6WLQWIQQydNhJW4j8F90yYMdSZo
wmAysrEysjIy8nzDk9/b982Xf9L0UC4zkoqILG3lEZdckSZLS6Iy4kKXOaeW
YWpodjvTJU6pZpAqmtyKusgJKQaSm33oMQsUKFVE/JZF9Jt/NK/zHHHt9m2X
MX/poc5xQNHt067P/KH7OkujN/b03a5X37TBbtc8ww6vdj36ovVu2+Zptni2
69YnrXPbNE+xwb3dI3/evtNRuxxd3HBLq29Kbp3Jb33QSdaT/8p353Yd5jNd
0wlWkvfdCnbt5ryu6hjj/APaYDia
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
e0SSG1SnBsg93t95RcWM3GOkSBF6RfQkx4/30n9sq3B5GcvqunB7pCWQy+A9
SUXfmYQPmV7NxaY8asYdLWZol5Q1diL9dbI8WNV9TzbmjlHei9ZcRL6cQT1J
01RkfETx+XHeHLzb/u2Fve5WiE7pKY6A/3flArfKS99MPMsSHxLKbIPYg51X
sxL8+8tGrp/CzzDd4HGP7NyriOF6d/1FEj9LSKQVi3M65pPYOLOK3RmFhmwQ
O0X65S/levwbwQy83GzaG6Jtg/pvBI2cI3jKwdI6L84MbCL5lPXdLWu01f8s
TQ8I7e86BHqgLze1EfRAhGsVRxPhc55P+ss+Qi+QZfKmAJ6GS8hjbv/tSpJP
tZ6LRV5tEXgePZVmE9VB/7H15fFcNe/7b3tKKaFSRLSILIWkNEgpkT0kW7aS
7GUrQoqU7Esk+1q2ZM8gkSUhWxsiSuFdkex+M+c5Pb+nvp9/r9e87pkzc899
X9c5M/dppvkkhd8DB5qW0vKdDYLM77gbdC9og/nIdwrlCH+XfSnouulVaMuj
CE+HaQNDE2ciXwh8rI/C+SKFhe0bzhcj/RGyOxD/5Dv9fb7fMg9ybw7Tn04x
AEe3A0mHL1TQdNn04aqgAvjF1CrSPtoAZEC3/iRk33ZHZ4mlsC9Mo4ys9UjR
AEnjk1E0aJx0v5ZJMAZHwup9MOHWKk3Q9eazaAfi20fejPOdvxkFxS5bfF7D
rg223DWJ9hyngpZIm/fdRXnwWU6mCW2rOdiSmCbE8pMKEzjfvSh2zII/XHdI
0NUZg1UsA3GoPdw4IVfcidq/OvWAmYLadw1JRKN+IdS720CP+t3uayeM+3Xn
3S6G+oUXP7x8eQ71e2ZB0Rn3+0oxSjtxiQo96Fm/ppz2hact3rLVb1H7t26n
NFm305qs23kz/CZ+XnhIfM0vc/S8Wub7d+LnLSLrT+b/VX+Si+ZDiB4az1OL
EMNT18KBNsNE0qZFPdDZcN5pDsXDDT6C/oWlsSDFmlvs+UsjoLFBg6MAPdfV
3SYhnvfywJxcsKPksCWoXFjXPf6OCtndKL/0UoqBsSk1HHbYAi6WXsaz98fh
pTYTZufgduBKa3FGJ8gX2J3d+SjtDBVkmaUtNU88B15bXJnCTnuAvQ7tbMg+
eH6r96kXss8/9MtTCtm3a6poQ/aB4qhH7SlkP0eZKlSN7Ls0zDHZonVsOcwU
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
IoTi4UWG/iYcP2PYc4g4PH48kHMQxWGNpWCuVSgOc1G6BP9XnrJZbCbi+Su6
Hco4nud8/C6H4zk1digLv9/Tn1xNZyIzArzelObi93uG04+PHfH/Agu33fk1
9+IDED5yJGbf22xwO+OVyWH/LyBM01J1AeFvD2mPHkC42l62zRhn5prKwfjk
ue27ZRF+g1d8P7bjX7xl1TzCR+kslqQRbkY5S8RJHzJOapBxUn8mv2twaBAG
3+1vr1o+Ahyu9gh9cL0POmmzXmNckEanFeNijveeYlyI8jH6v/WKF8h6xRTm
vHDNs1T4Izeipvjqc7B6U8DajR/cUXwouYL/O3b9r/+OraPU/k/c9P5BD2QH
LDq9bSpFdgxTN9NyIzubNvY6Jw1T4RPDkYP73O7BBoe7N1LLC8DNtUfiEP8E
Hy6r7XiI+OcUXYP/HOKfW9ddKsPvi06KaO3G74uedFuvxvw8MS70IrID3p9s
2iKI7HR8PN6ahux0X+xSxvki/+uMDS3KF/F9iZM4X7xjc4jF9u+XXb+N7VeF
0jVj+4zhVbFoX4D2u3Pp3mhfTLBkpU+gfcFGcVXE9XX5yfq6PmR9XQZKfzGu
oyvzVx3dipumCdiOrPkZQ2ynn57DGttZT1HowPVv35H1bxfJ+rfrKPF/1Ll9
Tda55aQU/lHP1oysZ8tBUVjAdWtnyLq1jWTdWnaKtDGuT1tJ1qe9SNanZaNY
E3VoP5N1aH+SdWj5KRR3XG/2Kllv9i1Zb5aNMvw/681yUXqIurL0f9WV3Ui5
StSPPfNX/dg1+pliGqxfAde1waQJtg9AzHxAozrwDhBKpro8rxkBZ4Tuvvw5
MwDeH3HKYq4IBgbPbdk0Wb9CtzwdWXxena5CYjU+r46e6/B/59+XnH82ir3v
/6qzuory+Y/1+l0PmZ7iX/Lf9TIh10uAEtrx37rEtM/+WZftlPA/8Lna3/g3
Yr0iyPXqJdfrb/z3OgpQ6EPwOjqS62hBriP/X7gJiW+hhP6xvs3k+v6N/65X
vJly/Y91dyHXnecv3JHEuSklf/jDFOkPm/7Cv5O4JCX6Dz95T/qJrHN+zIeh
QaDHFx5Tg+IJpVidbRDFk5Igmkt4X5tlU6Ak2o+RfPfN8L6W+MvOb3/joogZ
/i9/czsc8Bh/f9FlVePKTxsG2wdM3PD3F6E8T0PsP58mLk1g/7nd8eAl9p+m
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
6kkZoJJ3WnSe/FqNR4sCH12kas+fPAt58labxeh7VU3vShmH427US8ld+nCv
+q2ZXSWuH/sLSdllqwTvUYsXzfh01Nz4Lx5A8KUE30PqN51J/SYfqd8MNPOk
898G5pjJQf7bUK9TLOS/5dbNS+7AdNQX7hVTZ7tHzfx58kq+7yHUINss0tnC
QGN6zp8/9uRRZyW8hA46m6PHKkN0vtzsSxEXIF9ugcK+PzYZFkjvA6f4Sozr
V9lfq+dPoaSjJT+85jFHT3+yZzweYaAEruyy1tN3qQXP5s+adtQGCb3uWlU+
is/19yb1goY7lMzr4KfHQ+3/4lIE5yc4K9/1Ksl3HY1n5ruy8HCCjxOcZbdr
EztfmtjtZx4nP1DD/0VLp1m8j+syxW3yep1Lht/fPNJLJI/UlOSRsvpRvPjK
7Eexn/SjuPJQo/15DwMVWWYOjKnfQ28CPbvaz1xDom9yafoO98L6ezF9p47Q
UWdMX7Z8yiqo83Ix+vHHa+ZF6hmbUDHUeU2sPtUGdPo6fquPYzr8uUd5OjCd
UM9suu4v+pTRCNT9uQedKIa6v/d5M+l9Dm7gTIV9nvTJ+Az7rOw/mg77PFRz
thX22XGnPS/sM6v/Qxrp/6BA+j9krcil6zS3HHnaDHWac5Zld0GdJqvuhm0O
s+7GmNTdeC7NsjzUh/2FXumTPbLp6MLlGXU7j95FwoLOw+8HGJQfm6zK66RU
9Cl8wubKvTt/5bwMkfM/iZxn0R8ldT3ahH7EvQbgZ+pEo4sN8PMnd6Vs4GcW
7kfwRoKz6nd6Sf2OAqnfOfUks2Ij1vv57Xk14/Pj0YX4cPG5mWZ/8YMEdye4
YkTvjhUTWM/euWR+VyqWyr12WFtkqSFat7+VPr8Wr4Qi4Px6BQxdgPNbQPo2
JB1i9m0QJn0bzqobKn3G/KO7uOnLuhW3EToYuXl0lTk6FpWY8vQx1u8aGidq
Nj9BAkHmiTOd3NDxeFWzHE/Mn6u5l01VKkU7q3xvhg96IbmK6fS5Pl7pXwHf
m8Yh/wW+l4W7EjyF4DOnFD8tScd6v9PUwVbqGRX+uMNhbbcTmkXwbQS3I/iC
K86Wl4bx/tjFXX8mlUSNFvvHPz1v9RfPJjgbxcQVm29y+eHv+nqxvFA38Tal
feyQf8QGJ6S85j19Tl+te+II53SDxLsOOKcsvIjgBgRn1VUtInVV8aSuivX+
O8l7HiPvmXDdInXWDwYqcKzMXPUlgxI09Ar1rzNHItKHKZdB6OccvMNLNI3i
iVIVQ1Mt/uI6BF9BcDObyZSOn/hcf7l4bnFZGjW5z2p6of5htM02snUj/l6F
XdvXxCUnUd/kcz+Nj9qg9W2ltYJDDHSRfYHstH2pVOfo78ftzw4j7mDXKQvw
eWnJruBpFU6h2DqVT6ZlOiKquT69C9Mx78se4L+fSE226Rn+1LJBZxUe0fpx
jsQmCvTjzQh1GdCP4R7Plr2GOs0qw4kzQlnowPWFAbyvbP7ilgQ/Q3C3hQvC
DmB+k+lXaK8MCKRGZnI8jDypi/ieW0b1Y/40maXi++rcJSpXIu+S/Gtd9Fyn
Lwnk+V6BuYogzyNHuKJAnlv/qOBdgem/vjLM4/gli4qd6SFgkG7yl6/cCV8l
E77aT+bq6pG5uojM1c2pyyyBeWdB8zylav/oofEDMuWdybrow/482t6I2S73
eyq2NzRuCrXR9gaZV9tK5tUKk3m1iYG7R9oxHWnGSw/quhu69d6srCzcAC2u
/aOTgv3DX+FDr7NXJCCJuPiImccskHF2C31Oh79yXYJzajsovAvOqTKZG3uY
zI0drWHOjV2VHRzQOsag6iVjc2/I3qQW5Kt+/2a/H+1o2r4sbIJBCZzyfjPn
/VWqVGxbohDDBtXpfxmCPKvkTm0HyLPaxVf2HvKs1roYcPsMMagsLv5t9V0p
VF7Bjo9r6kwR587omESY9/08jPf+ZCK1eo+dVxyfK/r8pFdo+y8G5Wa8LHH5
QDIVGhp48qWgFdJOr966HurFBqcXLLXVpy6u6xgIfxGC1lvrPT2M6Vi+mprE
x5NEXSvOWXtnkS9i62DOITUmc0iNyRzSOwqi7O9GGBTfe7HaPtO7VLtZ3SJh
FwcUGGWlNIS/t2bs7mn7+/FUyYqjtxYmH0OPBd+HQ97+y5FlKij4LuJZrHI+
vDsGjRWcp+sRijlS5kE9wsRtSRuoR2DN/XxP5n6y/2vupz6pv24h9ddHm97x
7YW5IBEXQn/6Xabqv1nNutTnjbySjtJ1EH0KU+SgDiL73r0UqINgzff8/JQ5
35OdzPfUKK+h6ezwvOoEdMrajHLCMB3W/M0uMn9Tm8zfzFjdcB3yXa9FXbGE
fNdfD2w3dbdEo99knqYxmacpTuZp5ryzo/eHfaTHGvZH601gFuzPcW7mfs5N
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
brxFwCZ4bkOkmiU8t57MH5xG5g92kvmDpdfC/7Ne2MKKk/7ePcIr4uF7+439
G+F7f5pKp8M+l46OzYZ9bp4yIQL7zKqrvUrqasdJXS2rPtTwX/WhrL4Wc0lf
C0/S14I1t/oxqRMfInXir8hcRXUyV7GFzFX8RurjjEh9XBipj1tO+pNMfc7s
TyJD+pOokThYKomDZZM4GDX1sgnsj75QzkfYHzUrju9AP23e4ij8vcjQZfUB
Qfy9TocZWoH4e6+/9Y8G3Fd4xUrARwPCeACv3p71P3VMW0kd0/hWrtv/rFca
JfVKvUOnhv9Zl2RP6pJWsZ35z/lix0h8bz2J7zFIfO9EpvzkP+t6JEldD9U9
/cZ/1e+86vr5n3U6Zq53DYrf91GnGtv4OrD8vO5Ve7AXy8/b2VMv/TNvuYnk
LVeQeSs2ZN7KczJvhRXHqyNxPDkSxxv2N6D9lET3jRUd2E/RkL1wAfwU1ryV
q2TeShmZt2I32H0E3udD5cYP7fh9Yi6ErYL36SBxmGIShzlL4jCIxGGcSBwm
ksRhzEle2RaSV9ZG8soGSHwml8RnLpL4DCs/yvdfc3xY880TSF+CWtKXgDXX
ZozMtdEic23YfLjL9bDeTz0ss082PgGprUxateK+BSojc2cYPcy5M2fJ3BnW
/JdNZP5LBJn/knJiPs9rfI60Hqssu2LjTekr5B47aq77d55LJpnn8pLMc2n6
1zyX02Sei1jrXJqO8MC3IKCj4OZwCuhYkbwXNZL3okXyXkT4MtPMfjPQPrFn
lSKdt5H27ROxGQ+PIN36OEUjjGfVXamlptyhLoR+2fCz0xCN/GsOyFQyB+SS
8Ia6K70M5BJpsjBjXg7lHE59OK1riv8jV9XwIAOFnVf+rBicSo2fo7hPt5ii
NLN3Ap2/sF3Nn7xWhTuZ8i7vf7j6ieXf/IQjncz8BGmSn8C6Z4l8zrxnGc5h
3rOw+maUkL4ZAaRvxjQpDvq5HNcGO+G5bzUn+eG5rPyBIpI/oEzyB46svR/8
Db/PyuFaSos9mdLmXah2cLcVinTjKn6K7aLaEE7t6wk3UPctl3LPltt/5zg8
J3Mc9pE5DuXuqSeV8L75ynBTV0XvoDPynJ9bNlsgXaNMej8/KNUWwn4adZas
h/1k3b87mjLv3/nJ/Ttr3oEgmXeQSOYdsOJv42TuQBuJvy3uklDa/YOBbGd0
Xa4NzKCG2G/dkUxz/Htf2UnuK0XIfeVqnqKaS/h/mSk65+oszKHU591+8NDS
FP0f5nekOg==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{319.74393482221893`, 182.38795651873906`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0, 10}, {-50, 50}, {-2199.999794621539, 2199.999794621539}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.08965818698963528, -3.1830974981232276`, 1.1444875390092255`},
  
  ViewVertical->{-0.009523051326001572, 0.3380929491001045, 
   0.9410645404339899}]], "Output",
 CellChangeTimes->{3.938657540815487*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"61c5acdc-1de8-4cdf-a111-e5a6871c35f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"e", " ", 
         SubscriptBox["v", "s"]}], 
        RowBox[{"2", "Pi", " ", 
         SuperscriptBox["h", "2"], 
         SuperscriptBox[
          SubscriptBox["v", "F"], "2"], 
         SuperscriptBox["\[Beta]", "2"]}]], ")"}], 
      RowBox[{"-", "1"}]], 
     RowBox[{"j", "[", 
      RowBox[{"50", ",", "30", ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Lambda]"}], "}"}], ",", 
    RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "plot", " ", "of", " ", "current", " ", "j", " ", "over", " ", "a", " ", 
      "single", " ", "wavelength", " ", "for", " ", "variable", " ", "values",
       " ", "of", " ", "u"}], "=", 
     SubscriptBox["\[Mu]", "0"]}], ",", " ", 
    RowBox[{"\[Delta]", "=", "\[Delta]\[Mu]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"e", " ", 
         SubscriptBox["v", "s"]}], 
        RowBox[{"2", "Pi", " ", 
         SuperscriptBox["h", "2"], 
         SuperscriptBox[
          SubscriptBox["v", "F"], "2"], 
         SuperscriptBox["\[Beta]", "2"]}]], ")"}], 
      RowBox[{"-", "1"}]], 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"u", ",", "30"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", 
      RowBox[{"-", "60"}], ",", "60"}], "}"}], ",", 
    RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"plot", " ", "of", " ", "acoustoelectric", " ", "current"}], 
      " ", "<", "j", ">", " ", 
      RowBox[{
      "over", " ", "a", " ", "range", " ", "of", " ", "equilibrium", " ", 
       "chemical", " ", "potentials", " ", "u"}]}], "=", 
     SubscriptBox["\[Mu]", "0"]}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "variable", " ", "values", " ", "of", " ", "\[Delta]"}], "=",
      "\[Delta]\[Mu]"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.938569226795718*^9, 3.938569286223597*^9}, {
  3.938569318953166*^9, 3.938569336226099*^9}, {3.938601937010394*^9, 
  3.938601938864832*^9}, {3.93860199423997*^9, 3.938602003141674*^9}, {
  3.938602968125729*^9, 3.938602970845887*^9}, {3.93860357776702*^9, 
  3.938603645084238*^9}, {3.9386036757964363`*^9, 3.938603677243175*^9}, {
  3.938603725331748*^9, 3.938603752112693*^9}, {3.938657326829996*^9, 
  3.938657328948591*^9}, {3.938658241551553*^9, 3.938658332237873*^9}, {
  3.93870003836692*^9, 3.9387000413826933`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"0d367708-5cca-4c40-b9cb-4b857a2312b5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$3005819#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-799.9999269521029, 2199.9996620903576`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9385692898952837`*^9, {3.938569330114814*^9, 3.9385693414932632`*^9}, 
   3.938601948031382*^9, 3.9386020621099787`*^9, {3.938603658739171*^9, 
   3.938603682831216*^9}, {3.9386037325964203`*^9, 3.938603759772273*^9}, 
   3.938657334937867*^9, 3.938700074268742*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"a483292a-d6ca-4562-b3bb-153e1c404a50"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
4VWbadx6POhdXxUXVWK2bwlypJFSWiCVm8e8V722y2cPjdbPg/faZ3HRfd71
oCRPGpf6Nd8SO8PF/oHj34q9aSx8cM1xWwQXFXfcPfbUn8Z6R376wu1crKu4
8NvyKI2XxvM7yu252Hgn234qSaPfZUlDHysuLj32604+ReO0/s8NlQZcXKG/
VfTwOI1v0s00A7W4mOW/56VmDI0Z3MIwJTUuzgu+1iU6QaPOqSPLjy7i4obv
9Y5t8TT+Xd/qozGbi5e+Sx/oTaDxWaOg7P0kB9XTT/a3JtGYSBdJRA5z8Gy0
0cvbKTS6aSzZrvOTg7FyS975p9K48k1Y0ac2DhptK++fk05jf/CX8RONHOyN
95OIPsvUS85i08a3HPyvrGFGWwaNsU+Ks74/52CQS+Vr+UwaH+fsmveinINj
V0aP2ZyncUy0JDy/lIOP1Q3jbbNo1Hd/3hV3jYPdbRYZq7OZ/FlhLv7ZHPxg
ecCzgeE82bUvbM9w8OK/PQ9cLtDYOtKyQe8kB50kLx4qYFjmY9KVpTQHO856
Hahm2O6W2ZI/IRxsH8u7UsHwyeSRiCZfDr7MLFEhGX56qOBX+W4OQoyC2FyG
xze777zgzMEF22b4eTDxNmhJvonYxMEAZ52SWEafv8RT9l4+B8dXSK8KY/Rf
7QopNDfi4JnKjwJ9Jr8vL1Yt19Th4NaJ7rT7TP6yec2xEuocPO9e/2g2Ux/7
46dHepZzUHVmSqRKGo1xe3j73kpy8H1k661pZ2isNBl6XzqTg0SDp/V1ph8T
ilf5qeNsVPxZvEWN6ZfBhGtp6AAb5f52/dhzisaDzfNUtnWy8abMWTdfpt9t
6YGTiu/Z6D/D06A5kka5w+p+U16z8XNhwFk+4x9Hh4bmb8jGqwenPAwNp/GF
JPf+tUI2Oi9Zqm8eRKN43y+NuItsVMIM9TbGn0Y1l9P80tnYqbZJbpMP498T
c4LXH2OjtM+yWWd20fjdq7xNKoyN2Zf3KQe60ahgftBuxJ+NoVadR1WdaEyY
+kG7fBsbZ9u1FE9n5lNweE6XYD2jR+HrzW/raSx23eqyahUbNdK6dUTMfOzY
OPPFXEU2RjYQA8PqNLoO+V6pncNG3s/mkEgZGjl+G3e6fmWhUrqrtN44hYdt
ftSw6lmooqyxv3mIwuuaWWzFGhYurg4U8+2hUOW/qcu/3WPh8c2hqWbMejNz
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
nlYVAv7//gM0/u/+A/4HshM8eg==
       "]]},
     Annotation[#, "Charting`Private`Tag$3031978#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{792.1138916015625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-60, 60}, {-564.1003063365906, 564.1007644876317}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9385692898952837`*^9, {3.938569330114814*^9, 3.9385693414932632`*^9}, 
   3.938601948031382*^9, 3.9386020621099787`*^9, {3.938603658739171*^9, 
   3.938603682831216*^9}, {3.9386037325964203`*^9, 3.938603759772273*^9}, 
   3.938657334937867*^9, 3.938700083040011*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"02dd2556-734b-4e7e-8507-948a51a352ae"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[Beta]"}], 
              RowBox[{"(", 
               RowBox[{"u", "-", 
                RowBox[{"\[Delta]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
          "]"}], "-", 
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[Beta]", 
              RowBox[{"(", 
               RowBox[{"u", "-", 
                RowBox[{"\[Delta]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
          "]"}]}], 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Beta]", 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], "]"}], 
         "+", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
          "]"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Beta]", 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], "]"}], 
         "+", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
          "]"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{
      SubscriptBox["\[Mu]", "0"], ",", "\[Delta]\[Mu]"}], "]"}], " ", "=", 
    " ", 
    RowBox[{"<", 
     RowBox[{"n", "-", 
      RowBox[{"/", "n"}], "+"}], ">", 
     RowBox[{"/", 
      RowBox[{"<", 
       RowBox[{
        RowBox[{"1", "/", "n"}], "+"}], ">"}]}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", 
     RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "\[Lambda]"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", 
          RowBox[{"-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
         "]"}], "-", 
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", 
          RowBox[{"-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Beta]", 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"b", "[", 
     RowBox[{
      SubscriptBox["\[Mu]", "0"], ",", "\[Delta]\[Mu]"}], "]"}], " ", "=", 
    " ", 
    RowBox[{"<", 
     RowBox[{"n", "-"}], " ", ">"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "\[Lambda]"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[Beta]"}], 
              RowBox[{"(", 
               RowBox[{"u", "-", 
                RowBox[{"\[Delta]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
          "]"}], "-", 
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[Beta]", 
              RowBox[{"(", 
               RowBox[{"u", "-", 
                RowBox[{"\[Delta]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}]}], 
          "]"}]}], 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Beta]", 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], "]"}], 
         "+", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], 
          "]"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{
      SubscriptBox["\[Mu]", "0"], ",", "\[Delta]\[Mu]"}], "]"}], " ", "=", 
    " ", 
    RowBox[{"<", 
     RowBox[{"n", "-", 
      RowBox[{"/", "n"}], "+"}], ">"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "[", 
   RowBox[{"u_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "\[Lambda]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"u", "-", 
             RowBox[{"\[Delta]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], 
           RowBox[{"(", 
            RowBox[{"u", "-", 
             RowBox[{"\[Delta]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"q", " ", "t"}], "]"}]}]}], ")"}]}], "]"}]}], "]"}]}]],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{
       SubscriptBox["\[Mu]", "0"], ",", "\[Delta]\[Mu]"}], "]"}], " ", "=", 
     " ", 
     RowBox[{"<", 
      RowBox[{
       RowBox[{"1", "/", "n"}], "+"}], ">"}]}], " ", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.938602813787115*^9, 3.938602836160255*^9}, {
  3.9386028704749193`*^9, 3.938602902142263*^9}, {3.938603126368011*^9, 
  3.9386032159895687`*^9}, {3.938658441637335*^9, 3.938658592750966*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"2793d286-fc96-47cf-a3b0-873368505c05"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"u", ",", "30"}], "]"}], ",", 
      RowBox[{"b", "[", 
       RowBox[{"u", ",", "30"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", 
      RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", 
    RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"u", ",", "30"}], "]"}], ",", "u"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"u", ",", "30"}], "]"}], ",", "u"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", "[", 
     RowBox[{"u", ",", "30"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "[", 
     RowBox[{"u", ",", "30"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "200"}], ",", "200"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.938602907430608*^9, 3.938602941660454*^9}, {
  3.938602974348175*^9, 3.938603001034567*^9}, {3.9386030370579853`*^9, 
  3.938603056296489*^9}, {3.938603223124194*^9, 3.938603236978469*^9}, {
  3.938603394733663*^9, 3.9386034007084713`*^9}, {3.938603526562552*^9, 
  3.938603535463623*^9}, {3.938605389694355*^9, 3.938605390008586*^9}, {
  3.938605451723454*^9, 3.938605464163496*^9}, {3.938605509308384*^9, 
  3.938605511737487*^9}, {3.9386574592837753`*^9, 3.938657461617914*^9}, {
  3.93868978000277*^9, 3.93868978244945*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"d18c1961-6cfa-4cf5-a492-63e1c3b8636a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12512#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1P8/0wkcwPEppXSFdCoRO6NpleNSw8Uby7LZ2qe0HJXzJS0lNCYiI18q
+RJFTrW0TyRz15WEHO84d+irnFRoJKGEau2Iq7t7PPrh9Xj9B0+qf+imndMo
FArvv/5/+nJN1ed4ApN2nTLkDJEoUoglEEegrQyvsPtIZK3qG5fGEJhuk810
6yZxyrr+H41IAhl76cZurSQG20m1NIMJtGBQ7YkqEtkbpgxneRJo8ti14eRR
EjWCVM66dAJNR3jzW5eTGFn4ItP0gQC9tCPlS8PkGHjg0xyJngB7Ls32cR8s
RKq9t2NXLR9TZwx1hx87jw/a+fua/Hh49qe0uI9J5/C4dcWOpQNcjHOmDBop
C7CBzo6rSuZgTRMU66bko1YPZ1vtTHfUyDmz3sQ4DwuH+ll1GWwMCT37Dev5
Sbyecdlnxrdu6OT/a0ffcDY+et9rc/0aC0+0jZnQR7Nwv8qFeVngilvF/pWb
gzIwkO3ALlA5o+/KG9J0hzQM8C4yUMcALu15mFcx7whW6knoK2wdUeSYECQU
JuPvI0mkk50DZi4RtxQXJmJcWP13XC4T5xrQdAQrpciw3GzSm2mLPWOxHtz5
sfjerzmNk2+D3J9TWoRXo9BPbl4Se9kK+0Om7kW3iVHn8OHv5ygsUdUG7A0X
Q9FA4ag+2myGuJH+ZtYiEeqkQKv9aSNUvJwni3HxQ5/y/KpfruiilDPz4t8z
PHF04pMHk6euK8tiNdwrs8eW7EOL72744MRafK5VV2IH0Vq7zwTR9KBfpKOo
POEJwRnmCWErjGB5wMK0tRQ/iNG2sM7VpQF2hG2uDhfBLs1tk9NHLaHrgP7a
l1OhsDvr9VfbRVZwJidXKCwSw5J5XhlaChvwrupIcbgbBXONB+yE4bYgGqyP
edF3EDalsh8q6Ex4bzEW/KOeFA6F1w9ZLXGA9qtDRpmpiVBOe0XSO9fB62QZ
N10jGQYZuaMWewAajYdf2YykwmRJ+o6I+84QeL6zSzp4DCrb3zQ0rnCFjqKL
Nyd1MkDk3CkqK2bB4WN/NRcos+Csnky5cbYbxHfju8Ab2dBIHTt15Agbtjz1
9zB5chLylCUujRR32PIxoahJPw9GNOxv1fhyYCqxNGs9Ox+YgVvjOV1ciNon
LXS8UwCzGFydHCce8JQUV57bOUiUFZ9SFvDBbK+ZeEB0HsZLmlb2agvgh7dr
1fqdhbC/4tKE1U0BvPZabMhkycGFlm3nWisA9LxgXsyRg372wWjhLQGsO9Hs
u5CQQ3kIfyL2TwHQ7rzzndwuBzVNNd7cJoBq9yuZrVFyiM5xGg8YFsB4QIei
olQO0rBH6jxjAuoWPOoOWECC4FndmlJTArjmy34bNySB6lEiqTUjIF5icDuD
SkL9slj1C0sCOp7e31+7ioTpSqraeg0B7qVlbxnuJKTwQj7c5hPguufrMqdD
JAhvCm2VBAGMFI5kIImEZZYQ+c6TgJpe431ZaSQ0aep/WORDQIu3bKj/NAna
NZWqnbsIUHjO1ZVdI+Gp5YXV0cEENESs5guqSSjNS4s4HkJAYvtE9bRbJHiI
d6iuigl44+VruuceCUa97NV/SAjIP/h5EbWdhGG+dcSTaAKGn62Dx50k1NQY
lg/HEtCfaJib9ZyEL37BF7/gX0EmU0E=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12512#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-70, 70}, {-2676.6447340668547`, 2676.6447340668547`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"a", "(", 
         RowBox[{
           TagBox["u", HoldForm], ",", "30"}], ")"}], 
       RowBox[{"b", "(", 
         RowBox[{
           TagBox["u", HoldForm], ",", "30"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9386029460761833`*^9, {3.938602978444581*^9, 3.938603002820334*^9}, {
   3.938603040845069*^9, 3.938603059391519*^9}, 3.938603242946332*^9, 
   3.9386034036555967`*^9, 3.938603545381309*^9, 3.938605477582402*^9, 
   3.938606023916602*^9, 3.938657381631263*^9, 3.9386574705427017`*^9, {
   3.9386897866416073`*^9, 3.938689804961823*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"c3a49e01-34d5-4a9f-b182-f3bcddf5845c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1Pk7FHgcwPFxxBTSagipdrKOHKEx5jvIfGYc81VqS1vZkkbIqKwtFOuI
ySOPaml50jpqCqVIW6sn7SqfZDvW+RBrE0khx6JZ99XuPs/+8H7e/8GLfSDM
O0iZwWBs+bf/7uv/dvjTJ4pNkR4LyUv4+MbQV6EzRzF1SVVWrhofD7xsHTeZ
ohg1/nDDXWU+SsW1c5tHKU5mO4d2zBAMt76/5GIXRSWb+DHOIMHU6bOmto8p
8mL9t7ytIfjgPPGTyCiauKRzNp4jqFeVVoeqFBMSD9nOaBMUu/wZv3/MAwu6
CnPiGDw02DqprjHhjiz7d4GWKg5oHpFY8fOcG7bISKOGBhdL711zdRx2xVjm
KQv3BQ62pMqv1n0UYeGd/XHzKhwMj+G+dOkSopbx1ruN43a4VeZgd6sZMOjp
SHTMsC1m8vVrt90VoOOzytfFYzYYXTj9SjljI1bk+5mlPrVGOUn6sT7LCa8K
973TK7ZE0VRvaeY1Pj7P3B11s3QdNg2fDNE7w8NQm72l9mlmWKBZ1Xwng4tt
3XNVmy6YYIC/4zvmMQ5KGTsuPQ83xrzuVM89e+ywPHu6PHcvGzl6iytT69bj
iulq14iG1chskXLbzltgdnFGoGeGIUq6DTW+vmSKnBc7CiMv62HmPr7l9l1r
8aau+WaT3ToYG7BMEeNmhGWyQc5td01sLfL2qjjCwszOHIvzoapYn9F+vPUP
daxY21v+rG2y8m/BEU/11yOVWh7BEveON5WjgvRQhnRYEGqRNWET0ilIjjr6
5os4Jvye0NppFD8lkDUbLn+0hgXlj9kpaZ+rAlO7gD17wwi8g/mxnGJN2O51
8JBZ8lq4pS8OXEjWgRxR0ftVYaagWm65iPetHiyuiWPllVhAXNG2hmWlhjCm
qtTz4cp60HZaX12bvxrGFf0qcqEdJEUM9XWI2CCzWjWa5suBFq0sqaefMdS7
XLc6uIML2h9K5jp2moCV4eyThAgeKNuePpscZQa0vrA48SgfinJa+uai1kH/
zijnlEAn6JNnMCciLSH3Gsu8OXEjZLMcW1TKrGFpo3qgaowAmAwVidcjG6D+
B+adGwAih7LaTQdswav6q7yZdiGcyDspzPtoB7czjgUVt4rgvgoq2P0bIEc8
vie+1xUMhnxuZE1woDc4P8rtvRu8H/tFt1JhD2NHew5pdbiD8YKqzqYBLpyR
nE2dGvCABvdQnzWTDpD4q19Ta68YhJIcHzMFD/SfNh53GhSDz3dK6SkTPPip
UbRSPiKGIP3uF/0zPOjsMQ0MmRLDl9Nq7iUqBJyXjYzPLqZgpXvOx06XwFTg
SQO2NYXoAabCiRD4ZqlccjicwsOy/HbveAJqBjqLGk9QuLx81LdMRiDPOOmG
fSwF54uSLt3TBGqJVDGfRKEooOCvtjQCFgG2SekXKNDPItj7rxDouY/X7z2g
0BRvPnS4mkBs1QYvw0cUyKnc7+ueE2DVFYzGV1EIvqLNsakjIOpO4dMaCppB
A4mKFgJyze01r15TSPDl8qL7CJAVT8IEbyl8CAnqfzVIoIHNZRX0UDDyPZXn
PEpgwcFgX+gwhaofEjQY0wQuCM8oNSkorLyz9zf/eQLWXvOFDpMUGFKjxCdK
fKjeFbYpZ5aCawm6mKjx4X+/4H+/4B8V9URe
       "]]},
     Annotation[#, "Charting`Private`Tag$37524#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-50, 50}, {-25.04112233371945, 25.04112233371945}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9386029460761833`*^9, {3.938602978444581*^9, 3.938603002820334*^9}, {
   3.938603040845069*^9, 3.938603059391519*^9}, 3.938603242946332*^9, 
   3.9386034036555967`*^9, 3.938603545381309*^9, 3.938605477582402*^9, 
   3.938606023916602*^9, 3.938657381631263*^9, 3.9386574705427017`*^9, {
   3.9386897866416073`*^9, 3.938689806803399*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"ba97307f-324a-461b-8006-ef9ee9133a81"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hf7//aj/A2Vq/00=
       "]]},
     Annotation[#, "Charting`Private`Tag$39735#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-200, 200}, {0., 0.14593791535871511`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9386029460761833`*^9, {3.938602978444581*^9, 3.938603002820334*^9}, {
   3.938603040845069*^9, 3.938603059391519*^9}, 3.938603242946332*^9, 
   3.9386034036555967`*^9, 3.938603545381309*^9, 3.938605477582402*^9, 
   3.938606023916602*^9, 3.938657381631263*^9, 3.9386574705427017`*^9, {
   3.9386897866416073`*^9, 3.9386898106304703`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"beecb42d-8dd1-4a2d-9f21-495cafd4f608"]
}, Open  ]]
},
WindowSize->{1440, 751},
WindowMargins->{{0, Automatic}, {-32, Automatic}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9da4fb21-fec9-40ff-bc43-b79b70b0854b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1049, 20, 134, "Input",ExpressionUUID->"a17fa008-9101-4cfa-8b4f-07ba45ed53e0"],
Cell[1610, 42, 3602, 98, 166, "Input",ExpressionUUID->"4fbd73c4-4d7e-4c00-8f63-53055783248c"],
Cell[5215, 142, 10387, 269, 401, "Input",ExpressionUUID->"cb1122be-f8c6-43ae-af3e-965d8be04740"],
Cell[CellGroupData[{
Cell[15627, 415, 2707, 51, 73, "Input",ExpressionUUID->"8ef288e6-0475-4439-9068-c5c6212f0440"],
Cell[18337, 468, 14229, 249, 240, "Output",ExpressionUUID->"78ee9281-3eb5-4226-bb27-f8f95a3b8a7c"],
Cell[32569, 719, 11482, 204, 232, "Output",ExpressionUUID->"6b79d781-aa6e-4460-9cb3-d5b1beb21966"]
}, Open  ]],
Cell[44066, 926, 7638, 216, 325, "Input",ExpressionUUID->"7585566a-f5a5-477e-a8ba-0debaf12fc4e"],
Cell[CellGroupData[{
Cell[51729, 1146, 1369, 41, 98, "Input",ExpressionUUID->"6c3a0915-c178-44d6-b40b-12a83149ca2c"],
Cell[53101, 1189, 18868, 397, 144, "Output",ExpressionUUID->"a699b208-2d65-44ee-a0c7-e3282de6f223"],
Cell[71972, 1588, 871, 24, 54, "Output",ExpressionUUID->"1a203983-af19-4adf-a093-b14440a1b315"],
Cell[72846, 1614, 760, 20, 53, "Output",ExpressionUUID->"52cf4026-cfd8-4008-9fcd-9537cabf80f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73643, 1639, 2116, 59, 72, "Input",ExpressionUUID->"5e7b1e5b-7f84-4f34-a637-da675aa06870"],
Cell[75762, 1700, 41401, 795, 242, "Output",ExpressionUUID->"8b6507a7-5469-4ec4-8cb5-1e1c3df920b0"]
}, Open  ]],
Cell[117178, 2498, 9843, 273, 299, "Input",ExpressionUUID->"04ceb339-ce66-499e-bdaf-42b13fa8c888"],
Cell[CellGroupData[{
Cell[127046, 2775, 907, 25, 53, "Input",ExpressionUUID->"707887d6-d4bd-4bcc-abd0-b175f7f68361"],
Cell[127956, 2802, 151568, 2494, 199, "Output",ExpressionUUID->"61c5acdc-1de8-4cdf-a111-e5a6871c35f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279561, 5301, 2858, 76, 125, "Input",ExpressionUUID->"0d367708-5cca-4c40-b9cb-4b857a2312b5"],
Cell[282422, 5379, 11891, 214, 229, "Output",ExpressionUUID->"a483292a-d6ca-4562-b3bb-153e1c404a50"],
Cell[294316, 5595, 10322, 189, 507, "Output",ExpressionUUID->"02dd2556-734b-4e7e-8507-948a51a352ae"]
}, Open  ]],
Cell[304653, 5787, 8374, 257, 198, "Input",ExpressionUUID->"2793d286-fc96-47cf-a3b0-873368505c05"],
Cell[CellGroupData[{
Cell[313052, 6048, 2258, 60, 94, "Input",ExpressionUUID->"d18c1961-6cfa-4cf5-a492-63e1c3b8636a"],
Cell[315313, 6110, 23144, 446, 242, "Output",ExpressionUUID->"c3a49e01-34d5-4a9f-b182-f3bcddf5845c"],
Cell[338460, 6558, 3761, 80, 240, "Output",ExpressionUUID->"ba97307f-324a-461b-8006-ef9ee9133a81"],
Cell[342224, 6640, 14529, 257, 242, "Output",ExpressionUUID->"beecb42d-8dd1-4a2d-9f21-495cafd4f608"]
}, Open  ]]
}
]
*)

