(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2237505,      41656]
NotebookOptionsPosition[   2228886,      41528]
NotebookOutlinePosition[   2229328,      41545]
CellTagsIndexPosition[   2229285,      41542]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"10", 
     RowBox[{"(", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plots", " ", "behavior", " ", "not", " ", "affected", " ", "by", " ", 
    "choice", " ", "of", " ", "wavelength", " ", "since", " ", "we", " ", 
    "are", " ", "averaging", " ", 
    RowBox[{"over", " ", "[", 
     RowBox[{"a", ",", 
      RowBox[{"a", "+", "\[Lambda]"}]}], "]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "=", 
   FractionBox[
    RowBox[{"2", "Pi"}], "\[Lambda]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vd", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]Vg", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vg2", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vs", "=", "3800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   FractionBox[
    RowBox[{"3.4", 
     RowBox[{"(", "8.85", ")"}], 
     RowBox[{"(", 
      SuperscriptBox["10", 
       RowBox[{"-", "12"}]], ")"}]}], 
    RowBox[{"25", 
     RowBox[{"(", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]], ")"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "=", 
    RowBox[{"1.602", 
     RowBox[{"(", 
      SuperscriptBox["10", 
       RowBox[{"-", "19"}]], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dN", "[", 
     RowBox[{"a_", ",", "b_", ",", "T_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"b", "-", "a"}], 
     RowBox[{"T", "-", "1"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vg", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"v", "-", 
    RowBox[{"\[Delta]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q", " ", "x"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "[", 
    RowBox[{"v_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["c", "e"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["v", "2"], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Erf", "[", 
          FractionBox["v", 
           RowBox[{"d", 
            SqrtBox["2"]}]], "]"}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["d", 
        SqrtBox[
         RowBox[{"2", "Pi"}]]], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["v", "2"], 
          RowBox[{"2", 
           SuperscriptBox["d", "2"]}]]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"v_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["c", "e"]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["v", "2"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Erf", "[", 
          FractionBox["v", 
           RowBox[{"d", 
            SqrtBox["2"]}]], "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["d", 
        SqrtBox[
         RowBox[{"2", "Pi"}]]], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["v", "2"], 
          RowBox[{"2", 
           SuperscriptBox["d", "2"]}]]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"np", "[", 
    RowBox[{"v_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"n", "[", 
     RowBox[{"v", ",", "d"}], "]"}], "+", 
    RowBox[{"p", "[", 
     RowBox[{"v", ",", "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nm", "[", 
     RowBox[{"v_", ",", "d_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{"v", ",", "d"}], "]"}], "-", 
     RowBox[{"p", "[", 
      RowBox[{"v", ",", "d"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "\[Lambda]"], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"nm", "[", 
        RowBox[{
         RowBox[{"Vg", "[", 
          RowBox[{"v", ",", "\[Delta]", ",", "t"}], "]"}], ",", "d"}], "]"}], 
       
       RowBox[{"np", "[", 
        RowBox[{
         RowBox[{"Vg", "[", 
          RowBox[{"v", ",", "\[Delta]", ",", "t"}], "]"}], ",", "d"}], "]"}]],
       ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["e", "c"], 
    FractionBox["1", "\[Lambda]"], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        FractionBox["e", "c"], 
        RowBox[{"np", "[", 
         RowBox[{
          RowBox[{"Vg", "[", 
           RowBox[{"v", ",", "\[Delta]", ",", "t"}], "]"}], ",", "d"}], 
         "]"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["c", "e"], 
    FractionBox["1", "\[Lambda]"], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox["e", "c"], 
       RowBox[{"nm", "[", 
        RowBox[{
         RowBox[{"Vg", "[", 
          RowBox[{"v", ",", "\[Delta]", ",", "t"}], "]"}], ",", "d"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["c", "e"], 
    FractionBox["1", "\[Lambda]"], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox["e", "c"], 
       RowBox[{"np", "[", 
        RowBox[{
         RowBox[{"Vg", "[", 
          RowBox[{"v", ",", "\[Delta]", ",", "t"}], "]"}], ",", "d"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"H", "[", 
     RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["1", "\[Lambda]"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"v", ",", "i", ",", "t"}], "]"}], ",", "d"}], "]"}], 
           RowBox[{"np", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"v", ",", "i", ",", "t"}], "]"}], ",", "d"}], "]"}]], 
          ",", "i"}], "]"}], "/.", 
        RowBox[{"i", "->", "\[Delta]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", "DA", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"J", "[", 
     RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["e", "c"], 
     FractionBox["1", "\[Lambda]"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            FractionBox["e", "c"], 
            RowBox[{"np", "[", 
             RowBox[{
              RowBox[{"Vg", "[", 
               RowBox[{"v", ",", "i", ",", "t"}], "]"}], ",", "d"}], "]"}]}]],
           ",", "i"}], "]"}], "/.", 
        RowBox[{"i", "->", "\[Delta]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", " ", "DB", " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.939081452733767*^9, 3.939081453917611*^9}, {
   3.939082238958426*^9, 3.939082333846203*^9}, {3.939082431475381*^9, 
   3.939082630805738*^9}, {3.939082894009164*^9, 3.939082903991186*^9}, {
   3.939082942533619*^9, 3.939082984405491*^9}, {3.939083183401019*^9, 
   3.9390832183912067`*^9}, {3.939083341709969*^9, 3.939083348148292*^9}, {
   3.939083724676812*^9, 3.939083726964081*^9}, {3.939083857217104*^9, 
   3.939083892704138*^9}, {3.939084261092752*^9, 3.9390843627743807`*^9}, {
   3.939084393097316*^9, 3.939084426696949*^9}, {3.9390844876713457`*^9, 
   3.939084512229357*^9}, {3.939084631210079*^9, 3.939084712256255*^9}, {
   3.9390853302176847`*^9, 3.939085400982634*^9}, 3.939085510325151*^9, {
   3.9391750590550747`*^9, 3.939175059334177*^9}, {3.939175720287529*^9, 
   3.939175806611691*^9}, {3.939175938832412*^9, 3.939175939256164*^9}, {
   3.939217790932124*^9, 3.939217832193996*^9}, {3.93924786647685*^9, 
   3.939247867674214*^9}, {3.939248681247978*^9, 3.939248681742115*^9}, {
   3.93924897251552*^9, 3.939248995529398*^9}, {3.939294393980647*^9, 
   3.939294394325816*^9}, {3.940000853432972*^9, 3.940000908486969*^9}, {
   3.940000946495669*^9, 3.940000987715192*^9}, {3.9400779992546*^9, 
   3.9400780072456217`*^9}, {3.940078835406109*^9, 3.940078885827819*^9}, {
   3.94011103961206*^9, 3.9401110487220373`*^9}, {3.9401125364610443`*^9, 
   3.9401126374732323`*^9}, {3.940120490094967*^9, 3.940120491581986*^9}, {
   3.940121440952372*^9, 3.9401214411187363`*^9}, {3.9401214721090193`*^9, 
   3.940121472179731*^9}, {3.942514705170898*^9, 3.942514707419503*^9}, {
   3.942516116836465*^9, 3.942516118098076*^9}, {3.9437233461148043`*^9, 
   3.943723347714962*^9}, {3.949184224894915*^9, 3.949184316669034*^9}, {
   3.949185069274179*^9, 3.9491850743765793`*^9}, {3.949352922880579*^9, 
   3.949352994257786*^9}, {3.949353043158164*^9, 3.949353106325911*^9}, {
   3.949353169202854*^9, 3.94935329204602*^9}, {3.949353331166429*^9, 
   3.94935338255466*^9}, {3.949717252614316*^9, 3.94971726111941*^9}, {
   3.962724910984939*^9, 3.96272491432896*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e6a0baff-c705-42c0-957b-acfe36208ee9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"j", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"e", " ", "vs", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"nm", "[", 
       RowBox[{
        RowBox[{"Vg", "[", 
         RowBox[{"v", ",", "\[Delta]", ",", "x"}], "]"}], ",", "d"}], "]"}], 
      "-", 
      FractionBox[
       RowBox[{"A", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], 
       RowBox[{"B", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["j", "aec"], "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"e", " ", "vs", 
     FractionBox["c", "e"], 
     FractionBox["1", "\[Lambda]"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["c", "e"], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{"nm", "[", 
         RowBox[{
          RowBox[{"Vg", "[", 
           RowBox[{"v", ",", "\[Delta]", ",", "t"}], "]"}], ",", "d"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"e", " ", "vs", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", 
    RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"e", " ", "vs"}], 
      RowBox[{"2", "\[Delta]"}]]}], " ", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"B", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], 
       RowBox[{"H", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], 
       RowBox[{"J", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}]}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], ")"}], "2"]]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9390845538774033`*^9, 3.939084579322606*^9}, {
   3.9390847192707863`*^9, 3.939084952108238*^9}, {3.939085006676586*^9, 
   3.9390850098242493`*^9}, {3.939085486341667*^9, 3.939085491803967*^9}, 
   3.939173754337817*^9, {3.9391758158599443`*^9, 3.9391758448909273`*^9}, {
   3.9392178374169817`*^9, 3.9392178409527082`*^9}, {3.9392947578882427`*^9, 
   3.939294831354863*^9}, {3.9493520363272943`*^9, 3.949352072406863*^9}, {
   3.949352116219598*^9, 3.949352155242297*^9}, {3.9493521964649267`*^9, 
   3.94935237157148*^9}, {3.949352654050466*^9, 3.9493526878174343`*^9}, {
   3.949353388115555*^9, 3.9493534111454487`*^9}, 3.949353685273239*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"186333fa-6df6-411a-8c20-5f8e83cdbc52"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["c", "e"], ")"}], 
           RowBox[{"-", "1"}]], 
          RowBox[{"nm", "[", 
           RowBox[{
            RowBox[{"Vg", "[", 
             RowBox[{"0.5", ",", "1.5", ",", "x"}], "]"}], ",", "0.1"}], 
           "]"}]}], ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["c", "e"], ")"}], 
           RowBox[{"-", "1"}]], 
          RowBox[{"np", "[", 
           RowBox[{
            RowBox[{"Vg", "[", 
             RowBox[{"0.5", ",", "1.5", ",", "x"}], "]"}], ",", "0.1"}], 
           "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "/", "4"}], ",", 
         RowBox[{"3", 
          RowBox[{"\[Lambda]", "/", "4"}]}]}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["c", "e"], ")"}], 
            RowBox[{"-", "1"}]], 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.5", ",", "1.5", ",", "x"}], "]"}], ",", "0.1"}], 
            "]"}]}], 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["c", "e"], ")"}], 
            RowBox[{"-", "1"}]], 
           RowBox[{"np", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.5", ",", "1.5", ",", "x"}], "]"}], ",", "0.1"}], 
            "]"}]}]], ",", 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["c", "e"], ")"}], 
            RowBox[{"-", "1"}]], 
           RowBox[{"np", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.5", ",", "1.5", ",", "x"}], "]"}], ",", "0.1"}], 
            "]"}]}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "/", "4"}], ",", 
         RowBox[{"3", 
          RowBox[{"\[Lambda]", "/", "4"}]}]}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "15"}], "}"}]}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"f", "[", 
      RowBox[{"v_", ",", "\[Delta]_", ",", "d_"}], "]"}]}], ":=", 
    RowBox[{"vs", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}], 
       RowBox[{"B", "[", 
        RowBox[{"v", ",", "\[Delta]", ",", "d"}], "]"}]}]]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "vs"], 
      RowBox[{"f", "[", 
       RowBox[{"0.1", ",", "2.0", ",", "d"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "0.05"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.23"}], "}"}]}]}], "]"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.9397713836000757`*^9, 3.939771488979686*^9}, {
   3.939771852888603*^9, 3.9397718571834717`*^9}, {3.939772866624704*^9, 
   3.939772994043124*^9}, {3.939773080064817*^9, 3.939773113431592*^9}, {
   3.939773308322648*^9, 3.9397733260005493`*^9}, {3.939773369456502*^9, 
   3.939773374671133*^9}, {3.939773436518043*^9, 3.9397734905554647`*^9}, {
   3.9397735387548103`*^9, 3.939773547137463*^9}, {3.939773620568622*^9, 
   3.939773755677121*^9}, {3.939773797682642*^9, 3.939773812297226*^9}, {
   3.9397749051450567`*^9, 3.9397749130138474`*^9}, {3.939774943853972*^9, 
   3.939774974891399*^9}, {3.939938403019403*^9, 3.939938421238039*^9}, {
   3.939938488182819*^9, 3.939938503582758*^9}, {3.939939858102463*^9, 
   3.939939858477858*^9}, 3.939942601453101*^9, {3.940000698924056*^9, 
   3.9400007114775877`*^9}, {3.9400801778713427`*^9, 3.94008019603928*^9}, {
   3.94011941482836*^9, 
   3.9401194363350782`*^9}},ExpressionUUID->"6ecd9be7-32c3-4606-8320-\
799afda81333"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.05", ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.15", ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.25", ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.35", ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.45", ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.55", ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "0.65", ",", "Vd"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<I~\!\(\*SuperscriptBox[\(0.05\), \(2\)]\) \
\!\(\*SuperscriptBox[\(V\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.15\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.25\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.35\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.45\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.55\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.65\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.0"}], ",", "2.0"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\) at varying intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\), fixed \
disorder \!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\) (V)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.05", ",", "Vd"}], "]"}], 
     ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.15", ",", "Vd"}], "]"}], 
     ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.25", ",", "Vd"}], "]"}], 
     ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.35", ",", "Vd"}], "]"}], 
     ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.45", ",", "Vd"}], "]"}], 
     ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.55", ",", "Vd"}], "]"}], 
     ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{
       RowBox[{
        FractionBox["e", "c"], "\[Sigma]"}], ",", "0.65", ",", "Vd"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", "c"}], "e"]}], ",", 
     FractionBox[
      RowBox[{"2", "c"}], "e"]}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<I~\!\(\*SuperscriptBox[\(0.05\), \(2\)]\) \
\!\(\*SuperscriptBox[\(V\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.15\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.25\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.35\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.45\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.55\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.65\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.0"}], ",", "2.0"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
carrier number density difference n at varying intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\), fixed \
disorder \!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n (\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "0.2", ",", "Vd"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "0.4", ",", "Vd"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "0.6", ",", "Vd"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "0.8", ",", "Vd"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "1.0", ",", "Vd"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "1.2", ",", "Vd"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<I~\!\(\*SuperscriptBox[\(0.2\), \(2\)]\)\>\"", ",", 
        "\"\<I~\!\(\*SuperscriptBox[\(0.4\), \(2\)]\)\>\"", ",", 
        "\"\<I~\!\(\*SuperscriptBox[\(0.6\), \(2\)]\)\>\"", ",", 
        "\"\<I~\!\(\*SuperscriptBox[\(0.8\), \(2\)]\)\>\"", ",", 
        "\"\<I~\!\(\*SuperscriptBox[\(1.0\), \(2\)]\)\>\"", ",", 
        "\"\<I~\!\(\*SuperscriptBox[\(1.2\), \(2\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.6"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) \
versus gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\) (V) at varying \
intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\), fixed disorder \!\(\*SubscriptBox[\(V\), \(d\)]\)=0.5 (V)\>\""}], 
     ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\)\>\""}], "}"}]}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.939085244586947*^9, 3.939085297517126*^9}, {
   3.9390854620783463`*^9, 3.9390854703269587`*^9}, {3.9391737102000427`*^9, 
   3.939173713625605*^9}, {3.939173782969935*^9, 3.9391737845361433`*^9}, {
   3.939174149911642*^9, 3.939174250428153*^9}, 3.9391748545531588`*^9, 
   3.9391749839069347`*^9, {3.9391750806775503`*^9, 3.93917513552479*^9}, {
   3.939175972074147*^9, 3.9391760175724697`*^9}, {3.939176169074292*^9, 
   3.939176204544407*^9}, {3.939176279680993*^9, 3.939176320277179*^9}, {
   3.93917645862641*^9, 3.939176531728628*^9}, {3.939176760020974*^9, 
   3.939176761899365*^9}, {3.93917695842199*^9, 3.939176963197378*^9}, {
   3.939213600642044*^9, 3.9392136014768476`*^9}, {3.939218133544425*^9, 
   3.939218142356679*^9}, {3.93921827779947*^9, 3.939218310356082*^9}, {
   3.939226313855852*^9, 3.939226333636382*^9}, {3.939248341268919*^9, 
   3.939248421842358*^9}, {3.9392486149241467`*^9, 3.939248770158733*^9}, {
   3.939249000894579*^9, 3.939249001509191*^9}, {3.9392493038676643`*^9, 
   3.939249305104618*^9}, {3.939249536723672*^9, 3.93924962150988*^9}, {
   3.9392496666108313`*^9, 3.939249694602838*^9}, {3.939249807424831*^9, 
   3.9392498312893972`*^9}, {3.939249997688078*^9, 3.9392500070235977`*^9}, 
   3.939260581478139*^9, {3.939260700343976*^9, 3.939260732192348*^9}, {
   3.939260986613406*^9, 3.9392610819843683`*^9}, {3.939263590037113*^9, 
   3.939263629621975*^9}, {3.939264085195649*^9, 3.939264093066391*^9}, {
   3.939264165713025*^9, 3.939264304886113*^9}, {3.939264336233389*^9, 
   3.939264341937037*^9}, {3.9392648951625233`*^9, 3.939264908880301*^9}, {
   3.9392649973884172`*^9, 3.939265088623981*^9}, {3.9392651984057493`*^9, 
   3.939265282232953*^9}, {3.939265621302884*^9, 3.9392656278849173`*^9}, {
   3.939265824815069*^9, 3.939265828508875*^9}, {3.93926701903129*^9, 
   3.939267062005519*^9}, {3.939267201289723*^9, 3.939267204699614*^9}, {
   3.9392943904890127`*^9, 3.939294392128458*^9}, 3.9401194725874767`*^9, {
   3.940120504903961*^9, 3.940120517278401*^9}, {3.940120684026164*^9, 
   3.940120686310227*^9}, {3.9401207793064404`*^9, 3.940120781237013*^9}, {
   3.940121556421649*^9, 3.9401215645243797`*^9}, {3.9401216948875723`*^9, 
   3.940121696350795*^9}, {3.940121846253252*^9, 3.940121878860148*^9}, {
   3.940122844146412*^9, 3.940122923183807*^9}, {3.940123126457163*^9, 
   3.940123160602108*^9}, {3.940123291000773*^9, 3.940123292205473*^9}, {
   3.9401234539950113`*^9, 3.940123456553952*^9}, {3.940123982394597*^9, 
   3.940124045696393*^9}, {3.9401812929165907`*^9, 3.940181293031472*^9}, {
   3.940210548972131*^9, 3.94021055258563*^9}, {3.940214915331359*^9, 
   3.9402149164984426`*^9}, {3.94021533105254*^9, 3.940215333852385*^9}, {
   3.940217442181466*^9, 3.940217451620661*^9}, {3.940217492747637*^9, 
   3.940217536466313*^9}, {3.940258406542139*^9, 3.940258529129868*^9}, {
   3.9402586454504833`*^9, 3.9402586968037043`*^9}, {3.9402589095146313`*^9, 
   3.9402589102325993`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"00835d79-f4d5-4ea1-8fcf-a9fc25a9e5ab"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4001235#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4001235#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmXk0lV/UxxUiFRpEmYdCqQxFg9pChSIJiRIVJTQoUSRJo5Iy/EwZMpTK
0KUM0Ta7XJc7GO/FfcxCl9Io8T7vu96/nvVZ37332Xufvc5z1jrKJy/YuM0X
EBBInCcg8L/fjbBydG5uDgU+Dxr0H6fghT+q9/9Mz2FwE3bSXCiYl6+zduoH
qXfeP/v+FAV1NSxPDo2RLJZrFeZBQYOloZzGdtK+rMHc2JeCRv1fG+JySZ6v
6dL9iII29+hv9E6QXG1iSiuloF9zqPeZT7MY/MY/NUUxH1taFo1WuP4j4/X9
TRUqQPnyCysM5GbQaOeOjAZ+Ab73rBaW6J7GYOFi9e2j79Hlkc5kZ8gfNFLR
vWMsXYi/nwXcR/iN5ctLYmQOFmGaeM+q2N6faNRkH4TUYky00PFhP/iBApOb
2x08P2KIl6u/pvl3LO/7O6S9pgwDBF/7+Xz5hgJ0DdFwM0TX4Ga1tldfMaWb
Ka9HK8fossHYxHOTGHzQAq6vrkRn//ggA7dJTNlrV5ikVIkaegdPs05MYvnf
x151ayux5FXRJlG7SXRhn0lZo1eJPZFhtZeB9A/a9VbqQCWqn9P5brGC1PnC
ztSgSvTZMJ30LWACg5ee6okbJv15GovfqvAxJePy8+XUKgw0nJcdL8NHo5Du
9smmKtwZ12n5QJyPxMP9fFZrFZbbPHziPv2FrNesOqO/CutqxpYps0hmLXl9
d64KW97krIq59QUFjq1R3r61Gvl+m9WDiXFMUe/670l2NapKGhnbJo3hRQ3X
rENZNRiu3Xv9XOQYRpx9V7OXUoO/rUPyg++PIYHu/iYfa7DxabVats8YCux+
TD1Mr8Ery81FFuwbw+DGIC3m1xqsXWnTWDgxikb5pkJmhrV4Tv60vezuUQxm
uU9caq/Flp3CT3T0R/Gi2oWT53trcZdzZt2+9aOYojHYeHmsFpcnj2y9IjWK
1q9ri+PmarFUyVuW/vkz5qUZ2x7WqENxtatE0LPPyFik338/oA4p6+6f6+sf
QSURzsXjmlRUZLoUr+8cwXKrSC3nzVR85LdN1LdpBCW96ds9gIpu1aMZIsUj
GPHi3cMkOyrKOFv2aoWPYN6WfS/uhVDxxtNlDn5bR9DlYoa7aw8VzX4n7ln8
eBiNDPcUvkyqx/dJvlF2IcPoYnJIfdmbelTZY9Wf5Efq81REHxTW49+nc8E6
J4eRYF/zSGTUY876k6X2BsOo9PMH00mwAVecUNdL7R1CgZA/s1aeDcireaek
rz+E2i7XXJP20DDw8B/TrVpDGNHndplmQ0OZXiOP7SpDSNhUlAq70NB6pvnd
LvEhNPrkYPbiOg3LdfnG+4YGkZFND7+RR8OU5HVuDjGD6LKoht6s0Ignr6Vl
Xf85gHlOrbTQBXScXTBGDxwfQMnoTqtQKTrGR+l+C+oj9SCPv5FqdGTlVmy/
3UTyB+rOAWM6mgzxaGGZJJ919N4fTEe1w3L8RPsBvHj3rb/lLB0HtaJ18UM/
llMzF/8QacZ1QRn8kTf95P6eicpa3Yznm9+/Xpbaj0qLzxf7bmjG35faVNzD
+tGoZ3GU3eFmFCuUXr7EpR8lfZwoW1OaUXt3/JTjQlK325fppMjAALvkgp9O
fehSrLtOkMrA8szci0qH+lA0jhspymag0G/Ustjbh+Ue/9TlexgYHk+kP9fu
w6I7KyyvfGdgCk852lS4D1+dOiPao8zEWo9032c5vWgWnataepOJS4Oy9DfO
68WtHwr/xpqx8O4HDarkLwL9xwPvDdiycJr/8ujUOEHGkVi325WFfScyA4s6
CHRJ26K/8ToLKbvTKo3zCDRK2bmA+5aFNsLPrY6cINCMfXQoUYqN6quU6QIB
PFxcFVZN+cFGyYeKkzXuPOy4/e7LSaEW/D0tvzzMhoeTutn+GstbkNq1+qjU
Oh76h9vs+q7dgmdTVgxqdvZgi6/6vmfeLfhaXfSfjUEPljuyIoXHWlBLf0Ir
Y6oLGfZDESm/WtF9482bxd1d2CWrKlEg1obJayVY9LoudDHWGhuQb8Nl0pv8
fiZ0oZkESCWbtuGvX+cr9pl2of+h1aZ+kW1YWcy3G43i4kyzfXSFfjs67OQH
bdLnIONUZHZUZAfeNv3CKPZvx5kBvQcXYrlYaTZ+cPOpdryfXfpH8x0XBSzH
mnIs2zEwa4HAaD0XA+0+N6aptGOsRM/6q3+5eNV9kPq4sQ3VBr/fSHTuwrP3
u8tdldrQVrYtYVy1GzMfdUEXmXeggY6eq2E3DkRwP9n/aEWzuZRj1bbd6BrX
Wbq/oRXPyucZHrzTjY6vW4u2XGnF9LMb64wHu/FAIz1vIbUFNwca9nOTevAh
o3FTKKUF18WKeVq+70FqCy1nNrEFT35sMX5E68E93fVvpy61oEWo2N6zv3pw
F7/mVbcsqVc1xNge4GHgt2p1hwUt6O4j3jnmwsOSn1WZrEk2JhbxvQ19eWgw
V5FeV8PG00cMVswl8lBb8lPKuwtsDD9JjOAID8+vKFPUcmRjE881pH2ah29l
SpMyTdn4z3bgjvkCAjWVSxITVrHR6o3EHV9pAs+uKZZdKcTGm4nVwhWKBGZq
FsVH8FkoLR2xqFOdQBXdD7F3qsg55YzoexiQc6j/Xlogh4UX0o6/7NlFYPL2
gpjrsSw0y/bWk91LoJwJJeqCNwuDQhL2DRwmUMo2J+KoNAtFHXTjn3oRSFkb
VrJHkIVpjoNLP10i0PrPmQGdCSYGnjaRyrtK4MMk5a1idUyMS7tST9wkUP3S
rOtPChOVLvQ9kA8lsNqEG9aXxESr44U/ZO8TODsSxSu5ykS6tLyK4xMCEz5e
WvjyJBMTXEZkYp8RuDXcSi/Siom7q8U1oqIJbHVZf/zmdiY2i5X7W8YS6KMn
es9zLRPVlLZvr4onUGLBYN6RZUy0EBF88T2RwLcdFRyTWQZGdyuNE0kEmr9J
EtIeZeAF6kGneykEDt0I2CjXxsClWVu2DacSeNvawUG0koGylyPb5l4QqKS6
JeR7NgPbhK6EMdIILPux9C0Rx0A5V4dCh3QCHan81sY7DBze4FrxH8m/4mlz
RZcY6OvoK/OY5CjvV5oZxxm4rtVNbyvJOkZ3Dj81Z2DkVvGnsWS8pmUnb9zY
wsAaJ5+ibHI9z8FdLz2UGbg6v2OrH5mPaJEs024JA2/49GZ9TybQQurrj9vf
mjH7VPybNWQ9d0pemx9raMZO9ydDC8l6y0+cfr75RTP2RbcvSo0jcFpI4evi
680osECxdTSGwM2v200HD5H2a7KFhiMJPH/waWyZZjMmFZ9xi44g8NV3i/Ho
ec2Y6c9q+PGIwL44IaPznU145vCipaIPyPmAT5F73zXhf55Vco3kftoP+A0r
PGjCr/WbubuDCYx4oLPjl0sTthMrjD0CCGzYOBbevLUJT43fPmhMzgdcc9YP
HqHjF4pW8EJPAq8ryDx0KKfjMH+G+us0gQVVzG7tWDreNDssGOtMoIb4nju9
++iYpJY3wbcmUDJtfYvxy0ak6i+tn9Eh+2E2qC57sxG30QzvBWsSGPolKWDK
vhH9ZQygSInA3wbLVNMXNKJawLy1e8QJ7G38fUnYnYZZq0K6Kmg8lPOh1HTv
pOEJTmaL0gce2kt7rfogRcOcQ+YKE8k8bHDllbvXNKBh6RvVnks8pPyskaCq
NeDlefST6hI8DH/9onLXn3rknoj5MvqtBz2db/q+p9ej4PHbcpJtPahWu5X7
4mo9enU/cbsb34Mx0W8yb1CpmGRSsMdOrgevb366U8+rDue1XP2sKtyN9iPe
k1lGdWjhMXSQ4HWhXqJFmpJUHR69KVAtV9KF44JCC8U/1aKYck6tvHcXOrOv
toxI1KLRO6PXfnQuGvsc80zKr8Z7G3qTja5xUGHtNgWp+9VIua0g9vkAB/92
SjHDjlXjlLmNu7YSBwt2N+tfE67G8KikLWk1nbh2qfF82yNVOKHQNWyxuBPF
8tTjFv6tQOtDTTsVH7ZjBnfw8efQT9i5x/lVnE0LcgJXJj/X+4R848VLGpRa
UFxhX96hvjKc/ytsTzOfjVddXrGKoQytC2w6nR6yce/gOemH0x9xKNnbKAZZ
OMKfSFl3sRg3fN2nYK7KxHXzp/M9nQpQS/LAPe8sGh4/JFfAPZWO9GqbiS+k
X7FYQGulbxr8zVDdtOhDCaRskGLnqqRDj9WJeJEXH+GudS4jsTkdkp93FvQ8
LgXbmH7aVc1MyJzji0u7fYJJ5QOV67pfgVGYaEelaAWs3Saf+8w0B8Zj/+v1
y6uG+vwTpu8eFIDVlIVq0BANDGu0qtSJAqhwa4y77NAIeW1/difpv4eh316a
Bg2NEPMnEsL638Pgaq65ajYdTgN1u9vOQkh/u3KBx8VmmGvQ1ln1tRhKVG/P
z/Vlwpa+eQq3HBCU8nZbebNbYGPJka/aWQjP/+rv3SHUCmufZVcTfxAIaYVj
nM2tsCj17ZYUy3IA3yvj96JbYcbaoWuOXw4DUuUCobZt0J2Xq4k6lVBixZBb
Qm0HTqLjcmnHSjD9uPC69492aLsv/O98SCU4VhVtfqzSAU0uTgwFdiUkCPNK
hQM74JOkiF/QlSrIPlC2oHB9JyRfdK7eWVgNwp7BBeOBHEg8tjAnmlcNrXof
29IyOBBrVvDfF5Ea6D7Q6iPUxIEIJTHP5w41sL5dTrVUngvBjPdL//2pgXO+
uUu5RVxw1V5yotSwDozidu2/0dUFznJFZivc6mCKH+K1Yq4LHEVP6Xo9roMn
6reMDZW7wYYoEpbrqYO79pRSg9PdYBxx+m3ATSp4/JP7+m6gG1QnP/7ZXlkP
rivXuDs29UAg3ST0+5d6aJUWuhE01gNtr2niOasawCRh2QFBUR48dOOqKl9q
gONxw9s1gAeTnGlLESUanNB5RcnL4IFFUUhH+X4aJFQsUH9bxoP0aLFT1/1o
sOlbfuLfFh4csV7t/6WJBqymwKdUAQI+1Wx7wb7RCNncYcntmgTIpFVoPc5q
hEMZ46eu6hLgE2xeuLe1EZpHfik77CBgzY6jjcVadFDceW+X2AECgmR67S87
0EHBvGCw8zABHT/O9mqF0sH0ctkDSycCHuX5/0zm0mGx9VSjogcBQ48Fbh0V
aQLPZbgw6AIBRp73Fy3XawKTeYtu3vQlIN5MMqbRuQniJrjSagEETK2JVbr7
sAkYEbQGz2ACDggqvYEPTXArZn28/R0CMomXW/70NkEdVzVq4AEBAp82lVOW
NEPtVRpLKpwAx4RCC69tzaD62DBw9CkBBf7QusatGbbRX1SejCZA3L7uBC+i
Gep9TAeCYgk4q3dwNLa0GbqvW2pCAgEVku1XbEaa4eqXIX7acwKW+OXOCYsx
YPjwTER2MgElblPVfYoMkFR2DT6WSsAZW4OHuIUBqqbpBu9eELDCJOBg4n4G
JNE27XybRsbTwRXXXBmQm7dO1SqdgPNKghw7Pwa4q9ndI/+3ICuxL1n3MQNK
rvKWPSCZ+u/haYk0BmgU7LiuSrLveJPmeBED5mRHA8+Q8VS4yyaoTQwoizEa
tCPXa6q3L8gYYICdw4b7EykEBBTFXwuZZoBsz3fTLWS+GuQt6YQkE+pujAlp
kPW0RKsIGa5lgnDZuo/UeAJuhbrXyxgyYVuO8WkZsh8bL78O/3GICTufDgvL
kP3iuvIPs84wYd10Qg6V7Od9a91VuTeYcKryiO96st99G0rSzmYxYW3sALHo
LgFP5GbP7kEm5DdlcsJuEWC4yHijSisTnJPDEyoDCYgZqS/iCrDgA5F35qgP
ASbtS4KKVrIgac5l5qMXAZM1h0yitVigsdzmHMedAPO0TrqVAwuWrtRUsHYk
9Ts57jXeLOCZxhbVk/MXe/b23I7bLFA+8KZxgSUBIxs26GjmsKDB0SOJsYvM
tyg4SlCIDfzRvuVURQK0E+w2XF/FBqki+Sch0uT83lhXO7mRDSVLj25aJEH2
y6TlV/dRNgR1mIbL/OUBla7uVJTLBjnH7k3DeTy4mDcztbGGDef09X89eM4D
mUjmowwOG07nr7nd84AHZx0CPj0TboHrCjreL115INrfpOzt1AJRlZZC88R5
sO+374iySCuoCZbR5h3rAT7H4lasXCswXJ4/nzDtgZgyxdUSuq0Qa1u/+8OG
HhgKqd8/c6wVrqRVpLTNdsPdJfK5bRRSD+NNPk/uhlqVat8w5zYYeepx8Bd5
Pu2xXCb44307BPZ7jhracCHcdeHXP/XtQM0vcDi6gwsdvgK82e52sO5aMxGk
xoVzSfwS0QUd8FZDLHHkJwfCJxp85Ow7oDqeRjdP5EDH09t9Jj874KKEx2zT
50441/a94pk+B6KsSno3RHZA/uhY7n8WHCD4/ENBQR0wM9v3PNGZA+PzOlWH
PDogXJ15LfMuB7pSrZJmjEh7/2ydkjYOtKy8o2w+2Q4zq91Te69yQVtvvfS1
w+3w5ER7sHZhFzD8pXRCtdrg7rghDDV2QVRctJXXqjYIuvbiX0JfFxwwXr//
0oI2OB/pfV1EvBt+S9jeYxKtYFUneKWHPHcF/rtjPhLTCuKbtM88WtYDckap
GnairRA+e99yxJsH1drrfXTn2HA3jL8o6TYPgp+Zr/SfIPddxrbhcBzJsr7K
bTw2nNdV3IfVPAjtzyrnlLNBPd9RibaEnCPZlWfnhbJBZHhy1YvTBBDmtX5J
4myos5JfYr2sFyLWZPiP67FgxcbelT5yvVC0uYxNVWeBy5IMpai1vRB8ZbD7
vSwLpmlamzu298L9pfODKwRZoGVu6ORyqhfKb7Y9TGhhQoSJU9bFgl4wW/Gy
H64xwXFr3J6n9n3g7zuxKYjOgEzp4wfzXfpAW9AhV7+KAVM/lY62nusDxt/9
FjPkufHo/SuvVTf7oEh/5nxOOgNQtygy9WUfiPoEVb8JZIDahvbed7/7QOM9
pePHRgZ8UZYKYsX3w0VvlqrD1mbYGpB6qSK9HxjGoRUS6s0Q0rLBLS+nH5Rq
vxzkSjXDynt7D4RXkvbB799lTzXBrnG/1Raj/WR9xp925DXBkw+cDxXbBiCF
3ehAaDWBzv6UibyOAbDev9bBU48Ogela/cl9A5C3yXTbSTU61P4ragsfHwAB
/b0bPaTo4JjHLPMSGASB54WfM381QoiU4CMNjUG4ePM8rae0Edg8N40Uv0GI
EI6WX2fRSF4z1rs+WTkEKVsOiT64QIOVYhOl9spDYF2W0qDnSoOiZIqMgtYQ
aCtHiPJtaDDTsI3xdvcQCCiLRUTo0yBE2QwavIbAZcVBkbDZBghvOi0vXEUy
Z1bB6GkDZGokdV6/MAzl9FX/FlbUQ3uXpI07dQSUcqe2v91DBYswt44rrBFw
mcj6YLaDCqXbSpxvd41AhOv8w3xtKqTEnPJMmRwBIvloqa0cFc5afwjlyHwG
I4emf4+m6mC6yqnQyuMzENnigylpdSD3JlPOQGwUystm6SJideByzXBY5MAY
RAietEz4UgPrTlNb+fZjkEeT2Xl1oAamrGyrW13HQHLf+58O3Bq4q+aVmuY3
BkbDy5K31NfA2+YEJ0gbg0nKxbcWGTXwZ83f5qvTYyDAVNTjOtfAM1Zx0eCr
cVBqY6y2a6+GqvUGD6uE+VBeiWZt3Cpw3mSb9lWC5P+MzbtaquC37qVSxdV8
MEo4sHeYXgVa29/wAzbywSUflBaXV0GUmeLhzUf4QGieKotIrwJ3NxG5jFek
/9LNQrfOV4Focnv23f0TEMxJvMcRroK1C0tH0s0mIdjy8oj37kqQL/XcI3z/
KxgNlZcEjJWDwPT8LJ++byDwi1qu64Tw61CZc82a72C066mX19Ey4G4+Ibsm
9AcEn0pdUujzES4ekVyq0vUTgouPSc5rLoZVUQMOQvK/wWhLiH+cTxHkOKW8
nPL/A0bxe945KBXCkZ03zahl02BUpbx/rdAHeOfsrbJ95i8IjKUe+rXgPfwW
MxEstvsHwal6uuOLC8CGuUNfPnYWBGJ0UqsN8kFsx6KK0uezEPyCvWXL5nyo
SOfsP5ZG8oXj8i+180Hb/5prQg7Jorp94Zr5IK5Y+GhVDek/b9vG87L5UO+l
2y/1jeQ/HC3POQoYiWpGiB+Yg+Cuw3VHqRT4fen36pxDJCdzDk9VUyCXW5dh
eWQOBFQS5cIrKKCQ6/7x0UlSBzmXuhIKzNilD4ldI/VzexPNsilQmKa4UyST
5Ff3bO88o8D5JRN1mW9Izvpkq/uEAmv9PtnsfUeyRuJdIowCURbHz94pJXn3
h0CjOxTw+RofKcgm4+v4pIj7U2Cd0zmFtA6StwzK1lyhQG/1tizjHpL/9VYF
XqKAdWzHp1ufSX+dqZiJcxQQnf/KXHmC5LGa8tdnKICefi3l30kWSl5x5jQF
rrbuPeEyTfrX9jxVc6XA/7/XgMDI/73XwP8AC2rG8A==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4001235#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4001235#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4001235#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtWHk4lG3U10oqtFlKliiShLcUL442SwtCiJKESlEpUUmlTRKyvajstBDt
luRQRKW0GUtiFmbGDLMy81jie77r+/56rt91fuc+5/7d55z7uW5tv+MuAVNl
ZGSCpsjI/O/XCJQ5k5OTeCnAXdEniYLHR3RiRkYn0ffmwuMKaRR8+sJkhXiY
tBf3z6rNoKCp/k4/JncSZSb3ilfkUnD9vKudzW2TmDOi/mDaUwraMISfMspI
f6aG9sgXCrrc+FL8z34S63znt8u3YXjL1eBDNRNYe3itfFJMG/76NZtTd+Av
2ixdsohX0o5La48vXK8+jjY9+nZhHR346mj9DMU/o2g8XWOaosZv9I0zEXRE
j2DinXHj0MIuJJLOxyAQmJPj5Wdr3Y35Ct1q6TQJUg3UBCZqVLy3zST0581h
lDmRUd9hQsPoYwciVjoMoQyxsjzMh47npz0ODx0UoVx1tKCxg4EhGT4zfdki
jNEplWnuYaDfmgWpOxkiNM4zH/rZx8Bt3pHP9TtEeMk/MpUvZKDqC8fB7noR
sh0cTN3le/Gln9hv+z0R2twNCev9txd5dZaOuttFSPT/c1wnrxcPXGrRpTwU
IpWhsWttZB+6d2Rb/8kXItt3aNz4Sh9uMz3h2ZslRM/fYQmmsX24tlcpTpQi
xIiNj6K2pPehnL2LWOGyEE8I/i4reNmHpYqtdXZ7SNxDi/Xg9eFYVqdP5Swh
Nv19olgZwMTUt33p94IE+E2yWKErgIU+EZlR6wMEOOCu93wshIX6/zj5/9gv
wJh7/Zo6ESyselixRm63APW3yly9GcvC7uRbH04Biec55r8qY6FekMnQtoUC
THFVX5M6xsLQ1aNZovN8LFkdwG/IYOP0/INB+if56BmRcXs4n41pql/W+QTy
8VthZ5RRKRvfTMtp/ujMR4FKRVL1O5LfuXU0ZzkfDc1HFbcPkPzrd3Y7tfBQ
yUjewXpjP1b16M8pWcZDG6kvkyvqx0jLKU8yVXnY7HoZs/72o1VGx86bCjz0
N/MK85bjYK1LbELg6CDaRwW8EC3lYGMDd772j0GMeOm4PNOBg7+KS9XSLg/i
jpIW2Y48DvLC1+pdog5g+4UghZR9XHz6a05TCGUAqX+kE7lHuHjSpO/wvuYB
LKlfxH8TxsUhTupji4oB/GV2VX1hPBfH9klXDycMIGEl6fRALsptqVobBAOY
s/UGx1p3AHWUbDa5ZXExXRr1RJcYwHhj2rmgZC42PQ1ynSY7iIRz9ItLMVz8
NSHxEi8axOY79bpPQrmY83ezktzaQTy9wEF2ph0XE1eHFsueHMQPyi7N5XwO
zknWsLjAG8Sgpf7uSzZycChxceC/BA9/Wc1IMDHj4N7KIzk3Z/HR2qeo0W4V
B+3j5GoGF/NxQTZ7w+lFHPSPPriRsOJjtVbwki/9/TjQf/z94mt8VNA9Q41K
6sd2wY6TXbMF+NwgJojOYCM99NOsqgcC1PzuW7mqg40phw6HvX4mwLhwc7mw
r2y0Scr/jm8EGFDPKZStZKOgzC13pEWAqj47aYbxbPSsOXVm9ogAL9yZ7xm+
gY0lr1ktr3YK0Z64t3XObRYmBtUXRU0RYU/DMy0zMybWTofTFslijHQd2bLB
kIlzfWaVV2SLUZVmc8RiGROX912T2pSI0Xm85Zm1AhMbV/KqQhrEWGvK22TH
7EPt0Rmd5oQYc7INAjzT+jD055V33vuH0O9s/qNzkl58orj6SbnJME7M5H6J
HOhF13OPtgithzEzxVQURe/FCnPXSwY7hvFHWZ3Fla+96Kci6swIHMbNzJ7P
t4p6cd6MuFX77g6jrqs67557L15qC4KhaRLsM0w1xdcMvP/VJ/55swQNogp5
7GIGPgz1flfcIcGQlleP5+cy8GTc3ZuxTAkSJynLAm8xcIvqePjQpATly1UW
zPVl4KvtAYSXiRSd5PRbzHYzMH5kyfgBKymm7Nlwy3cbAxPYp19vdZDi0nHP
aS/XMpDpJteS5StF442ZYq9ZpL9fp0rEbSmGJT0uuzpBR0vRm31b06VYxag6
WiqmY1FgaSAzT4qbr/9mTOmm48zPq3yzy6Xo/ln918PndFQ6Z9n6tVuKmeqr
E388oKPH0ZVz1NlS7Am22jF+j45Y1Rm/VijFw0o+9U436HhSknfl/VQCz+/O
finxpqN28u571joE1haVndDaRceEiNfXPhsQOJ1Aw222dNQ65u2rbkpgfCa1
4L4xHXuJwOczbQj8wRX4Ni6nI73VLifLlkAVqylLhYvp+PBdzzHpDnLO92in
bplBx1seCQy2J4F9xqa7QkZp+MEud9MlHwINojfNTefTUN61ntN6kMAXugev
cTtoGNB0/09lMIFE2KmNi1poGPdbeZldKIGWjVf+WtfTMJ1+ND/xDIEfjhSE
JZXS8K/H/JfuUQTOfvPSpDqfhr4Djtd/XCbQeU7DYF86DS0t/JbMukZgyr7W
R4rxNDymvdlw9AaBHaV9AeZXaPiS73u+MJZADRmJ9sEIGvrZFv2Sv02g366Z
3XHBNEzMDZ9rkEDggzzlzNd+NCy/+WT6tDsEDohXuFM9aOh8ITYvNYlA463r
58vvpGFeQUk7LZnAsDS7r/9souEi/7FcVgqBVSyP2H3raajLSpz6IJXAiQ2H
bW8Y0tC/NltWK43AzbERU59p03B/jVujC4ljfsfUdCrTcJfaK18gcbNhxrnp
c2go0Dg71kf6z4t6ZGY0hYajs9mNtiS+/lq/SUlKRf93ewNOkfFGeQ/2iAeo
ePGbcvpBMp8QPT1uK52KNquKM1XIfOn7iyIr2qkYOyftSUIige7pyxXufqVi
92cNleZ4Aj99K8i+UE/F30xDnS9xBFrP0jXxraLiiTwNnWRSr+cb899tekrF
0qNZwRoxBK44t8xteREV81TDfY6Temc+z+2TvUfFupWH3K9HE6jA1Qrn3KHi
t1XiqoMXCYzWyZH7coOKR7zWS2QjCZR4a2aWXaBiWV7FmVMRBAalZK1KOkVF
g+XryopOE+gy476jx34qXvulrBd4jDx/K3Wq+W4qOi8P3C8+RKDFmbsn1bdT
keOiu3EbWU/LWBkpNDMq+iYaqXrsITBNU21FvSH5n1HxQEvBjUB5z/TyomVU
vHM7lkh0JFDclNZ5VIGKETXqXuObCDw0RfmY43Qqrn3pMJtpSeDrUwZjB4Z6
MM/pUud9M1Lv3XobBz73oCTZbf25lQTqqWl/kTnfg6m06eOSOQQqxWoKGgJ7
UMNfJddvBlnPo0sX3HLpQcrsp465f6XY1LV4zyKDHpz4G++QOUj2Z87CvpUd
3WgxVf1s3GcpPtaT++uyvhs3+CZumbwoxaT0mVqqOt34X/HqlawwKZ6bNWPz
H4VuJPhi9ZKjUtzGnXLzEPMPKg+43m1xlyK3dGxhZOoftDDdkXB7lRQNzfiG
heIulNHSTA5okWCg0cWLlX+6EL5IqAfeSTB7heKPL41d+Dj39Ad4JcH5KmvC
JXe78EN2CjcvU4JSaUid3ZYuXM1fs0TVX4LvKnm7OSm/sUSt+OtG0TB6WvGi
1ph1osebxW/XTA7hlS2D3yoj2nCr9zcZQ6EIF7mVJu5R+YFy0+vtWpwH8bmk
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
WA==
         "]]}, Annotation[#, "Charting`Private`Tag$4001235#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
0tgNzTT4330z/O++Gf4PlWNKrQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4001235#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\) (V)\"", TraditionalForm], 
      
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {555.4773864746094, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\) \
at varying intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \
\\(g\\)], \\(2\\)]\\), fixed disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\
\\)=0.1V\"", TraditionalForm], 
    PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-2., 2.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"I~\\!\\(\\*SuperscriptBox[\\(0.05\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.15\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.25\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.35\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.45\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.55\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.65\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.939085303861117*^9, 3.939085409975822*^9, 3.939085473716218*^9, 
   3.939085536319291*^9, {3.939173771993309*^9, 3.939173796499013*^9}, 
   3.93917441277355*^9, 3.9391754602724524`*^9, 3.9391760560443783`*^9, 
   3.9391762469964743`*^9, 3.939176308197945*^9, 3.939176378598521*^9, 
   3.939176606500922*^9, 3.939176825121643*^9, 3.939177016443348*^9, 
   3.9392144665152884`*^9, 3.939218197226945*^9, 3.93921837183351*^9, 
   3.9392480991977587`*^9, 3.939248496862604*^9, 3.939248898187269*^9, 
   3.9392491453282146`*^9, 3.939249420353546*^9, 3.9392497681573467`*^9, 
   3.9392499035854063`*^9, 3.939250071526024*^9, 3.939260808965289*^9, 
   3.939261159911565*^9, 3.939264327338956*^9, 3.939264503400399*^9, 
   3.939265355882168*^9, 3.939265721847351*^9, 3.9392659497389193`*^9, 
   3.939267897533227*^9, 3.940120744198175*^9, 3.940120846694537*^9, 
   3.940121511258184*^9, 3.9401216358262587`*^9, 3.9401217670209303`*^9, 
   3.9401218740102577`*^9, 3.940121936887826*^9, 3.940123051804109*^9, 
   3.940123155961804*^9, 3.940123261707266*^9, 3.9401234110088263`*^9, 
   3.9401235666521673`*^9, 3.940124137926371*^9, 3.94018169394937*^9, 
   3.9402106250875463`*^9, 3.940215397102283*^9, 3.940218311632613*^9, 
   3.940258764146365*^9, 3.940260589449771*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"561d38bc-6133-4b44-b3a1-4ae85e91577a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
/x/C////EPg/n5U6hw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4506629#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
AWFVa3U7Dxr4//9d8P//d4H/A2wTMq8=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4506629#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
ZBj1zVpMjkzIwK3VUomXRQiwV+xmhhMTCVYLuGlx8xHA4LjHkqwCCUaNWN4R
XaMDzj+sWQ2BJCh6eFJrtpwOYvIWW4qiSTDI0HD1eg4dfLMcWb6VSIKelYpX
pq7TwWTiU2v3Ska8tE7wYy86qFB0XFn9Q4J3muxZmXnpwO1Ano3ODVmowFLf
wXxkCnT/vHZGNFsWNnvm5CxZTgGYHZa3USYLs53bdr3UmAIas1Y/uvpkYWhh
Y/7Qv0nAHL2QHyAmB9Nv0pdz8iZBSbHJr8JiOTiY7L9vlfF9+r0x8Ei4VR5G
vg/8bO44DoxvFEe2DcvDzsoqVzezcRCxLdo2ak4e2k0oLsUojIMVFaXFd5wK
sFyFK3vu5xhYOBBpUGanAGmZHV022WNgqlCyGfYrQD8+/3/dn0ZB026fd6GT
ijDJ4fU7jZQRwNRvUim/qAgHFxcPxMSMgJ1HeOOH/inCBeZR+Y/+I6A29JWK
OUkJjjxwyF0nj4CqDM7QzceUIFU4XtZmeRg8mi/7lzOnBBX0touccxoGNxN/
SnR8U4bNkUI6cepDwPrM8spHNhV4LeOeQ5DYENjk9rltk6gKJFts33uKfQic
l5s6a2quApf5nBP6iLfA70XLQEmcCvyVFm8zl/YWWI6n3rwmpAo5yA9UXDje
gn9KemtWRmqQqr09THdjALzm1uj3slGDUXdthCOXBkD4slJJtLsajJQIlx2i
D4CFGvFDLy6qwWvvS6hj1AEwbrepUoGmBkUlhP2Y4wZAdVhfAIvbdthr8+Zs
Lu8ACGsIGaOeV4eRikWRC3r9YDXB2bX4pjrM168foCn3g6gDJkOJ2eow9szM
5AuJfnD1w6Z+jwZ1eE1gU2wjSz/I4EprW2fWgNSLQzeyBvsA9WBdtfF1DWi8
7fF7cK4P8C1x3C+/rwn9wpe0Yrp6QWr1l23pxZpQm8X1uSHuBaKX++9erNGE
1LW9tuvVvUBOKPuOw7gmLDZcP/nsYS8wNNO6uiCtBZnCYpqfRvUCjwSXcJVH
WpD0gjLyQ7MXDPH1qe4/rA09g/vlXY17wPK+L3szvLXhskVcI59yD+BO4jw5
HaAN+d982Tcu1API/BaUMxe0YWjsi4qyb93gCX+laUa2NqM/iwaz8m4QLXBv
7/QUQx/odCXUu4GCoFvwmWM6kLxXyTVQrwvsdApPrA/UgYSWpYm3QhdwS0mu
YD+jA/kNrTX9hbrAHcH2H+lxDM559enRaif4JWgWU1+kA2MvnuyYqusEHduk
EtnnGMx2T0rNthOECb8rTw/SheUGBziuh3SADpYkl7RwXUiuz2/X8+oACl93
/kmJ0YUk2SSORccOMNSRDROT/pe5kpIMO4DZJdeh+Cpd6Llt3+ab/9oB60LP
Wtg6g8f+SZOT20FaY4O1/S092Nsl9pezsQ3UBGVPMJfqQ/Lzb6alVjQQ0Ul1
9qnSh6FLJS/3mNGAvvpMJ62OwV6bnBa1aaB8XqM+sUsfEnludc6SNPA4AOVI
LelDftfuv7e+tYJ7ftMeJroGML+Mdya/sBWcOq7yLrTaAFLr/3Vt5moFqkeq
ZujNhrCcxds+60sLUPIPJFa7DGFsh+iOiA8tQC5Cbpxv2BCSdr/46TreAsST
knrBJ0O4f3ZrnkFbC+BpDqrN22IElymhpbZFLWB5u2LyfweNIFOfjN64Rwt4
uXbPnD5rBPmHesVdhpuBZdbZlCkuE0g0oT1D4xgUiT/0OiJoApnSLWwmBjFg
z+zVGpMwgaQsO+vZLgxo6aqdb9VNILkSkHioGNiljbN2OTD8asfqkx5i4JIM
ImrvmkCqgD7rpZMY+CZsdksXN2XMNzthjA2Da6fvSzuqmUGy/em54F1NoENW
84w02AGZPlJfX5inghqZ0JPclwCMXaVRdd0R8HPfXGjYTYbknclBQW71oN1B
/d3ZlV0w9tiDLa/CasH2sltxPgIQxtYc4WfuqQGyrllpW6QsIdngcmRGWDVY
eLLxxwpYQXKmVYUr6RWws93abexgDclYdq8S60tQ6uzJPnJoN4z9/ODAKvsL
8I6dNXlz5B4Y+0BPd4GnCjxlO3jja5wNjE3TedBsVAlSmW/tLbhuA5kKBgwM
9CtB1N9GHqc7DA45KvVYuxLY/dBIrLrP8HPoTt9RrQSLH9hSzz5hMLOJ5kmJ
SqDd/CLnbw/D/2tMPXCDAqouC1VwSthCpkmnVjcaBWTH7A17LcPg/DGnb80U
EHf+kl6gAoPlsyXvNFKAS9iXF50atjCWLOnZ+poCfnq1vE4kM/RA6+w9ZRRg
vCu8WciXoRcnOMffpQDSjqfxbwIYekmDs24iBXCYvLM+G8LQVbKvEjcpYFTb
vm0kksG7XkaR4yngPEmxO+smg3XC8nkjKcBb0j3RLokRbzgj0XKGAmxFk/f/
TWXw33c46hQFSPD/7ffIZbDOt7SlAApg5dFL5Stk8HwL9ckJCljY7O9Cfcxg
trxtJ45TwCBLnvCpUga/mUpW8KKA/7+vgUz/d18D/gegfrjf
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4506629#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmXk01k3Yxy2V9QmFsqR7s+/7mpFBtkoikYSEkK0sScKjlUIkInlUtpYn
Wh4ko3skO1lvZF/vnyVRSpT3ft/z/jXnc77X9Z1r5lxz5swZsmeQ/SkONja2
m+xsbP87Vm109ZJLrXFN8LfVCCE6GuN90Lv4lMV+lnIuwnTEI3q6FxVZYzZd
fbM9O+joiNLvnuN5LD5WY7FlFx19PSrdk5VsjU3WpP5+KEdHMmVhXUKBLB4h
AJ8JHaV4iX5iV7TGsbW6gmlBdHSywalx9JEVNulQtXnwiY60ZhP8hOItMVvo
ijfba4xCajhzroTuw7H/rLs13q9FzxX2+R70tcDuxK8fYpkfkOi81tjVfeZ4
pP/BkmVtHWJ6npvfbGCGSXdWExlrH9G0mlvBsgjEbHHC1rzhDWgyjf+X1o+9
uCZ/345g8SZ0oIR/+O2sCSZZdkc/7m1GH9QDx73SAGYbvckTxN6GPoR5Kw6G
7cGx3xd1cp+2o7rx6aJ1T0Ncc9mmoICzA5kY2TxadzbEpFvcst95OlBF+vMH
63aGeLFLVM9SsAM9NQ/LWDc2xCPaj3evS3ag1EKOhHVxQ9xeUX4nW6cDufrv
OrHeYYBHri+8f+fXgb4u2Yusmxrg9kTZ3697OpAkR3XcGkUfs/V3STZXdyL1
mSfFd8T18bXatDbmh05k0Zr1SXUbS3+1h8Hf0omC7oWRvdj18aLT/k0nBzoR
XUP5ffOwHtbTD4q0+9mJfE7msOXm6OGUoMQL2ppdqKw26pKJqB7m/vj8b6dn
Xcjqqu7Fyzy6mNsg7njeq25EqrlN8WfTxaQL1MdbqrvRys/5j3Y/dPDOAoWI
sI/dKN/v0TbJSR1cP7F3NqC/G/3aL1RUVqODIzknAmvZelCJ8GzHcIQOvmZz
QIh8sAfx5ufKGUxpY1LEsbIvSz1opH+1ZfegNl78unUo9ncPerPd8ezmLm3M
KIYHJLl7kedlvur299rYkjhkGLqrF1X6Rh72ua+NX6i78uRY9iI/VfuYdAdt
XHP98fL3vF7UVLW5a4GuhU2GN5cZuzCQtbiu6EaFFibFfItn92ag+gjfowKl
WjgzssOrPYSBajWaPqs+0ML1JdtLbl9noKqilMngC1o48meM/5MKBnqaLvFj
SZPl16PABJJ9KClAXfzHI038gvp+I3m2D/E2erpy5Whi3/MLuX9+9qFrsum5
O9I0cd67f6jRW/pRwtgKRS9OExfhJotH5H4UfbRK8fxxTWziw4wvOdqPzpjt
27MmoolHxlWLnzf0owOSx903rmjgdsRocy0fQL5cYm3FMRrY5HF8YWfdAIpb
6trjEK6Bd6qJIpfuAfSq3lai+JQGjv37Hune0gASCzPqsTfTYPWLw+CI8mc0
0SJhW8CugUe+HksrKvyMoi716+6PVsd6qbVW7MWDKN0vo+DHWXXcnvMmqqpi
ED1ztBfJ91fHwaXLfxIbB9GIYuPSios6do8qvOM7N4jMGRXP8vTVceacp5ik
+hASVM+ifltRwy/kDOGt6iFUOOYkkB2ihtUyjyRUEsMonhS3luKrhgW5G/q+
bwwjV7eS6Ssn1PA3bYHkQt4RtK1/HYXuV8OfHxYpqJBG0MVP/wRby6vhnXlC
/cs2I+hxbO/D5feqOE+wiBxVMILWDTfkSvNU8MQRTz4D31FU9t8h9vu3VHCA
6LYX8+dGkY/mo75r0Sp4U1pd08u4UdShYHXD/agKntF62hyRPYqKxNJmBQRV
8NxVkZzRtlHk8EPmeeAlZRwqOMVpZzSGnpQd0FRyU8LXuAIGttLGUabVGy/b
/Uo4fzCAoqkxjhJGdmUEGClhrdt8W06bjCPXrfM/n4or4bIm0VSe4+OI3y+x
WrlXEdff/UNI3h1HgeR6K1U7RRxwR/dA3NYJpJay113DVAHz35i0TuCZRJKy
xan26grYxZUk91JsEnFXC+JQkgI+ahV0+Yv8JBqZHZZ++Ucec5sm3km2nkSp
+2JmNd/KY6ONGlmvpEm09KcyXFtLHg+1z3rwb5tCr89o3dSTkcMlZrlflsnT
iFYSXvFluxx2kb90xUdrGt2eKp8sYJfDdlU7aL0W0yj4xB5jkUFZbJQ/a1zg
P42UDll8+Zomize1K6xMvJpG+VpHDz1hl8XRUtvvdpvNIKGQexc9v8hg0att
s9FHZlDss8/FYoMymHLCaD+/7wxyk/HguFYug+m/IvYP3phBYjv9XnoFyeBN
FqUZu9pmUMraBRGpQWmsU6Rj8MKOiTZ0q/d2N0rjz+XZJRLuTBR4ji0wqVwa
tx6/rOAYxEQ28wl1v9KkcWSqvYPiTSbaMnwzoteaFY85+jTqmChMov3hLT1p
PCeh7DnYyUQTTtvazWWk8TmP/u59o0xEb8+Qe8UujTPI0/6Oa0x0kf6gL6Wc
hpnTjvspSgSa+zO62bKAhgcCgsnZugRyMaRpbKTRsBRXIHudKYH0XhXdOBNE
w5w3/E0UjxKocJF4QztOw3Gm4cc8PQkkqqw8PmBNw2IccWtmAQT69rjU0FqG
hq9kriZtuUSgk2PLPuzCNCy4Rejs2FUCdUjppJez07CtY1T9yRQC/Xu3ck5m
kIqvb5/mPZRHIKmu9Z1DjVScwi2gXVlIoCRBYH6nnIoVYJUVfk4gv+v4Pmc6
FSsWPCe/eEsgeYEyTsF4KubpfrMS/p5AM+l5pyWDqbhq5r9rn+tY9Yont8m5
UTHbwnTrcBOBvPMuamvbUnGq0YWOS+0EkpYJyN5rQMXK5tEpb7sINPHEhf2A
HBWXOq/p3GYQKF/dysdFlIqP+PvMcHwmkMd/ui3em6h4I9y4n3+YQKQ9Mppn
lyjYPULp4L+jBBqiC2ddGqHg5leGd5njBLpvybmR2ErBP7k2BN5OEsi19atX
ZhUFWy6/plGnCSThMNL4qISCd0X7HSDPEKi/r1WtNJOCne9zC79mcdaJdxnv
rlCwVVcQ7xCLj04+WW84R8GLqce6slm8w/+eZ48nBZ8oW6AssPx6Fq/Vj9lR
sNLlmVddUwRKD49Q+WJMwascFKeDrPkPr59KX1OiYAdLt4njrPq2xTv84pKg
4ERpHXM2Vv3tXNBdmIeCbV//DtIZIlDyTfU60g8yzpZ65Ms2QKAD20lKypNk
3PDkpolbL4H+ytp6W7+TjKlevqJ2nQRqlvr9w/w9GbeeXRPpaSVQ4qPZ4/b/
krGGwNeIxQYCWSv0Y7f7ZBxgnxP3oJZAPC/q5f0TyVj/XUXCeDWB6rX/S444
T8ZqLxWHq8oJZL43/ViKIxk3e+Xbqj8h0KaP8e9zIBkzalMdWx4SiG4bIlus
TsZ3VHj+YcshkMnRA8vv/yLjb4dPe6omEmhj0Mi5dY2EWwK3UpXiCVR9UhH1
M0k4+8SfSnokgYyCuBOXP5Dw1W2fztR4EWjt28rixksS1sbjkvIuBKqMmjzC
n0/Cmz2GGlUOss7DFTpFOoYV7/UlX1iPQJr3oyuP6JDwt3f6e702E2iJ4k86
SSPh0gniaesPJiotcr4StI2EZbuX3w0ymei475lHgoO7cWa2Ne9CMxM5ZIx2
nt2/G5dUcrz7fouJ9i41aBioSOGqn9+1cjmZSEnr04u3/FJYkwNMSC7NoJ3h
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
ML9oKg==
         "]]}, Annotation[#, "Charting`Private`Tag$4506629#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmHk0Vd3/x82iQsRXksIdETfz2MYuM00qipJKhgwJ9RVSEaVCGRoUDyWU
npIkPPbNlimuMVMyjyH3njwqid/5rfX966zXer/PZ+/PcM5eayt7Bu49KcDH
x+fPz8f3/8+KlY4u5Vd22NxIY6pUmIOGxTO7uM/tMNtmnUuSOAeJyfl0oTxS
99vu5iPJQQc0/nS6Z5H6mXT6lg0cxHOhdt5LJHWpoMEsDQ6iFYV2rAsgdcfe
m3P7OCjphFwrvzqpv7a6WZvDQcfrDzYMPbbF7NnKZ8k2zUh3OsZ33WUbUp/i
Sz/egs6wBTOuBltjvhzByXp6K3qhZu29y9sKe7h/z2L+bkVys7rDcdY7Md/A
yITYrzY05RkyK2y8A3PlkjSe8XegCdaR3O+yEEtluz0vhp/Q2J01i7o/LDDb
dGOZ6rNO5FSwZqB82hybH6ywvcfsRh+2BYycuAPw4HLMffVVvehDqJf6l1Az
PPj9qp23dB+KuuCWn+xvhl8yjkrKbOxD+pf20q1OmuEkbvwZrNqHcm9sV/3b
2QyziCKKnl4fupojt/GSjhnm63KedHPpQ1atNeJUnineUlAviTP7UI0G/evp
06Z4MEWRX1bnC6oZmchb8jTBHp5PR639+5G5qf3jJVcTzLfx6c3T5/vRu5QX
mUu7TTDL+X3PvSv96PnO0LSl7SZYKq0iVuJ+P0p+KhCzpGCCd5+QO3Ssth+5
+W06utRmjKODH2SUqA4gHrFXdsnSGLPbREeDRgaQokDlpd8qRlheeTh4iT2I
tk0+y09VMMLPSwf0j9QOIivOvVYtaSPc8kWD9aFpEAXeD1U+wW+Es+Z/fMnu
HURV2lvfNw4Y4mjzsYmH84Po1PEMvkcZhpg9dGPmLnMIFVWHXzSXM8Tzxxvs
u9KHUG2B99PetYa4+v2RmdlHQ6gv6UBziLAhdtjxrkQ8dwgJu2tvzp83wCyq
8/SB4iHk8u9U5bp2A+xmMVdv3DqElqmuy8OJBrh4zYOdhmuGkW2cQWSsmAGO
10w55hg3jLawb6v48ZHvq37fNJ44jBZ+ztbu/qGPbQL/iY+7O4yyfR9LK47p
Y+6R8OzR/GG06Lgur4itj6sF5SPEmoZRwfrptoFz+ji6Q2hUXHYEiWc/YhiP
6+HztVtiDz8fQYO9v5o2f9HDfCU7GIySEVQis/+scIceltLMjV1BI8gzdnVl
y3uSeeblnPYRVOZ9ft+ph3q4+M8+Ed7vEeSrtTcqxVkPN2Zy7x10GkUfK4Q7
vlXpYpfOwF2WS6PITsFAbuWdLl7l2fvYVXQM1Z3zdpF8pYszkncuREqPoWrt
j31amaT++drsLGMMVeQljQVd0MV8Pb59/gfG0POUjT8IHV1seP/4kGDxGLpx
epvCj8c6eJXghvYd4eNIvMHTTTRDB8/UZB/QjBtH8fSUR/+5o4Pld84BRso4
ihleUDG8pINZ6g8qHV+MowiXCvX/upN+XNvqOTKO/HdYm/2W1cGT6X4irbsn
kJOiu8fKVW0s33lZLdtoEnmLbmjOj9LGS+/zHzdbT6JLRIeZc5g23t2uPy1x
YBIV1zlszD+pjc1rlWxx8CTaEGrauXeHNm7ZF6YrUjiJRps2OuTya+OsfdmV
q6lTKPxir4FjxDY8zyp1fa/6FT0dPij54AwLK01qPbx5dAZd3nLpd5I3C2cf
znDyCZlBbkcKJq4eZeGA8F0a7tdmkHTvEgp2ZOETvZt6b7yeQZGtfwXZMVk4
Yke6vajYLHoS3ZXz/b0W9ip64GFQOouWTFYYr7I0Meu2Yu1m6hwqeruH/+Et
TcyIN+Y/YzqHTuk87omP0MQRpz2GmvbNoTY12+seLpo412fng6eX51DehjvT
klKaWPcc72X14Bxy/kF7EXBxK16XXyjzzYmLnhU56Wgc0cC8p9NEpxgP3bUt
OeHgqIG1/P0CLqznoZjBTWmnTTXwpuuaqes385CbxOzP5woaOLD3+1YVXR5a
45tQubVLHV9XpvKnu/NQgHKdrdZudbw6InYXLOShQ6VaF3YBdRzbF23ZV8JD
VrvSnwdqqmORwGPCR9g8pBTpJflyjTpWsu+tk2/noeZuoU+sejU8oD7/zvkH
D7GSLDy0LdXwhyj7BpYxgRTp+cl7t6nhAxaO8/9aEGhVpRQO3qKGjz9gSqTb
EmhweoD6epmJk4P3fvdxIVCyddS0TjkTFxfYq5qFECiqf0zRuYCJo8LGjzWG
E8g31NEp5B4TByn7JG67RCDLHMVXxeeYOPiMwUz4TQIRy2VherpMfODV7PRC
DoH6U1Xy9qsy8aM0s48q+QRq0LjeEyrNxDG6T05tfkGgnEOupiVcBja2pSTH
vyVQEo/t3znAwHYtO0TnywkUEc/IXOAwsMNY3xpNNoGcS37wGxQycLbjYuvq
OgKZOx7VOZjBwNK1/E9efCSQxmjNiXMJDLxUjTWVmgkkf0EzLT2cgUUWbEQP
tRFISDqt9q0PA199Et147BOBuHl/fna5MHC/pIuKXjeB+sBJtZ/WDNwd11zU
3kugus7Gw/IGDCy2fY2m2RcCvfHXvWlIY+ABFx+7MwMEohSEvZuTYeA9AZ7L
6UMEuj1eOpbLz8D/9V/0uzhCIH7V3+uOzNHxkk6iE32MQEFHzbbLfqFjGaed
vonjBBp4cNG3sYGOnUrEb7ydIJBT9/u0K6V0vJ2efi1zkkD/rBfCxrl03GFz
ysJ6isxvj9Uc7w4dNxi9vf+C5Ac34zfmX6JjzZtnYj+RLN7QYO0RSPoFqIvl
JJ8XWRvyH3c6vqE+/esYyROWu7I4dnQc37XvVi0Z/8DF5MZYQzqOELGtnyHX
ry5v/2lKo2OLzdzqVnJ/Oj9lqfMydHy5OS4njNx/tq7Lnmf8dDz4zjLxM5nf
ujP3Iz3naLh64+YyvmECRRf25W/4QsMpqeXu42R95qaUOlsaaNjDkll+g6zf
EdoxgfhSGmY5livMk/Vt8szRBLk0XKPT8VGRrL9p5tihhTs0bDLxkiJK9meD
vO/rE4E0PK6QY63CIVC88/OBje40vMr3cv++BgItJH1b3W5Hw9KbQIlNDYE6
xM6esKDRcANflEDUPwSCVm+SfsrQ8O2fcWdQKYGKLv+o+JufhhUThORqXpPz
9vuCrNIXKh4+d0iNSs7nikGlxacGKpZjvSyLIuc3IIQv4EYpFVMqv7MzHxLI
fjamZvEOFS+UmTwwTiaQyMDNc112VKzZZrltLJRAoRtbcm4ZUvHMeMZKQgCB
Rg9Kt+ykUfE+5WifFS8CVbWkMYr5qbhCNqHZ6SCBIqsye5JKKZhjqnw2R49A
M8tDwja5FFzS/OlhlQaBDplQtFfuULCC6ZRAsSqBDIvzrvsHUjBte7OL1DoC
zT95ZWJHo2A1MwtjPMVDvtfwQ8EUVbzjT/npl3d4iClZJCh1WRX/zeZriozn
ocmULB/FIFUc11HVyYzkIa+sSD09B1Vs1/qX1xYvHjr21qDJS0gV62otPLir
z0MuY8+W6kNUcISHd4FhGxfttEg5nLRfGRf8tD7QNTeHLIh6bWNNJey2VtDq
IWMGrfK/X3yPI4tjRIL2J8aOItu9F6xnQ8RwL93qVQVfN/IXKAvlE+BVbcry
WuctzkbPVubsvEy4lgXXXk/rPqoE+lH0Z35UcegwFmK7lNsNiOEvN09GyEJK
xNjnWcNRcHbnp+70+0qwflvSk1txM8AtKU/Tq1IJSjx5Gf4xdwZYfb4Qozus
BK/o1eQtfJgBCmdUWK3MzfDYDlcbOaFZUJURGCf+bjPMu153y//iLBBbFHpQ
6bcF/jz69Yd48DfguifTdtt1ZShje8PKT5kLOAvxIfIZyjAv5+7Jk1pcADOC
M1cKlSHb3fa5gxkXbJ3Y+W9TqzL0KOz8NejCBfyRM1m+G1Tg+Btl+vpELsjP
M/qZk6cCM9TtkPEPLlByUlVNKFOBcluc6psFeeDO9zVOwY0qkLsnzMBOigci
tw/mmHNVoJewpdgsgwf2dFzd9cVAFQ6fZWX0uvDAr5X2XLlaVShySMC1pYgH
DK/nna/vUoWEV7AtquCBsPWRdhGTqvDnp7J3t2p4gGDQvg2JUeDXX5Slxh4e
mNlzXq/QgQIPb/eUKl3mAbU+B1EPdwo8YqAmkSFKAG8v5R7pAAq0/C1g7iZF
gLHwhojziRTIaVCUDlQmQH+OYjVso8ANW223NlsQQFGTl7owTIHqE64JsbYE
OFT64VT+dwp8CdZWy+whQFdjwGpJWSrsRj2Zb44SoOVf9t7eg1RoXNyszneB
ABLRqZSb3lR46ZDrVa9LBHAQ910A/6XCoH2nE7LiCFCvJHP/yX0qrKjsSr95
hwBV1ieHgr5QoefoT9Pt+QTgazN6rfqNCn3X00/oviDAdjeJ2M5lKkxzkQhZ
LCJAedBbhukWGtw/nPOIPE/A4mLC4jcWDb7yuzJFZxPAMNaj8S8LGpSRao9k
VhOg+J5YkOhxGlT94SmW9pEAhGq/RdlZGiwx8nHkayYA60WRjH8MDeZOlIcY
tBEgwDBubHMqDZYNjGuZfCJAYdXht21PaDCxrEFndTcBZhxY12JLSH/Ge6On
vQRQ6xI6bFhLg0lb8IrEF7Lex3o0prtocPf2OBvLAQLkThcuP5ykwcmqdWss
hggwGnq5ZfcvGmRdrooVHyGACt/BbEFxOsw9nCqfOUoAj+vqISUKdBi8a7Pf
8hgBMtfzWfmo02GVTrkrY4Ls16OO/yia0uF9tnGN4iTZL2b+FMeBDvemrqR/
JvnQ68jyS+50uBgiXXFiigB3zfbe1A2gQ3aOIbWU5M5a2tGJKDoM2iPaSJ4v
QHbvb9b9RDqs+zP/4h+SnfuaBRyz6PBopE9bIMm3vR53rLykQ3utOvMZMn4L
93xu0XvSLxgtrkOyxAXH8yfb6DDksYTVDnJ/DsIqdvIjdCjlsVpqyzgBEhIX
Nn78TocxGYyEGjI/qxAuMS7MgBlGZ2tlyPwFXL/WC8gzIJtZW6lC1qfSbDRL
SY0BJ0PYb773EyBcpf+csSkD6jt7/LraRwB90W6nA06kv4J/oK+HALzpVmqw
BwNaUWyr/+0k6//mQ3t+DAM+9rLeGtxCAMp9VPAhjQGvP5pI6WwkwEDUu0tD
eQx4L7Ear9QR4IBNodaGJgbkWMmkZpPzI731qYjeAAPyG1q6bqogQNO6v77s
5jFgsGML/ehbAuz4nJIQL8uECcZ+YcaF5Lyyb3k+pjPh3vbU3Z+ekvP5ON6I
bcSEYvwzk0bZBNAOiJj44c6EfmUiTsfTCKDMfwKeymXCEunLyw4RBOgbc1e4
UsqEF3WtX9mHkv1qOMh71MCEG4ROZSsEEEAqxT6z8xsTRu9+1a1Bfm/LNJ3f
Ow3U4GNfr2umgABlq7e2HbNVg04OzkJd+gQI5dLyIw+rwbyTsZa2muS8vlM4
+OaiGtTUN/1VqkiAzw4Cryl1anDELEtt6AcPlAa3+gq6qsO6unufdfN4ILgy
sJcdrgGfhAR4lpL/tx9xzi55CRqw7c3L999nuCBij1FnYoYGZH4W0aANc8HV
UYG2I5Ua0Pc9NSe4kQvuiafVL/Fvhdisj788iwvYBypKDa9thdE70ao4Gy6Q
nFuV/jJdE1oJVGWVseZASuns+rt5mlBibOkqoTAH5C+33b74ThO26Ftd1BOe
AyqyGbecPmtCc5Omzv6eb0DfROvqjJIWXLa8Edh05Rs4Erc/lJGrBYvs+JSj
emdBp2Qrc/chFgyKOk5Eps4A7q5Z+3ueLCgH/npmcnkGrE4SCxj2ZcECr8Ks
tYEzwFzKsijkAgsK8RU+/WYzAwqkXhvfy2DBilyLe0//TIPIdan2w/1kvHKX
QAG/aUCRcfUPOb4N6kYcVw7b/xVs3xea+I/fNtjCsbDn7PgKXO8kvxIJ2QYp
j64sG+t+BbdkGv69G7MNpshdeL9H5iv4KWMS9c+TbVBe5kFncNsU+Lh+U6LI
5DbIt1LvEOw8BYLlhl7ePa0NK/r82uu8JsFHwaT9aaHacEmd6u98cBJQeNsX
70RpQ9Op+IF560nQ+TEDJiaR+v21tWeZk8DkkktnbLE2dLY3+HpydgIIzTT/
Dl7Shi3nhN/8OT8B0t5XWjne0IEZZstnJB+Ng7kX/tN2qTrQ3Mexbj5pHNhk
KCbZPNKB3twpztcr42AxLLwHvtSBd6cSg1b5joOjGvqnjTt04M+qVfkiBuOA
kV6YTFfUhRWnm17Pt4+Bd6cz+vif60IN4ndgi/wYCGtkO58s1oXO3Lev90mM
AV2Nsca6Cl2oezA9dFhwDLyc3vpPYpMuPO2QTFGZGwVPfdHDTXMkP9wgwagZ
Banew0eMtPVgyERrvFnYKDhzgjEUVKoHlxwmBWX6R4BmtYNrB1sPPtfMuDfc
MQJmVM+0GtTrwVXaolHlH0eA98i798s9ejDiyJWF+Hcj4KinffaN33qwQqBK
ODl1BDh6BBzP264PnydQ2m13jQCmW/HYQLU+THkoqL5YNwxoPn6DP5r0oU14
0QyTPQxUwlQ+S3bpw911J/I83w4DhaSkFjClD2M6+du/PRkGa6pPl2euNYAh
uS88gq4MA646NfnoAQPoLaFBWWM+DEp+p5oOTBhA05GEQjs0BHY8OHenX9wI
RnyNu+XePgieKDw+5iZjBGP0hSsGGgeByP0Wrd6NRjCv52/LUzWDoO4us/GT
hhGcvxgNrr4bBA5pn4WanIxgn81VPcGsQbA/GYSV3zaC3JEare/+g8ArTtT1
roIxjF54+zxq7SCIP5uutFfNBLI/GTTwF/cDC87srifaJjDaTWJtfH4/WGTs
uPTT2ARKWbZ+ls3sB6f7uSOP7ElGnxatr/eD3bZ2+dOnSf/OoT3Cx/rBhs1/
dGL/NoFZ6efoXyT7QUGDp22prinkVr1Sagj+Aj4qa4YoATP4UpguL+TQB95t
DgpYfQnALSIJ3cnyvcD7sGiOPsccBjHDNqw62A0anDSGzhEWMOnX3ZzIV51A
vfBGzMl1EHLr8jslbD8BZZcHaWs37YBSPS/vft7cAWYKVhZ3gp3k+iMHZvna
gYOdNMfQyQqaM2vdVqTawHNnD5Hug9Zw9/7uPetNW8GQiFCy6HkbmHVzQ/xV
3xbwTPjAdV6MLTQXCPirJ6gZpPDfsM++Zgv5PvA/nvRtBhF/3q/Zd4vUJaxn
f51oBg7/bk0sTreF0SP3nFRdm8G3UeGUcwW2kH01hp5s0QxY1W8e/mkm/T1f
Jbqlm0HxZdlXYhvtYLROeKPYWw7IiLIPLttsB83v+NGPvuKAmPBLOn4UUndK
zSp5xgH7g2ffNG4lWQ1P+mVxwMKxD2WJ5naQb5fs33PXOMDQIrRa1ovU18yL
H3bngC1mz2JrfEk9R7a89SAHrDIasjoXSPK/D8Ps9nJAD8uxvvs86Q92XG1p
zQHhW6icBwnk+jWWCbbbOMBT8XCiQ5IdZEv9HdaizgF28sm7/6SQ/MH/hCuN
AzZK/Wk78oj0n/O2PLORA4TW6KRI5pDxbvuw+OQ4YEbUZz/7Kel3tlZMluKA
DsFMuTPPSf/xcSHKag743/01/N/9Nfg/TOR1TQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4506629#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmHk0VV/Yx6k0aKAylCRjhnsvl6552LTNhEqmhIQkhJBfoVJKkpmQImSm
EqJkq00UpVSXVKYyT9d07ynTe9/1vn+d9Vnf/Tz7u7/nOeustcVczx1xX8PB
weHFycHxv8+61a+dYk9Nsai7DY9TIh0NcGd1MkpNse4tvnPbUulok8CZTlRo
irNLRjc1pNORDXmZfiLbFHOsOs7tf0hHM3ZS9PQ4U9zwV7hg7RM62l8R9HW7
L7vfkIjY3w90FO8m8JmTZIpdJD5Pd3F3olPvbN/355lgF08ad2JUJ6KNX/fa
HmGMXfbu4Z8q7UL+DWszbwQYYdFeGaOg799RuZyRp6WnIfZbJ7KWR+QHEpik
Ddw0MsBXEpaoAY9+olHXwEkuDX2cne3gaqjTg4apTvlz/BD3ye1mKO7uQ4NJ
W/7RWHqYwy+98btiP7Io3tL7clwX8xKyz4OcBlCTou9vtySAOeoiGM3ff6Nv
O2Ibp6IBjpIo52jr/Y0G58oehUQATM1Rn/8y+BtxVU+ejvFn626hKdMzv5GB
hs/EM0uAR0xMlGy4/6Cmg94La7YArHvPN+iPJpuPem14eF0Hbxw7cE4ih81B
HqRfQdq477fIYVroIAq/5FiU4KONR1zml6jXBpHK1SPShu7a2O5HUJxS9CDK
j9GReGytjUP0isL10wbRjVyBPVcPaGM/xrJ4XuUgMvz8lltqRgv79fZH204N
ordk6TFvby3cslzGU+s+hN7+Hi5cctXEn5hC2366DyNdLbO8JXtNvGQjXbHo
O4xqk8uzlqw0cVTm6D6JkGFUahCUuqSjiWUMOK7fih5GCQVrri8JaWLJ7Ra5
VY+HkePZvc5LHRo45qiwQsriMJqZPcK/dFADF1Lcp5vSR5CXWTXvkroGtg5J
v7OQO4L+5O7eskTVwHWPusPly0cQ3bpvzZKIBmYI1iTWvRlBddU+jMV/6lhL
/R+P2cQIunExqnWxQh3zynOb6OiNIuE19VcXxdWxGstlaHx2FCmOlBSlCKnj
tqNX0YPlUWT4Mf2zwg517K3iEHR84xg6lxEk5sbJ7hfu/mx27xh6o0R53dar
hq9UWkhlmIyh06cyOR5kqmHz0vYN33PGUEXjxcu6Amr4T5jXtuQT46i52LOg
e6saZvxirTw8M45+xtu0B3Kp4dJG/umXQeOI64TSvqJ5Vdymcl2YL3Yc2S2M
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
kYbs
         "]]}, Annotation[#, "Charting`Private`Tag$4506629#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
b4b/e28G/weT60yN
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4506629#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"n (\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", 
       TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {650.7322998046875, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus carrier number density difference n at varying intensity \
I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\), fixed disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\)=0.1V\"", TraditionalForm], 
    PlotRange -> {{-1.5026216615149432`*^16, 1.5026216615149432`*^16}, {-2., 
     2.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"I~\\!\\(\\*SuperscriptBox[\\(0.05\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.15\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.25\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.35\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.45\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.55\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.65\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.939085303861117*^9, 3.939085409975822*^9, 3.939085473716218*^9, 
   3.939085536319291*^9, {3.939173771993309*^9, 3.939173796499013*^9}, 
   3.93917441277355*^9, 3.9391754602724524`*^9, 3.9391760560443783`*^9, 
   3.9391762469964743`*^9, 3.939176308197945*^9, 3.939176378598521*^9, 
   3.939176606500922*^9, 3.939176825121643*^9, 3.939177016443348*^9, 
   3.9392144665152884`*^9, 3.939218197226945*^9, 3.93921837183351*^9, 
   3.9392480991977587`*^9, 3.939248496862604*^9, 3.939248898187269*^9, 
   3.9392491453282146`*^9, 3.939249420353546*^9, 3.9392497681573467`*^9, 
   3.9392499035854063`*^9, 3.939250071526024*^9, 3.939260808965289*^9, 
   3.939261159911565*^9, 3.939264327338956*^9, 3.939264503400399*^9, 
   3.939265355882168*^9, 3.939265721847351*^9, 3.9392659497389193`*^9, 
   3.939267897533227*^9, 3.940120744198175*^9, 3.940120846694537*^9, 
   3.940121511258184*^9, 3.9401216358262587`*^9, 3.9401217670209303`*^9, 
   3.9401218740102577`*^9, 3.940121936887826*^9, 3.940123051804109*^9, 
   3.940123155961804*^9, 3.940123261707266*^9, 3.9401234110088263`*^9, 
   3.9401235666521673`*^9, 3.940124137926371*^9, 3.94018169394937*^9, 
   3.9402106250875463`*^9, 3.940215397102283*^9, 3.940218311632613*^9, 
   3.940258764146365*^9, 3.9402606499543333`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"18944768-d38c-43f7-b1d9-a3cd6be89e2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide3", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.05", ",", "Vd"}], 
            "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.15", ",", "Vd"}], 
            "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.25", ",", "Vd"}], 
            "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.35", ",", "Vd"}], 
            "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.45", ",", "Vd"}], 
            "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.55", ",", "Vd"}], 
            "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "0.65", ",", "Vd"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", "c"}], "e"]}], ",", 
           FractionBox[
            RowBox[{"2", "c"}], "e"], ",", 
           RowBox[{"dN", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", "c"}], "e"]}], ",", 
             FractionBox[
              RowBox[{"2", "c"}], "e"], ",", "500"}], "]"}]}], "}"}]}], "]"}],
        "//", "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<n\>\"", ",", "\"\<I~0.05^2\>\"", ",", "\"\<I~0.15^2\>\"", ",", 
        "\"\<I~0.25^2\>\"", ",", "\"\<I~0.35^2\>\"", ",", "\"\<I~0.45^2\>\"", 
        ",", "\"\<I~0.55^2\>\"", ",", "\"\<I~0.65^2\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 3) Acoustoelectric \
current j_aec (A m^-1) versus carrier number density difference n (m^-2) at \
varying intensity I~\[Delta]Vg^2 (V^2), fixed disorder Vd=0.1V.txt\>\"", ",", 
   "datSlide3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.939294025193441*^9, 3.9392941395507383`*^9}, {
   3.9392942353094378`*^9, 3.939294343156728*^9}, {3.9392944256540947`*^9, 
   3.939294512267632*^9}, {3.9392945883898973`*^9, 3.939294591330954*^9}, {
   3.9392946520603733`*^9, 3.9392946640427837`*^9}, {3.9392947050431757`*^9, 
   3.939294705561804*^9}, {3.939294839682806*^9, 3.939294872019945*^9}, {
   3.939294975402363*^9, 3.9392949754815273`*^9}, {3.9392950076118937`*^9, 
   3.939295007728978*^9}, {3.9392950708249397`*^9, 3.939295112969738*^9}, {
   3.939295169433926*^9, 3.939295194581566*^9}, {3.9392954225753193`*^9, 
   3.93929542269438*^9}, {3.939295457247529*^9, 3.9392954574619923`*^9}, {
   3.940119729424404*^9, 3.94011973342239*^9}, {3.9410749634597197`*^9, 
   3.941074979112926*^9}, {3.9410751821239033`*^9, 3.941075261385282*^9}, {
   3.9410753409480143`*^9, 3.9410753422651663`*^9}, {3.941075374745757*^9, 
   3.941075410404996*^9}, {3.9410754557957983`*^9, 3.9410754565254087`*^9}, {
   3.941075580162361*^9, 3.941075612264001*^9}, {3.9410756469544563`*^9, 
   3.9410756476866217`*^9}, {3.941075783074863*^9, 3.941075787346322*^9}, {
   3.94107581913794*^9, 3.9410758389286833`*^9}, {3.941075901054833*^9, 
   3.941075905184214*^9}, {3.94107597967795*^9, 3.941075989090811*^9}, {
   3.941076075743919*^9, 3.941076081168035*^9}, {3.941076174351457*^9, 
   3.9410761768537893`*^9}, {3.9410762100537643`*^9, 3.941076216915111*^9}, {
   3.941076364224743*^9, 3.9410763945817833`*^9}, {3.941076522283579*^9, 
   3.9410765261044416`*^9}, {3.9410779861140337`*^9, 3.941077999922515*^9}, {
   3.94107817570923*^9, 3.9410782342174273`*^9}, {3.941078275767745*^9, 
   3.941078293366909*^9}, {3.941078419956192*^9, 3.941078462498952*^9}, {
   3.941078501565352*^9, 3.941078568139349*^9}, {3.941078639976144*^9, 
   3.941078707549697*^9}, {3.9410787778516903`*^9, 3.941078795715331*^9}, {
   3.941078863944797*^9, 3.941078888009295*^9}, {3.9410789544872513`*^9, 
   3.941078956653181*^9}, {3.9410797186128397`*^9, 3.94107972126858*^9}, {
   3.941083594143902*^9, 3.941083597630978*^9}, 
   3.9425146995992203`*^9},ExpressionUUID->"d12622c7-ead5-4fce-b618-\
7a0f4bebb835"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 3) \
Acoustoelectric current j_aec (A m^-1) versus carrier number density \
difference n (m^-2) at varying intensity I~\[Delta]Vg^2 (V^2), fixed disorder \
Vd=0.1V.txt\"\>"], "Output",
 CellChangeTimes->{
  3.9410752561972237`*^9, 3.941075419242579*^9, 3.941075463294097*^9, 
   3.941075589795247*^9, 3.9410756541842833`*^9, 3.9410757932660933`*^9, {
   3.9410758283781223`*^9, 3.9410758444311132`*^9}, 3.9410760170856323`*^9, 
   3.9410760891543903`*^9, 3.941076222737835*^9, 3.94107640335701*^9, 
   3.941076533527824*^9, 3.941078006147728*^9, 3.941078307489608*^9, 
   3.9410785940774717`*^9, 3.941078732449703*^9, 3.9410788101304483`*^9, 
   3.9410788932780657`*^9, 3.941083875860215*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"3a564024-cda8-4a55-9918-c504255300ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nGaAs", "[", 
     RowBox[{"n0_", ",", "\[Delta]_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{"0", ",", 
      RowBox[{"n0", "-", 
       RowBox[{"\[Delta]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"q", " ", "x"}], "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"jGaAs", "[", 
      RowBox[{"n0_", ",", "\[Delta]_", ",", "x_"}], "]"}], ":=", 
     RowBox[{"vs", " ", "e", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nGaAs", "[", 
         RowBox[{"n0", ",", "\[Delta]", ",", "x"}], "]"}], "-", 
        FractionBox["1", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"nGaAs", "[", 
             RowBox[{"n0", ",", "\[Delta]", ",", "t"}], "]"}]], ",", "t", ",",
            "0", ",", "\[Lambda]"}], "]"}]]}], ")"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j0GaAs2", "[", 
    RowBox[{"n0_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{"vs", " ", "e", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "\[Lambda]"], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"nGaAs", "[", 
          RowBox[{"n0", ",", "\[Delta]", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{
        FractionBox["1", "\[Lambda]"], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"nGaAs", "[", 
            RowBox[{"n0", ",", "\[Delta]", ",", "t"}], "]"}]], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Lambda]"}], "}"}]}], "]"}]}]]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"j0GaAs1", "[", 
     RowBox[{"n0_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{"vs", " ", "e", " ", 
     FractionBox["1", "\[Lambda]"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"n0", "-", 
          RowBox[{"\[Delta]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"q", " ", "t"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           FractionBox[
            RowBox[{"ArcSin", "[", 
             FractionBox["n0", "\[Delta]"], "]"}], "q"]}], "}"}]}], "]"}], 
       "+", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"n0", "-", 
          RowBox[{"\[Delta]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"q", " ", "t"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           FractionBox[
            RowBox[{"Pi", "-", 
             RowBox[{"ArcSin", "[", 
              FractionBox["n0", "\[Delta]"], "]"}]}], "q"], ",", 
           "\[Lambda]"}], "}"}]}], "]"}]}], ")"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j0GaAs3", "[", 
    RowBox[{"n0_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{"vs", " ", "e", " ", 
    FractionBox[
     SuperscriptBox["\[Delta]", "2"], 
     RowBox[{"2", "n0"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"J0GaAs", "[", 
    RowBox[{"n0_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"j0GaAs1", "[", 
         RowBox[{"n0", ",", "\[Delta]"}], "]"}], ",", 
        RowBox[{"0", "<=", "n0", "<=", "\[Delta]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"j0GaAs2", "[", 
         RowBox[{"n0", ",", "\[Delta]"}], "]"}], ",", 
        RowBox[{"n0", ">", "\[Delta]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.05"}]}], "]"}], ",", 
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.15"}]}], "]"}], ",", 
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.25"}]}], "]"}], ",", 
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.35"}]}], "]"}], ",", 
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.45"}]}], "]"}], ",", 
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.55"}]}], "]"}], ",", 
     RowBox[{"J0GaAs", "[", 
      RowBox[{"\[Sigma]", ",", 
       RowBox[{
        FractionBox["c", "e"], "0.65"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", "0", ",", 
     FractionBox[
      RowBox[{"2", "c"}], "e"]}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<I~\!\(\*SuperscriptBox[\(0.05\), \(2\)]\) \
\!\(\*SuperscriptBox[\(V\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.15\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.25\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.35\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.45\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.55\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\"", ",", 
      "\"\<I~\!\(\*SuperscriptBox[\(0.65\), \(2\)]\) \!\(\*SuperscriptBox[\(V\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3.0"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<(GaAs) Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) \
versus number density \!\(\*SubscriptBox[\(n\), \(0\)]\) at varying intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)~\!\(\*SuperscriptBox[\(\[Delta]n\), \(2\)]\)\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(n\), \(0\)]\) (\!\(\*SuperscriptBox[\(m\), \
\(-2\)]\))\>\"", ",", "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.962732202629273*^9, 3.962732244857699*^9}, {
   3.962732279976261*^9, 3.962732377515967*^9}, {3.9627324211644983`*^9, 
   3.9627325312085733`*^9}, {3.962732594230184*^9, 3.962732735486932*^9}, {
   3.9627330807839127`*^9, 3.9627331086634493`*^9}, {3.962733494160782*^9, 
   3.9627335478860817`*^9}, {3.962733627345682*^9, 3.9627336277672653`*^9}, {
   3.9627336750879908`*^9, 3.9627337702520247`*^9}, {3.962733828759639*^9, 
   3.962733851440461*^9}, {3.962733971939886*^9, 3.962733993828676*^9}, {
   3.962734023972477*^9, 3.962734038488762*^9}, 3.962734076079653*^9, {
   3.962734350388253*^9, 3.9627344205645123`*^9}, {3.96273472059861*^9, 
   3.962734722891595*^9}, {3.9627347607953777`*^9, 3.962734841472391*^9}, {
   3.962734872807695*^9, 3.962734888165865*^9}, {3.962735235848282*^9, 
   3.962735236550517*^9}, {3.962736404505703*^9, 3.962736500015029*^9}, {
   3.96273653152271*^9, 3.962736643047739*^9}, {3.962736676166051*^9, 
   3.962736759482711*^9}, {3.962736802905319*^9, 3.962736807287643*^9}, {
   3.962736837479307*^9, 3.9627368707323303`*^9}, {3.962736933195594*^9, 
   3.9627370301491737`*^9}, {3.962737108134492*^9, 3.9627371478262577`*^9}, {
   3.962737187575568*^9, 3.962737197414214*^9}, {3.9627372556250257`*^9, 
   3.962737261470586*^9}, {3.962737291501589*^9, 3.962737333187394*^9}, {
   3.9627373651721153`*^9, 3.962737385873805*^9}, {3.962737416160872*^9, 
   3.962737452406899*^9}, {3.9627375072378693`*^9, 3.9627375074443483`*^9}, {
   3.962737587258481*^9, 3.96273759876933*^9}, {3.962737651159211*^9, 
   3.962737651422805*^9}, {3.96273775777148*^9, 3.962737768978297*^9}, {
   3.962737861407186*^9, 3.9627378713162603`*^9}, 3.962737922465201*^9, {
   3.962737979801944*^9, 3.9627380471814737`*^9}, {3.9627382238729553`*^9, 
   3.962738230967605*^9}, {3.962748995357188*^9, 3.962749021128697*^9}, {
   3.962749052406666*^9, 3.96274911376171*^9}, 3.962749168951668*^9, {
   3.96274919897051*^9, 3.9627492082384863`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1863ea40-3b1e-4bfe-b46a-8f38dd667b9f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
4gVkfHEhRL3Wigr/A7DA138=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$12796#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
F6kglbg6QcqnYJkFUT7Pjgr/A3NXda4=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$12796#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
aQ==
         "]]}, Annotation[#, "Charting`Private`Tag$12796#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
AK86
         "]]}, Annotation[#, "Charting`Private`Tag$12796#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVU2k4lA0bnYhSUQgpS4gZM2NsoXrlHm4MU1FZkhJ6S7KmUqikTVmylBZL
tigh2ZUo26sFj6UIISpLdgbZfb4f5zrX+XHOdX6cI3Pc/eBJLhKJ9HoZ/2dv
G8+mHaxs3eE1HmZNU7/B/n3+hHFFmJ5EZ5C1BVc3XBAycJCviNc7zkcdaeLv
hhXa66SFKzL1jG+Nl3Rt64bKOvc5vooSvfzKr7yiZt2gGJ1wmqeiTq+qsk9y
5lU3WPsVbuWu6NTrOjgT+cK5BzjjhvMrKkb1asZzGvP6e6HfqXD+htcKDNqt
EeC/dwBIpeVnWif48HewPkMgYRgCtMxXseUEse2Oj2vQqjHoU3oi7fhMBG83
66+mzY9DpGXcuHubOL45wlVk0jsB8VLTAm9cpHDf1oCpPWJ/wcxYurPlnAxq
8CalRx6ZgasS0qLVgXLo9VpBIObRHFjC59EOQh7DL2qWKNEXwfBY6nqLb/KY
Pykfpay5CJpXAhlVP+TR/8KT+9uZiyD6lu1SMCqPgwXx8yzzRWjSrOoNFVLA
L0c9zR5cXgRLRnUH01IBn/MMcdXVLGtJojqxXQGFQ6Rvks4tgaF2xsCmHgW8
+q/iWc8rS6B5JGRN6LACut4IfDl8ewlEI02MLi0pYHZc+b7hmCVo2lhbbiZD
RkceA/q2D0tgua6ucOVJMjZFaXfoCJCYhrTMFh9XMm4UupgWL0xiarLDpkc9
yfjOyvo0jziJKXpnv2a7PxkT79msb5YjMZu467PyUshIDd7NSdpJYlbKZtXR
sshod4DKkAESM183fCThDRnfP3SzStAnMR9ePaAU8pmMsRJTNhmmJKZ/rOre
lV/ImJ+14cM/FiTmhWJBZ5/vZPzpK61PWJOYlnP1KQ6DZNSDqMiVDiRm7OR3
avYEGWvc7t6/60xi9ox0py/ML/u1AzdIe5CYjP4RhjEPBfnoF2nFF5bzfs9k
RvBTUOpe5XXagSV418Gt3ilCQfV2377ExEXgbeHPo0lRcNWvhLaErYtg8kVM
66ICBV+/pURS8xbgYY3MmzIGBbn3OfJMHlqAjg+0fwS0KNjmwvVf7coFUCjT
KD4MFKQ7N8novZkHtyKAZBYFSzGeN/vcPOTnG5eOmlLw1aWoXG71eVjMNENt
KwpumDRSOz01B4ZpNv/dtlvup7jRnlU8B01xHp+kPCjYaNAdkGw2B1JRl/Y4
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
WCs=
         "]]}, Annotation[#, "Charting`Private`Tag$12796#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVkHk01IsbxmeRtbQZpQjZasyMZezb++WNYZIU1dwbSkWUa0lqSG7bdSVL
SaIUoRIt3Nx0SZbwKyFbg1KUfak7zIiy/bp/POc5zzmfcz7nPOr7grb7UEgk
UtHP/NfhnmECM85ftlN8VsHxjGHwLn8idqq+aLcUP574ljcMx1bY+2pVZ9r5
2oPX8SfDQLZarLqyusDuXw3Fg783DENtU9CMTHWFnfLGjedzZ4Zh4/Vb/ouq
m+yqfCjL9vBG4NdTJWrU6h674HsHLDxXjoJowmGWXC20u5GepJaROAYjh0pm
z/LJ2HE5x2ek718gVb4IfieWwWLd5tYXSeNw3tRdiquxHJM8x1LFliIYYt5Q
9btDQ9M71ZP3lCchbWfGRFCXEtZ49CkoCr9B5rpp+X8C1qFl89nu/oVpcHNS
7ekMVceRIfKubOUZ+F1ZVbE+VgNPo9W9EPoc7IQ64cdGLcz37v3cd3IBds40
5/qO6eDg569jCp9JxI54V13Owkb8u3Mh690SCtFl9EWPI03H2LTNkStXUoh9
XeeNOMvpOHG6MmvLagoRrPvCmqNBx27axw816ylE7CtjVw6HjoefuVrXmlKI
ikVrwziJdGTt6raR3kch6FH9zzmqukheb8HOLKYQBVpnXnA26OIm1EiVLKMQ
pg3rXnIMdDHZICApsIpCbFLmNXNQF4VDtW7YQCH2lNT1cg7qoklopy+pl0Ik
f3sk7fhIFx9vSZCql6cSC4ER2x2BgXOr01++OkglRmLi6A85DJR7kHNb9jcq
Ici6SVFwZeDoQF7YliNU4r6g6q/uvT/5ofAlnZFU4lcbuZXHzzBQO1VBViaJ
ShQtSW+9XcPAZzPaAW+fUYkMnYf5co0MZK0a0bKoohKxthVnQwQMrDq/OfnW
/6iEd1gf23qQgQeWvuznt1AJ+Q+M5DZpJr7P2urkPEQlvn+zCbBYzsQrAY2J
r75Qib5l2zZlKjHxEbUgniuiEqWbwsSH6UwUOV7O5s1TiTtef9Y3GzIxYa/s
LwNUCSKJn5ZjasnEShWQD5eRIE4m5UfeQCYyabGey5dKEH73y9ypzkycFbQx
ChQkCLfaNwx/dyY+XDqzZNcaCcKm55PEGw8mWsa0iP1/+uk/RF1GPkzc/zp9
+xyDStAUJP++9hsTbRl6EcQbCkFirY4nHWNioZRbl0oMhRjj0H18o5gYp+Fz
p82ZQrR7W1nXRzMxt3h5r44Shag64UIzTGSiukNu2cAImXh4Ze+Xq1eZ2D4v
/LOqgkykPTpSM5fBRL5nXVxPGpkI7k0Je1XAxGi96rR8NzKxey53i94/TDRQ
qym/wiYTDqtKta5U/vxvRPG1Fo1MqGzufru3hYne6W1VIV0kQtpn/EHtOybu
0DHp7qkkEeIoajSjl4myM6VavFwSUfeXjsm0iImbWtwSSHwSwV8TnJJIY2Fm
jFsWR41E7Dc6EzipwsJ+/w1KQ3IkwsUl2WG3NgulfKXLtIQLoHXm6TdtUxYW
Pvix8XX2ArQMk3Y957FQsaOPcYK2ALMFtws7vFmYkE6rp4zPgzafu1h0iIXq
69wleA3zECGZXKlz8ucWRpjZxczDeg0dxqVbLLQM1VivLjkPRzy2kA+MsFDn
puoOQ+U5SNeY2B0lYmEY6WSqFHkOakdSnqTOsnCovEXLfmAW1oT3HG6Q10M9
yQs7RgtnoepKqMCErYfRPLpT/JZZWPEmLV8mUg8X2cb8OXB5BqxSbCQ1/9DD
N2F6+eMnZ8DXs3evTYIeJprdfW3tNwMlowzF0Ew9zAtvT0yynoF90hWnuqr1
0N34e6jE6A/oVBPltUvqY6fNHeHg1h+w8VelU3lb9XFdhbnLPYvvcCiftGe9
uz46zRykfaR/h7zZQetrPH2sXv5Fm732OzAynsyc9/6Pvy9rNTsN+n1ux/1D
9bG9YbKypHwazAITAjdc1certs+PLnKeBsczVM87H/Xx2drbbLXjU3C+dcRy
Xa8+Xmg3KY07NAV1mi1rUgb1cdY1JH6J1xQ4/y+z4w+hPppPLZLfbD8Frott
3H0oBugvuTT/ocIU8FL4mzW1DdD1bQO//8k38Mv7Yp71mwEeVdvl+lDqG7wv
SqQ0hBjgSre2kK9zk+BSbvB6KswAbfc/EFiIJ8G4LcxjS5QBDptvE031TAJl
fi5qOsEAgzJaXEilk3Bjm3y1S4EBflltkGYQMgkt0yyXmQkDPCR/psW/Xwz2
1GZF7amffpumiYUuMTxdEtrtOmOAKVsPu2a0iSFjfXHwHaohLth0Hfv+QgwB
znB5m4IhHnB28lHKFoNU5taOu8aGyM2+RJ/eJwYrTvA+d74hmnkdXVU+JAKX
3N0BnZGGWOAhUH7WIwJvGc4xr9OG+Mvm2uzKDhFEv1aJ9Ys1RLkcL1H/SxE0
b31dGJluiBdu1b+5dE8Evjxt8u0KQ9wjnV7vFyCCi/5dGZPSbIznReg+mpqA
/guOH1LS2FiU5H32q/oE0O98bWq8wUaacs30YuUJCKxIrpbMYuP1025G+ooT
MC3uyT+Wx8YNK9d9Pic7AYu9wiN2lrJxN2eW5ysaByP9vFWKH9h4pO76ELV2
HM61yW2/omaE00E11KjAcdBQeVN7+a4RlvS5S5q/FoJ0wvMZrftGmMDOPDRR
I4Sx+Qf6TwuMcBlfoelRhRCKeuKudf1jhFsNN5w3eSIEhxxuoFa9ESZTVNRD
bwnBT7eWViw0QpvyoiM5fCHcNy878M7cGGk+uQM1G4VgsjOfol5vjLte0tw0
Gf+C04+q7F9HTTDYkzBVpH+B8ZGYxy5TprimRqvAJXYUAs/m0FqVzPFW8lKN
tPlhOOUXOLB8owWSHcI72MVDcOlpqPKcoSVOWcY0fUwZBH5BYw7fzQorpn/s
fxU5ACJx+/WHe61xofLvJFpCP2z6ZNJ/9JwNjopi+fZZfZBs1nx5MAswIKtl
uK6xF6y+xvFkdxHYWlQsVlfqBSUFj2XDgwQy6AdtV+z/DMTeMwuaQbYYXUib
i6v5BIPeDurFIlu8pNvQc9b4E4SbGgdcOmuHea4btudk98AO9omvL2UQx7KI
ZTzNHlCmjqU5Xkc82n0ydd6+G5jfH0dqaWxCIwVDJfr+j/A8RymJl7sJFVJW
+/AufQALzbymVjN73FnBrU8t6QJS3SWH++X2eNH4eKPJ3HsoxJz++m0OOOlx
vpRq+R4+H3Evxk8OyFkh8/h69DvwfLm7YtVBDnoeqaqqHOiEF+PxE+xpDj6f
lDv31bYTQm1XeTz43REPnOq1PPqoA7IdbKYjJZywtez7zS3aHVCmerEsOdkJ
zaIPR5intsN6VfMSmbVcLFT90Rqj1A6KKm1r9qlwUT9uKHTPqnaQXRt0okSV
i+uqY0+a0NphQvG21WFNLjbKBTX0L2uHKvnl5fVMLrr38zycpNth//zQi0SC
i+/Iw2s1pwSQ8yG1gebLxcf6DBedtwJIfc9mBfpxUbXp1rBsqwDiOhsTag9x
0adr0ejXJgEcfSvhejyIi9G3NVSf1gvAviG4pYPPRQnv005bqwUw8Myx/foF
LuZaO8RffCyAdyW9puJ4Lq6vnAiPKBRA49OoVOeLXEw696zuwCMBPCkq+mUu
mYtzcsapFvkCiL6v1uV1k4sNLmndI1kCiMgrtSrO5GLpE/mR9kwBBObuvLE0
m4srSWW7am4KYGdOnFfFXS6e7truceuaALhZOuWr87iY1kUWJaYKwCazSjXk
PhfVUvljUSkCMLzpeerVQy5e/XzNMTBZADrp0z3qhVw0ueos5ZUkgP8DnlQu
XA==
         "]]}, Annotation[#, "Charting`Private`Tag$12796#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$12796#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(0\\)]\\) (\\!\\(\\*SuperscriptBox[\
\\(m\\), \\(-2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {543.2976989746094, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"(GaAs) Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus number density \\!\\(\\*SubscriptBox[\\(n\\), \
\\(0\\)]\\) at varying intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[Delta]V\\), \\(g\\)], \\(2\\)]\\)~\\!\\(\\*SuperscriptBox[\\(\[Delta]n\\), \
\\(2\\)]\\)\"", TraditionalForm], 
    PlotRange -> {{0., 1.5026216921806926`*^16}, {0, 3.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"I~\\!\\(\\*SuperscriptBox[\\(0.05\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.15\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.25\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.35\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.45\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.55\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", 
       "\"I~\\!\\(\\*SuperscriptBox[\\(0.65\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.962749212913198*^9, 3.96274932188962*^9, 
  3.962890378349606*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"2f61d5b2-7543-440f-bb97-6b6e4424068e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.05"}]}], "]"}], ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.15"}]}], "]"}], ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.25"}]}], "]"}], ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.35"}]}], "]"}], ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.45"}]}], "]"}], ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.55"}]}], "]"}], ",", 
           RowBox[{"J0GaAs", "[", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
              FractionBox["c", "e"], "0.65"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", "0", ",", 
           FractionBox[
            RowBox[{"2", "c"}], "e"], ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0", ",", 
             FractionBox[
              RowBox[{"2", "c"}], "e"], ",", "500"}], "]"}]}], "}"}]}], "]"}],
        "//", "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<n\>\"", ",", "\"\<I~0.05^2\>\"", ",", "\"\<I~0.15^2\>\"", ",", 
        "\"\<I~0.25^2\>\"", ",", "\"\<I~0.35^2\>\"", ",", "\"\<I~0.45^2\>\"", 
        ",", "\"\<I~0.55^2\>\"", ",", "\"\<I~0.65^2\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 2) (GaAs) \
Acoustoelectric current j_aec (A m^-1) versus carrier number density n_0 \
(m^-2) at varying intensity I~\[Delta]Vg^2~\[Delta]n^2 (V^2).txt\>\"", ",", 
   "datSlide2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.962889904239492*^9, 3.962889904341819*^9}, {
  3.962890087423696*^9, 3.962890207156293*^9}, {3.962890548443356*^9, 
  3.9628906279922743`*^9}, {3.962891062337408*^9, 3.962891080815762*^9}, {
  3.962891578219852*^9, 3.962891579242858*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4ce50380-cca2-4cae-b9c1-7b4e7cae1c0d"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 2) (GaAs) \
Acoustoelectric current j_aec (A m^-1) versus carrier number density n_0 \
(m^-2) at varying intensity I~\[Delta]Vg^2~\[Delta]n^2 (V^2).txt\"\>"], \
"Output",
 CellChangeTimes->{3.9628908549235477`*^9, 3.9628913621493998`*^9, 
  3.9628917953172083`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"9483ee3b-3c4a-45b5-a992-675bce3a24f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", " ", "vs", " ", "v"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.0001"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.005"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.01"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.05"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.1"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.15"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"v", ",", "\[Delta]Vg", ",", "0.2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(C\), \(g\)]\)*\!\(\*SubscriptBox[\(v\), \(s\)]\
\) slope limit\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.0001V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.005V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.15V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.2V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\) at varying disorder \
\!\(\*SubscriptBox[\(V\), \(d\)]\), fixed intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)=\!\(\*SuperscriptBox[\(0.1\), \(2\)]\) \!\(\*SuperscriptBox[\(V\), \
\(2\)]\)\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\) (V)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", " ", "vs", " ", 
       FractionBox["e", "c"], "\[Sigma]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
        "0.0001"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
        "0.005"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
        "0.01"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
        "0.05"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", "0.1"}],
        "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
        "0.15"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{
        RowBox[{
         FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", "0.2"}],
        "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"0.5", "c"}], "e"]}], ",", 
      FractionBox[
       RowBox[{"0.5", "c"}], "e"]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<e*\!\(\*SubscriptBox[\(v\), \(s\)]\) slope limit\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.0001V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.005V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.05V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.15V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.2V\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
carrier density difference n at varying disorder \!\(\*SubscriptBox[\(V\), \
\(d\)]\), fixed intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \
\(g\)], \(2\)]\)=\!\(\*SuperscriptBox[\(0.1\), \(2\)]\) \!\(\*SuperscriptBox[\
\(V\), \(2\)]\)\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<n (\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "Dashed", "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "i", ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", 
           RowBox[{"1", "-", "i"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"1", "/", "4"}], ",", "1", ",", 
           RowBox[{"1", "/", "4"}]}], "}"}]}], "]"}]}], "]"}], " ", "iterate",
      " ", "V_d"}], ",", " ", 
    RowBox[{"fix", " ", "\[Delta]V_g"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "\[Delta]Vg", ",", "0.2"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "\[Delta]Vg", ",", "0.4"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "\[Delta]Vg", ",", "0.6"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "\[Delta]Vg", ",", "0.8"}], "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", " ", "vs", 
           FractionBox["c", "e"]}], ")"}], 
         RowBox[{"-", "1"}]], 
        RowBox[{
         SubscriptBox["j", "aec"], "[", 
         RowBox[{"v", ",", "\[Delta]Vg", ",", "1.0"}], "]"}]}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", "1.5"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.2\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.4\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.6\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.8\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=1.0\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.016"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) \
versus gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\) (V) at varying \
disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) (V), fixed intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)=\!\(\*SuperscriptBox[\(0.1\), \(2\)]\)\>\""}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\)\>\""}], "}"}]}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.939218298236373*^9, 3.9392183014589863`*^9}, {
   3.939218675764203*^9, 3.939218711593672*^9}, {3.9392263396223497`*^9, 
   3.939226359938498*^9}, {3.939258725586693*^9, 3.9392587273070173`*^9}, {
   3.939261589226816*^9, 3.939261654758253*^9}, {3.939261724520115*^9, 
   3.9392617285618067`*^9}, {3.9392665832936153`*^9, 3.939266746854993*^9}, {
   3.939266897225011*^9, 3.939266899304412*^9}, {3.9392670864624043`*^9, 
   3.9392671065951357`*^9}, {3.93926719204176*^9, 3.9392671955090313`*^9}, {
   3.9400806442231083`*^9, 3.940080645734221*^9}, {3.940080741361557*^9, 
   3.940080783807969*^9}, {3.9400808339907503`*^9, 3.940080835165805*^9}, {
   3.940080998712556*^9, 3.940080998783168*^9}, {3.940081037302765*^9, 
   3.940081065869986*^9}, {3.940081279680992*^9, 3.940081285263748*^9}, {
   3.9400813568194027`*^9, 3.9400813568894444`*^9}, {3.940081434552175*^9, 
   3.9400814346728277`*^9}, {3.940084172233356*^9, 3.940084172336138*^9}, 
   3.940120486613882*^9, {3.940124606067217*^9, 3.9401246182115*^9}, {
   3.940124789104536*^9, 3.940124845510344*^9}, {3.940125022138611*^9, 
   3.940125047520389*^9}, {3.940125173580171*^9, 3.9401251892760363`*^9}, {
   3.940125287545074*^9, 3.940125347042387*^9}, {3.940125576892475*^9, 
   3.940125600024354*^9}, {3.940182098942113*^9, 3.9401821037486753`*^9}, {
   3.9401822265652933`*^9, 3.9401822511000967`*^9}, {3.9402079507659693`*^9, 
   3.9402079856453342`*^9}, {3.940208299090764*^9, 3.9402083013468647`*^9}, {
   3.940208385604095*^9, 3.940208488664687*^9}, {3.94020887557897*^9, 
   3.9402089005292177`*^9}, {3.940209012527615*^9, 3.940209084854081*^9}, {
   3.940209649636454*^9, 3.9402096496834793`*^9}, {3.9402097226490593`*^9, 
   3.940209728579279*^9}, {3.9402097870488443`*^9, 3.940209793864936*^9}, {
   3.9402098262962523`*^9, 3.940209832183757*^9}, {3.9402100174615*^9, 
   3.940210021340273*^9}, {3.940210227798011*^9, 3.9402102412942944`*^9}, {
   3.940210271459844*^9, 3.940210352161107*^9}, {3.940210858452346*^9, 
   3.9402108588347807`*^9}, {3.940212448003723*^9, 3.940212448106979*^9}, {
   3.940214579443604*^9, 3.940214599922338*^9}, {3.9402146299373703`*^9, 
   3.940214634296812*^9}, {3.940215038310487*^9, 3.940215039325325*^9}, {
   3.940215101332889*^9, 3.9402151081636677`*^9}, {3.940217551186759*^9, 
   3.940217606536227*^9}, {3.940218221628869*^9, 3.9402182385069323`*^9}, {
   3.9402589193844337`*^9, 3.940259049011434*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"79295320-c6a9-48fc-829b-c7c097399192"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        Dashing[{Small, Small}], 
        LineBox[{{-0.10932115932903047`, -0.5}, {-0.09168588019135097, \
-0.41934187651357807`}, {-0.070668790647986, -0.32321643441088055`}, \
{-0.051061870503855813`, -0.23354065588607523`}, {-0.02980389526916451, \
-0.13631347971467234`}, {-0.00995608943370801, -0.04553596712116165}, {
         0.009501955165778996, 0.043458902302620075`}, {0.03061105485582712, 
         0.14000516937299937`}, {0.050309985146640444`, 
         0.23010177286548644`}, {0.07165997052801489, 0.32774977400457106`}, {
         0.09262019467341982, 0.42361513197392675`}, {0.10932115932903047`, 
         0.5}}]}, Annotation[#, "Charting`Private`Tag$1022747#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
zX1SdJ4ew67dOUT4//9oIPzffzT8D6mxCLQ=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1022747#2"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1022747#3"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmHs4VF/Ux5VCKkmFRChFkSSVpJbuEpIQkSQkURKRhJD8SggJlfstlbu5
GbNmBjPuxsypkHspqSRUEvXO+7zvX+f5PPu713ets9fZ+zxb1fmypetcERGR
y3NERP73qQ2yI//+9WGoUsjP2fx8vPx7bdTvaSGXeqg3PM/HkvIt6yd+9KGR
hVHCw+J81NUwc/7wuQ+ZHitW65LzccfSiK7mN0Juv7w0kJOPRu++N6YUC/WJ
oVMHh/LR8k7L861nhPEelmzkry1A/7YIr/OMXhRZbJzen1OABLFwhHW2B0PF
+pdY856hEvPy8h2K3ejE4TVqiD7Hyou185f0dKGRS4+6k9kLdIreMtYZ1okZ
3+7saet8iVPxN6IQOlAk8UhCg18xZkv1rkweeI28qtcVFpUl+MRki4/gv1cY
JxBp2NpcimGeZwM2HCFwbIXfL53JMrwhWujv85WPJYZ+rNOuFXg2tE3tdUE7
iqSmQuLPSrTpTN/Tky3kM73D+rOVaKLrbfs+rR1VyEPVA6Ik1HsvHT2e2I4Z
pTF/YCkJJYwtJ6RuCcennutv1iJh0ZJXrMN27Wjh9ex8tzMJ/6R1OVIXCPXj
SQZxAhI+rB5KfuLBw5JH/j3na8joGJAavMOVh2MqXjNDTWTU2HrMhX9GyIta
fDwIMtIKKJslrHkoEh8YHjlExt6Ee5yrwMO4hF9iiyQoqO6xZdJkOQ917iVb
njCnoM+m6bTxG204VnYremE/BWl9GoterGlFi5cbO2UVaBhkOOdlqnwrivjG
BtHX0nB3SqfZf1Kt6DRkknNhEw2Zlndj3aZb0Hu4KbfLiIbcus8yqvwW1DmT
6S/vTkPiedHKpFstmKw/zlpIoeGov556aH8zhk7q9cg5VmEJsaj+0utmNCpg
G7Dcq/DKliH3083NWLLqr+vVq1U4OfKw0IDSjBas5yfGo6rwz+lfm37ENuPY
vGaBfUUVShyg6XlAM2okZI1+XETHtdJG+6zSmpC5DRN319ExRmcg0COhCQvq
pkTl+XScsggrD41qQulQ0fK/vXRsflCr9tKnCfUdNqz6PkVH32VHxMUON6G8
fvt6z03VyJG1bCZ/a8QocXuz5uRq9FBysVm1txE7iNll3OsMJHbPj92yvRGN
Ax4RFlEM3OOYxz2s2Yg6zftDPiUxcFn6sL7vCqFe3O7H4QoG0lW8VrV8akCL
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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1022747#4"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmHk8V9v3/900oIgGSTKUkGRoVMlSEiWSTFeShIoIN1NKLuqqJBVCZdZb
5tl7Xm/D+5x3yFSZkqmUJhkaZPyez+P3++s8no+199rr9dpr7/M4R8n5oqXr
PCEhocC/hIT+99QE6c9zc70YuvbarxkaDS/+WR/5Z5LiYnfV57k0LCrVURn/
2YtCFgYP4gppuEXNzPnDl17kua+U31JJw51SEV0N7RS3XJS6TNDQ4N1oXWJh
LxrEhk4YDdLQ8r8XuVtPUfniitRb12djQFOE51luDwqJm6T0ZWbjq1eLP1ed
fosGC/uWWjc/w7W8iyt2ynWjYnVznZpwLpZ71C5Y+rYLhZa/VXUyy0OnKJ2R
zrBOFBIL02/qzMeJ+8GRCB0oJDxz/7lfIWZI9KxO6G9DxX3NJRblRfj4sI7v
y5uvUbFwtGRrQzGGXTgduPHQK0y9stRY+0cJBgvnBPh+a0WnkUcb7FzL8HRo
k3JbdgsKzTbe8PlVjjadKfpvM1owxuizwcqZcjy8xdvufXILpgrSFDnCFbjt
vWTUWGwLSn5NdFotVYEiJpbjEv9S4zkpx+ZrVGDB0tdVxn+3oCKjM4TmXIFT
yV2ODNEW1Nbo2WbwsgLjOIMJj92b0cmjaaSsuhIdA5NCdro2o0Wo3XbN+kpU
23rUpfVUMyoa7SnOf1mJzGy6log1FfeMP4/vK7HnwW3iH2hGb6vZh5qL6Kjq
rvPj8IpmFJLi9Owzo6Pv5snkseAmtFj4Usuzh47MXrUleesacag+SjJAmolX
9P7KT5JpxISTL9csUmTi3sROs5sSjdhhn6eTvJGJPMtbd90mX2Dk5smH/XpM
JPlflim1vkCTX3OLuWeY+Cq3YHX8vy9Q0B4V/rKEicMB21RD+xpQN6+fm2rD
wvWSBvutkutRsOdRonEFG6O1+y+7P6jHmJSpx4JqNk5YhJWGRtajmlX90PEm
Njbcq1XO963H0CucyzeH2Hhp+aFFC43rMVUj7YLPGg4S0pYNld/r0G5zZcSe
cA66r3WxWbOvDr27uzd9s+diiXqk+8A7AUpmTZouleahQosTY1OnAL++1Q29
u5aHUQG7RPwaBRiRvPPYyg08dK39nLWIIUCr92Z1Ott4KONo1q8RLUATxQiZ
AkseXr23zC5AV4AxToPc0hgemkw8Nlpyh8Tm/D+LPklWYS+/WHHHDgJjo89M
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
1ugkCYoyDHOVEDpotqpqejmTUGpAU9d+Sgc15/Vmdheo/PfCBwx/0SH+6TW5
eyEkKD293GwixoAG5wUvn4dR6zF9uGbUOdF9/cWr7wYJ0wOnkmwPMuDrssN3
aNEkGP22iXSwZ0D1ncOb7e5T9Sw29z/txYAoD/a3D3FUvm16lh7xDFAu0VyZ
8pjKZ7LVwDuHAd5pMmmCFBLKHNQ1/bgMqIszeticTsLB6zJi1z4woOeXsfSV
bBLuJi6dCJ9kQMGqY/UKuVS9+Qs/REowoSRinmF6PpWv7UfV/R1MUCvM6jYs
ofR9/lL48DATrAzHdc6UUfXODjx57MiEoZknRacrqHqXd91O82XCj/PXLwGd
qle1JegpdY5n+92SphmUf3sEZ3OTmBDy5g0ksij/LNC6qIAJA3J24Ss51Hou
FYbl1UyQ7VWN8OFS6wXm6zDbmDDR5emcj9R6UZkK+JkJW/YrwXMepSftkXjt
LBMEmYv1+FWUnvL7U4JlLDhQQwSnVVN6nt/89EKFBdFmTCXHGsqvntD21t0s
uHV3teUUxe5jAfx2cxaMifXrBNVS6y28WNrtzIKeuZcf2imelnVL6/dnQeq7
oIer+JQ+rZN3P9xigQaxxkOX4mhDq6tfklnQRqu6uZviDltTj5ESFshwteTk
KVa6sP/vnwQLpJ+9M31H5XMP3WU82cWC9EQpw1sUl8Vqb58bZsGS82kayyme
yVZdP1+YDR9qZbaFUPUd5MhLia5iw8hwy/V6Ss/dlpVz4pvYkH21yXyK0tsx
uOTbMmCDTH88W5xipUnhN6uOs+HCfL+ZeZQ/7hJTArmzbBj+sN3gzf/8XDdW
oRTMBrttB8viKb+nd3zKVLnLBneHhpvb2VT+U+2h2pVskA0Jl5On9uvGVz34
0MAGbmrX5L5KEkKC0mceDbBhmcyYvFE5CV4PPC8vkuCAhbby3s9FJLgpvtTl
rOcA/cNZVlQBCY75ur99d3FAPrD0v6V5JJiTwpd6XDiw7fQq2cqnlD6r81ti
L3NALeXx+e4MEvT7G0cOxXAgPmVi9btUEjSnEj3LWRxYOBhWEZdEgoSW9tmo
ZVxInyrOfxhFwkJ23Ib9alx49TG2sSmShFmTqXe/93JB/ZB4zJcIEoadCacz
57kgt2bt2qYrJDTGO9jv5nFB7ejf0eYeJBDrq2VGXnMh8EJsb64bCdwi1fas
L1xwDmlQ/36ahIK6seNSqxC6SlT71eyo/Z6NNBvyRAgc7tzuY0j5c3t4cXI4
gsvbW5yF+pQ/MlZ1xxMRRAr9aBG6lD9bFIyxFsHhmF7H7s0kqJbaK9aL88Bf
X2dT4koSFn0cWZ3uwgPlU/6epwcICM9f/+fKRR7sb1X3SntDwNw/Nh22l3mQ
87Q3q/EVAb+F2PHiMTwIHJv+PEoQ8FH2v+VBLB4IVuYtd8khgDRfK26xrApk
Qq9r63oRsEKzX9pXrgoaWXFN424EOIlnKcaqVIHQ1t8rMk4RMFmvsa1jdxXo
93YEvbUgQOOQ3gmnM1Xgm63xldxCQIzhiWfeZVVwblvW8cwffLDXTTS6Z1MN
QmLXrg778OGb0sqQ1qQaeL9Q7uf8k7Xgd2nT6bvSBFjU+SXr7qkGabHvbBsl
AgSvd3632FIN9JQSGXkNAuZnW9I8N1bDdN2u5rx9BHQf+x1StqoawpRMoO4C
AXZrO1cE/aiC6EaXtQtqqPjxX5ofC6rgqVpy5+WLJLwfXEw+UK2C9m5JSzeB
ACa26tPsNvLg8G3XjkutAohaMU4YreMBexfTMbxbAHoNNR071/AgNf6MR+qI
AIQk2S3q1D6cs6iI6JJ5DpFyy9YkDCBM1pyoND9PcZ+q0q9LCHK5T+V2itXB
UOzNzAVpXHAK0vu46Eg9pJ48sPT+Sg6ouwheD9vUQ19x8H/NIhwYN7eqfX26
HhIavl9cPc2GG8oX0jIC6sG794RPHXVu8poenYCMenDSsbDMLmLDnw1TTf6T
9aD4Xs30iDkb7rcy6IPZDWCXcNbnTwwLajbtvFWzoBHUNqepz+kwwVHLKmN0
aSOcOwiRB9Woe3GLD1tBthEM7HjycfJM0NidOxys2QjNx2ldxouZEGuicHyb
bSME7gppmDfIADfXRXJZ2Y0gMiubKEhkgEhKe/4N0yZK1+ZaFxEGqIiyhzJN
mqGo6KJVwEQlrGV7GC2IbIEitzrvmHUVIDQ575nvQCuMjNnM/PYpg9/HOI78
Da/A+0uPnumqUniz7dSaDRGvYST4UpFCSzF420pKretuA29ilWQQowhWx763
m7+2A5xUpD6RmYVQcCKVNh7YCYo/FILrB/PBdu81EwGnC3jRSw4FXMyDYkfP
dbun30Bf3ceK3nW5MCFmKMywfguh1pqLtN48A8uWPTvWJvRAqJZGhnttNojt
WVzFfkLx/QPPazAbqjK7TB0yeoD352ypPCsbtAODTj8qoOIOvKbO4myQUKiM
Ws3vAaGVAUtcU7Lh+YUt71aO9YDB+/CKxsvZYCCyMUbiSC/wTkr9+bglGyZ8
JmQLjvVCqOy/lQGa2VD4hswys+0FoeejsqLq2SBf6MaKcqbigRteaCtlw7R1
5gexoF4wuLaR/2BpNlRmKOxd9JTirmu6tK808BL/Tj7Npeb7sjsthmigEsC1
PFhMxT3/k5p+R4PYwyfPXWdTfN5wn+0bGviOJj0QfknVY/AqUrGOBuon3OUz
OiiWECLa+DTor931bH8PNX6Udz+6igYWCR3cfz9R9dy91z6PQQORedmHlL5T
XPLZDMtoQH2IveL9oOaXeVhcLaKB/+uDp5wmqXr6dvfo5dHg//9vB6H/978d
/g/KiXe4
         "]]}, Annotation[#, "Charting`Private`Tag$1022747#5"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1022747#6"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
7+0Zn5IB///7DIR3/d/vM/A/OCZ0Hg==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1022747#7"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
L/cfd53B9l6X0KdPh///fxiw7f73/zD4PxqJTL4=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1022747#8"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\) (V)\"", TraditionalForm], 
      
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {583.0006713867188, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\) \
at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\), fixed \
intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\)=\\!\\(\\*SuperscriptBox[\\(0.1\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", TraditionalForm], 
    PlotRange -> {{-0.49999997959183673`, 0.49999997959183673`}, {-0.5, 0.5}},
     PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(g\\)]\\)*\\!\\(\\*SubscriptBox[\\(v\\), \\(s\\)]\\) slope limit\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.0001V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.005V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.1V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.15V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.2V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+Jz+XbtZZFvHQ2ur1oJor8VPtvUDaTLbSpV+oD0h5sS
xiD6tOC3XSA6ZaFbnXT0W0eX90dbQLQxd/dUEH2kbeUcEJ3b17kBRGfPDdkJ
on1q466C6DvfvtwD0WFb3zwH0RnXRexkgfTtOGtOQyCdI2YhC6IXvBE1A9F+
tXYeINrpQUgciNY586YWRItUfRXyBdJ2xTtVQXTdDJMdkUBaj/HKPRC9T2Xt
dxA9ddVk5ygg3VQyfx6I/rPGfRuIvjjlxH0QnWAdLxcNpNOWZe2KAdIzZml/
A9HrSpcpxgLpiqxbhiBa3EPvVByQNle7u7QISAMAoDiU0A==
  "],
 CellLabel->"Out[20]=",ExpressionUUID->"f48191e8-ef5d-48cf-bf97-5d0168a9099c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        Dashing[{Small, Small}], 
        LineBox[{{-8.213417438727906*^14, -0.5}, {-6.888459762691012*^14, \
-0.41934187651357807`}, {-5.3094229977475606`*^14, -0.3232164344108805}, \
{-3.836333791413285*^14, -0.23354065588607512`}, {-2.2391990228443428`*^14, \
-0.1363134797146722}, {-7.48011812884577*^13, -0.04553596712116151}, {
         7.138922120806267*^13, 0.04345890230262023}, {2.299841799280497*^14, 
         0.1400051693729995}, {3.779843827871191*^14, 0.2301017728654866}, {
         5.383891418696552*^14, 0.3277497740045713}, {6.958655824527351*^14, 
         0.42361513197392703`}, {8.213417438727908*^14, 0.5}}]}, 
       Annotation[#, "Charting`Private`Tag$1516380#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmHk0FVzUhy/uvcbM85B5piSFUgcnZEgSGVN5I1NIpgqlV1EqtwhJ5UVm
Zcqcczlk5prnsZSiQoWMn299319nPevZv33OWmftf7aks4+lCz2BQPCgIxD+
96ze7h2QLFTCumI3lzczM9E0y6uBhbwdLvSQb87NRMz87gMoSwkTLHRjn77N
RGdUNvvPpijhWx58u9XLMtGirWz/s5gd3+3Ddf1DJpIrCujl8t7Jx91aNZjJ
RJSL/F10yjv1TwuUuqWz0D/NNi1T6YqYynb81WR6FtKYi/Dguq2AdcmTHNa0
bHSFypB8108eT36gtSgw5KI3SkZuJ93ksO7FMfnzJ/IQ/3eN6UgjWZzyM/Jo
51A++urs/510SAYT4oxjmwPeoi9qThm/+KQxraq/xOJdAZqJZVvTWJHElB5C
8/62QmSewzZRNSeBJfgDVtR+F6GGfd4fL8aK4xSdgNqzLiWoIcBVeSxADBOS
kkDc8jsUdsMx+/HlHT43Pqu1+Q4dDLeUN3QRw7plM++nGEpRxoOj0m+txHBK
4aN1wFWK7qbxi4TvF8MSq7lae1VKkWHXBxbZRVFscTn70qhzKfqgIv/Ny0sU
pyzFH6L07PDHL1kbziK4ICFo7BIuQ7o6pukbdiJ4QeLyxkxrGaqIe/Nqw2KH
2dr9PHrLUJ5BQPzGURFMeHL937szZehxJn3EhrAI9o1dIbMxlSNHT7FzG93C
WC060fK0eTlaXLLk29AXxgtF4Q9YJ8uRKH1N+LqUELbIVxriF65E+2Zzs58K
C+HZqzEh1dKVyLDjWddebiF8fsYk3V21EvkkBUhepBPCvrOtr4d1K1Gdumpt
24QgVjv3X5CgWyW69E8y4WWyIE7UWqplLa9ERfXXb+ryC+JbvzXGBJyqUGOO
W+bwLkGslVV3qNatCo1SznT6kwRxisiWy9WrVYh0Vl08+7cAPl6be3opqgrZ
/vlaw9UjgBeIbT0OJVVoS9ZuazpGACvEpv74wlaNjCM1Q+8wC2DqARR3pKEa
SVCfSHkSBHBBwyqDYHc1Wl793mixwo85bzEUb41Xo1SPdG7RGX4s6Kgosrha
jdZOcGUVUXe8Vpecl+p7lMM71z0RxI+jGB1OtCW+RyypLxUOfebDg72bPI3X
atDk8N928TE+fDw4odciqgaV8lhfJfXyYbU2ePNrfA1yvsNaQ6vlw7OMdn+M
SmpQpVvw6Usv+LBuQZNU9c8a5LHXMizOim/nfxwPJ7oj1FpN6v1Rx4sX5g7C
RQ0qMhHW5N+u4MVWkte2BY5QUVOQmy1HIS+2+LqZamRARfXqraN7X/HiLOm1
8VprKqrOosz43uDFbmcqvksHUVFenMjK0n5eHPKNhSm/iooeeO0TXknnwRvG
CsmnzGoRS4uzI2MyD66/lSpYZl2LouTjXgrE8uAQ9ck2+XO1KGJ6WUornAdT
w2I0lP1qUYhttfK1szxYYaA1oDqxFl0+ZnRknY8HS4ysHhWbrUXmomfPb9/l
xo7aDpn3KXXIjVGoMzuMG9PYl2lNSXUofKn3iFUgNy4JTn3K87oOlTSZiWS7
cONR/5M2nRV1SChAp9/yGDc+9rX85fTHOvSpXcQsg27Hv2B2ohzC6PrNYc0T
IVw4L+Q3aXQJoziP+IyVq1yYdmB6aGYLo3xrS75UTy5MMdRQJbDWo0nllqVl
ey68cCj+m6t0PTIYrMhP0ebCFpWDTHTW9Yhz3zPp38ucWLAybCy6qh5lTttw
PL/Cict73vLoJDSg2xLh6xQ3TsybnaT9KaMBOTrlfLl7jhMPrpMbM0obEPfw
BvI7wYm9JL+ZhPQ3oNCu/3xNFDkxcaD0vysCH9DrWwNpv2o5sO3riFudLz8g
+w3FkIm3HPgY4Jo9VvABcQaHWLW+4MAFTKflh2s/oOs+kqS0axz4ycfxWpeZ
D8jCydPVch8HXv5t+4ltTyPaOLytUJjCjnm1g59uNjSiorJTdC8esWO36ONS
6UON6NL+9KGoEHYspxfTeeV7I+pWMr5/3pYdq9G1F0XwNaEsodg5Dk52nH53
t2XipSZktSL3xvvmLiyc+Ftsm6cZ5RaZ71dxYsOcv42FBp60oETj0otmJ9jw
Gteo85+cFhQxKRbvpcOG95gFapriFuTI/n01T5gNp35uVv3vdwti84iuUR1g
xQtVHHZc9q3IW7LJeK8FK04KmfJfVGtD9uV7b5wErFir08mHeKINGZ5MyPPZ
w4rts08MnHdvQ7tDXTkK2FixeZrx0/XUNtQ5SOxTa2bBtkP9aFqoHalR9M6r
67PgwdPJeosCHUhUPvux5T4W3FF6VNxJuwMx1XBiPwkW7MTVtKHm0IEm5yZk
i7eYcV61jxx3Sgd6bBQ2t7+KGTOtWR1g3tuJwsZnRK1ymHHwHOXh/OlO5BFw
wtz/GTNOvZKmaXqtE+mniRaWBDHj3tv3DkU2dKKlrcrAAxrM2Ckk6KSqOg2N
P5XKspZmxrwvnfZVG9JQi8r9oQBuZmx/q8AmwYGG0uztdEoXmPD3vtuOh+/S
kFXpCp1mPhNWTbjUHjZBQ+8uazzUkmPC5ZJs1ffSu5BMTmDFTx4mrBFlcv5y
bRd68rl8JoOOCccHTnTOjnch33NHjvKNMeKS6bXSWpFupHLK8OdiLCOuZg7+
3P2iGz1/GCWSHc6IZayssDG1e2e+W4zO+zDiZC/B8eSP3eiL/smUDhNGfOuX
/iiTag9K1bA9lUvHiBmPyzI8betBXFeSQp1/knGHOD3z3ZUedCt/NFtojIxL
WY3rRqR7kZPcBfqocjLWv2P4SSq8F7U7p+0BGWSsSYmQtirqRTqvZuyXY8m4
MatcxXOmFwkJehRf9CFj9a9WDxks+1CUVd6EyFkyzts4k/07ug8tU36w9piQ
8arDvtU3TX3IpV1N674WGS9ZgEeRTP2ol/nqRT25nft+xtydMe1H0PAdZZWH
jB/Ffek3iu1HRbdXqt/SkfHRKNXOExP9iLJ+g2/3GAmbJLWIlkcNoG3NGr2+
FhIeJNKOPp8dQN7+BO8H5SRMLcwZCbEcRKMF+kkwg4SLV13awpoHken3iA9r
sSS8QT+33W05hCoVG5cKw0m4/O+e53arQ0jBlVnc3YeEu/fcfqPRPYwSUk1N
Jc6S8EC10+o/iqOIPPEwaMCEhHsTZe/qqI2iABFa2iMtEl7zvbFy/e8I+mTD
TTOQI+Hl3sLR4LoRdDrOamODh4QJ8x8vrT4eQXW0eIUSOhKeiv9P5InLCNq3
a8jK8ycR3zZl9GfSGUEpxiLhUmNEPF8V6p/CO4JC614NUcqJ2Dff4+a1lmE0
vzVFOp5BxDUJ4m4qmcPI/rCM+nYsEfOIp261RwwjrZKs+5d9iLgucqLaQX8Y
/X5deNhEjojfyS+GWdQPIY97+AVDHAM+btp3PXloEClyFDFw3mbAj5zgiW/v
B9FsXIq7qC8DvlpqFOyeOohcU0IPHDBjwBdejhv/8BxEF8o0212JDHjLoKG4
jzCIbGdyN5r96fH6qdbj99UGkIFenAPFmg5rHTunZZTSh/SWmtUP7dmqo4UE
E1F6N2K6nFTyrONP3cVL+o/z0luQseUNo+/+X+tYjgkYd3LXoMv0lQEE+q66
aT5vl2cp6Sh3+6eJ62Ga/ouWofhremngYJh8rqfsN/3Ywxl/w1oRWJoee+gS
8kf/Afga/R9sAVcN+gYTkrb0RYHAruK5buBIydrjWrOln+xsLX6GoQcYjtyI
0Jje0u+cD/8jLtwDhK9IqXUpbusLlk+aPTLuAXXJPpEsFdv6/ZKFwoGZPYB5
jfi8xpMAe+x6uqFLL7A79cp433066OWqHG492wc6lqP8BZPpYEN3Ed8moR/A
ZL9X2/l08MK5JPV6oX6g+sXgT3sXHXzg/txfy7QfpD7YK/HuIx2kHedIkr3Y
DwTUhUyT/9DBs0YWESyh/YAudD7FQ4gefkvxblJ+2w8CpfpbTynTw9z7tvYX
m/rBXCNa1jpCD59MRQYmTfWD85ezJSVO0sMrYwdnV9f6QR93rBnjBXr4s1Qq
3ZV3AJiUhwT98KOHznSM3h9VBwA665raF0EPb3s2PQ4xGgAaDBbt1fH00Cus
SF35wgDIztJeTcuih4elrn6a28nvNpeWjq7ceU+R9+JA3ACI/cVm7tdGD83V
g0p73gwApmfLwXbj9FD1VyzbQtMACD06maa7QA+/7zO/qvRxACx9bO6Qp2eA
xJp0ltubA+DSveK/7LwMcDxOm21TYBCc6r17ckyTAbbMH2OxOzEIPlzzvV5v
zAAfu9HO6boNgsPi9q9zHRignK2mwal/B4Gsh+r6tZsMUEhRTG6xYhD83e7J
4G9kgEba64UUxSGgdT8ruHmAATpajsPdx4ZAIG+oScgsAzS8xBz92WkILCnI
/ZhiJsLqs4F9mk+HwPyp4AP5ZkRoQDd0+CZpGCiNmjGeP0uEW+foT92UGgZu
rpJD3N5EGJS59nkJDIOZ6y0hwTFEyNCXUeUVMgzG00TrYTcR+k5OpNNvDQPR
PYtPl6eJcDjuuOqmxAiwL2+4lP2LCPNSCzMDDEZAon6StiORBPOI/9p3e46A
gTZvVg4+ElSOeOD4Jm4E8NvAsVpZEmQp5mBlqh0BVlMCb/0PkqCL74Z70dII
eOI5f0veiASjWX0MKKqjgPaHajlsQ4J6G1qRRudGAfutpzIP3UhQZ6pLVBqM
ADMWj2VwjQTXEzRW2k8Pg/txR5uW7pFgUaSXlUL2EGjezZP0OokEWyuqKuR3
DwGm7C+etrkkaFvWdWQ0YxAY7q8+wlq90/+k4AG7I4Mg4j2Fo6aNBB90WDIo
jw+AOiOXKd8xEtSyWAkUihwAhG7tYukfJGi993nei4MD4Kgj+53+LRJc3B0t
+2KuH1T5linoSJDhx3Qxph/O/WBtLXrthxoZ+nqlNwvJ9AOtO+fb/tMjwzie
UEunnfkqecbsy/gPGV7vlE/4EtwHlqTH9SqvkmFbiTV91rE+oPamiOdyBBna
/zSTusrdB/LrHMq6X5Ph/T35D0OLe0HGXP7Wi1ky3Krv/YkZe8GngNs0i79k
uP7xfgbTZA+QItikMrAwwmVaTJ9nRQ94xUswdFdmhAk27l9NfHpA4hHLhxre
jDDvR0DJl5lu0N8od+5LGCO04BntftTQDfgs19WSYhjhfXIjz8/X3eCJa3rv
dgEjHC1WDa5w6wbRMcsirb8YIbmXxzfnTxcw9F9Y+kxigkdfkaIJg12A3u5b
M70gE5RuD7u8UNkFrkuNBx3SYYKCpoVTEbe7gNu7hp7sCCb4g7fHeVagC8gk
oZyGeCZ4cyXG88oWDUyEVYRPZTHBPbdDYz1naODM8fy9Qu1McGhPGCG9hAaO
jcRFR/ExQ9sbyYcbbGiAQH3knC7PDCsKVWMC9GigKj1Km6rNDF+8/1cgVJkG
1L1DvqycZYa+Lf8mRRJoQJLuIryUwQzlzrI1PnHsBFty+9cNNFngeT3L31Gq
HaCSVbX7gjEL9HY4Qd/L3AECFuSyQx1YoMppkRHK53YwXyFs8+4mC2yJvudu
/V87GDGjL5ZpYoERGdbeDSLtoNyvy4PBjhWGJO8lOUm1Ab8an2HqdTY4/A69
vubRAlYirWyzotlg1NWhH1OWLSDklHZ/TDIbJCgV4bDDLeDuJ/pupxo2eEus
vNNyVwt4xhLfvEG3C0YxnXtnXtwMqGeqy7Xu7YLq30S3/zA2A46fTAkFCeyQ
cq87p7azEcSVf+dNzGKHUmlrP/zeNwLB291PblawQ/6TtlSD3EYgxZf8yHyE
HSrBexfMIxvBwcN7787v5oBaNqbuk7qNwCnSOkAhgwNauK5Tiys+gH6OLkUL
e07YlpS33YwawMLJ76bPnDmhzHZH9fHCBsBKYfae9uCEgvW+PWOpDUCXU7/I
/wYnDLkoJ2NytwHkcBYfepbMCVOOKsrImjeAUK6nptPjnLAptb3l3VQ9kOGx
u+z/DxdUiI2oWOCvB0dPB8S89+SChCxH5UGWemAX+7iQ7M8FfeeecdK2MHjE
0/InMYIL5pnYpix8xmCV53DY+9dc0C37++hCGQatvGIx5Fku2Haf+G+nIwZ+
/FMFiV7ccPWW/h2FwjrQykCxjg/ghroT5WVbr+uAzOLRtdgwbiijcqr0Y1Id
6G9NhjEUbngxRyphKKIOHA637b9Twg2bPlcEXbGrA8T5znW/DW7Iq7vfR5NU
B+JrawxPPOCBRM0zBQ6uteDnm8tzJk95oI6nXXGPYy04nixKOf6SBwo69Una
nK4Fa4HXh2ABD7RI9py9qVsLzqkc9DrUywMpEkNVZ0RqgUJC/mN5UV6YPPWP
NmMPFVR4JY/S5fHCDTfR4HljKghso1q5lPDCT8sFFlr6VKChMtPWVM0LZ9WN
WB4cooKCOdX3Me280Cvu9byJMhVkeqAXYj95oZXmL2bZXVTw1G3aSVudDy4U
pDfeTEfgykWFKd9yPtjkYrMZhmuAomPJzEQ9P4yy+VrnKP8eyLl7Tq6088Pz
4qJmGsLvgVSg1AjHAD/U5coLEtz1HghTKDTwlR8mti66kX9VA7Z6r6pXuwTg
oJ1raiCqBgvKso/PnRGAx92GLybaV4PS9ac6E18EoMKHTVu3Z1Xg2POg2HEW
IXic7H9k/EAleC2cfsGRRwj6KseMsatUAnISbe+wiBBcZYYHjKQqQVOiYluf
yg7n2M50sFcCs/gRYru5ECSME/W0ZyuA9WMQWPVECEr8SZ68klwBXCMZ7RKF
haHam98ZB1gqQNTVhN2WSiLQwtT0r8nfMqDX8f3ka3URqNt48IzFYhlYUzgW
vnpIBPoWyOg4fC0DXuMLH1+aisCFFqHo8KEyYGFskj3nJQIL7IZiOCrLgJD4
5v47b0UgNfatjEpIGchpcTYu1xCFC4qWb3WJZaBVco//biAGCeRdLRVSpaBC
3NebNVwcUo6mrWxeKQFuDoxpBzskICF+RNBMoBi0mKtMBS1JQguqU6N4VyFQ
zn8Q4cIlDSl0+7mvVRQASdvn8bvEZOAkf8DXxvS3YD5ne80AyEIJO7kbrTP5
wMyEu0PLXA7q/mUzDvLJA3lW58mDNvKQSvtSOiGVC6bIxMeMwQqQar2Hce9I
Nsglnbm/GKEIdfeqpHnUZ4E4ugemqfcUIfXJsWaMskDIZi3b6UeKkPD3UvHu
qixg9kc1piRBEd5ypHYOFWaBH59IcUE5O54viM3lVRZQq3/3YrNzhz/9W9px
PQuU3OYrZBZRgrfOcv39op4FksNM/SrFlaCucHhZ0J4sEHE9fL+nzA43Lwoz
K2UBa7/v79pUlSAhWLZdTTILLF9oqIzR3eGbig2xHFlASy+gns9VCVKHb2pl
zmcCiSO5dz547PT3qx6ymM0ETNpThkE+O/WXI7k2PmaCIbUTzYPBO94d6tmM
ZILrErIdz6N3vF5vlERLJnAWdYgxo+zcz0H40N+QCUwEH1tsxu3wIvXJo9pM
IMK52e30cicf83iAviITENn2x3Gk7eSLvp1AJZlgntHdmpq5w+88LUILMkEv
wyv+K3k7+clD4zp5meD/99GQ8H/7aPA/2VoQyw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1516380#2"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmHk0FUzcxy/uvVz7viv7mggVwsiUsiSJUFIJCUUiEqJHpeXJFbKkEuHa
npDsmcuQnWu7NxVpUQqFEmV77/ue9685n/P5fX8zc+bMmXNGySvIyYeTQCC4
cxAI/zs2rA+xlMq1saXC5d+rBQXoA+8j1mwJm8v9NTqKCxBF8jQL0bQxwdEy
OfVpATq0aZV5NFsbx/pLbDCoLkBzbmrMjES2HwgSiXxZgNQrwoZEzrLzKbFL
uycKENVbsp9Dh12fWqY9oEJDJztcO98/0cJ0/r2Pxp/QkNFUvL/IFU1sSR4X
cmEUonN0rqxrIRp4/CWjU5OrGP2nvcdvv586tvQe1Ti+rwRJzhh9uL5HDWf/
uG7RN1KKvnqFzpBMVTEhxSa5I+wp+qLvmf9TQgUz6pmVjs/L0EQy/1+jRSVM
HSR0GHaXI4ci/nf1U4pYUTJsUf9XBWrdcvajd/JGnG0W1nTUpxK1hvnqjIYp
YEJmJkj5/RzFXPIoTDrD5mNjk8arz9G2OCcNax8FbFk98eI9VxXKv22h8tRZ
AWeX31kGIlXoWq6kXJyhAlZcKjbW21SFrPtf8qrNyWPHM4Wn3npVoZebNL4F
Bsrj7Pl7ptRBNn/8QlvxksNlaeGjp3A1sjSze7LiLodnFc+sTHRVo9qU/x6t
OLKZvyfEf6galewOu7diIYcJdyP/uTZRjZIKOONXZOVwcPIimZ+nBnkEKBxb
GZDF+rfSnQ461KC5eSeJFStZPFsRd5tvvAbJczbGLSvLYMdS7RFJ2Tq0ZbK4
MFVWBk+eT4xqUKlD1r0Z/XqiMvj4hO2T07p1KCgzTMmbQwYHT3blvbasQ80G
uk3d76Sx/rHH4dJ+dejUySzCwyxpnG4838RXU4cqWiIvW0pK49hfRqNSnvWo
rciv4LWANDamNZs2+dWjt9RDfaEkaZwtt+Zz/nw9Ih012Fj4SwrvbSo+OJ9Q
j9wWvjaKDErhWWL34JHKerSm5r72IVEKaybnfP/C34Bsrm+PvkqRwvStKMW8
tQEp0u8qBxCkcFnrEpf0QAP6vTTT5rgoiYVjuZ6tjTWgHP8novITkljaQ0tu
bqkB/d0nQqugs71xv3qg7gtUJD418C5cEidwH9nXnf4C8eY81DT9LIFfDa2K
tV1sROOv//RsHJXAeyPShhwTGlGVmMt50pAE1u+Gl7/ea0ReV/kaGU0SeJLb
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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1516380#3"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
Iw==
         "]]}, Annotation[#, "Charting`Private`Tag$1516380#4"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
wY3vLUpY4P/v26HA/923g/8BBq+T7A==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1516380#5"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwtmXk4lF3YwGesY5sZa6QyKCFFsrU5XkdEKkSWeiVt2pAoCakoRUgqFVFZ
xlb2ZWaeOcxJCZW8RRtKkcq+777nu77vr7l+173Ofe77Pte5HnVvP6dDQhQK
5QqVQvnfX97C+1b1Il1MmVolM5qdjTol01oH83VxxIsvyigvG0koHW1FbF1c
rTLgGfMsG+3Wm2v5N52U8zJSVlZkoyG3FS334nWxhRNrwPdFNtIqDnov60vq
924MXt+VjRIOKr2jriL1HcN9BZpsdOCVa/33DB1cXTDf+jKDjYz+Rh6TvaSN
q70ZLopNOehUtXDKlYCVuLpm/+hNoTz0VNfGZ6ePFk7/OdkqZZ+PlPqMOq/a
rMBePWHKpS0F6Ld3YJ/ohuU4nfqap+n3DP0y8MwaUdTEhVdFrkwXFKKuW9LT
RhPqOF3brpvPK0I7cqU7uH9ZuLBZ7yGjpRjVrvX9cfCWGk7/If98VrsU1QYd
XtUWtBRb6Fz2HIsqQy9+/GLPeqtif/v7MHKyHC0R4l+c0VDB32yNjMofVyLb
q6ZhURKLMOVDKn3OlINY1YkaxymLcHBq/ESdOQeNT/a9dJhQwgkNdXdubeGg
x8cy5JZ0KWE2o+Lt8l0cNL1dll1crYQt/nshbeLLQbkKf5s7ziphpqRcmGQG
B0k+fqi9oVsRJ98t2LeazkUNPNH3/QIFXPggZiz7ExfZLTZVWqhSwE3Sc3fY
HVxUd9bHjVGkgL22vRrM6OKi54YNX/XTFPBgrtGthCEu4rETuvzPK2Cfz8sm
1krwUH6S6sTwOgXsvyxAMcGUh2JPrF08kSGPP74bNrdP4CHJeu+94inyuOnM
8zVZt3koemXSw0W35LHDuYdtU/d5KLJzXMPsojymaf1aF5fJQ6FuvFXn/pXH
W0Ub2304PHTSymbzjKI8NvDqaWzp5KEdS/71Wrgih90mAiWU1hDIR1zlbU64
HK5LvDtrZkigi8PvNzufkcPssKTLziYEKq2zV805JIdpSn9kgswJpBK0qcXJ
Sg6zel7t9thBoJ+vVe2zqHK40HhZVvYJAs1XtnIcpmQxpe6hs70/gRZl3NKZ
GZTFdf2hST2nCWQXIiXu8E0W0/QZV8TPE+iZ1kzNFF8Wp9tYebZFEyjkwmfT
7aGy2Gd0y+rPjwmUdOxO1sRpUt63adFgJoEKXJwUHx+XxcpleZGzbAJ9W1U/
PO4hiyeRSubkUwJt+VhVkL5eFrPy9imHcgjkiYOWbFsri5uML2ywIggU/HRt
zJg2mc+9yy5C1QTKjczxsVOWxcGGTgZetQRirr2nOTrOxBT29I30twTSXeKS
+LCfiS3O+cYqNRMIistSbbuZOLnZcOLiewKdaYtuT/3AxF7/bBwx+0Sgr9eC
79mUMnGh4rNzyzsJNB5oRBvOY2Kz+frf8CeBGF6DZ1KekPrUGVO3bgJZmvg4
DyUyccQsY+W+PwTK7nRlPDjFxHW7nDx+DhHoEuviTIIPE/d82nT5zQiB9nrm
/rqyj4mVG2d6cscIJPd5FgVsJ+27xBkbpgjUt0gr38eKzLfK6VHvNIHqXHYm
e25k4vSpkwo3ZwkU9u6Rv50OEzOLeyyeLRDIjdGw14LFxCxt3UZtKh8Zbh/d
arKIidmllK+3hPiop85aXUOU1L+0aLW5KB9FyXxbbDDJwJMD2hZhYny04Zrh
iGo3A2tfDjhfIM5HmRGtT0ZqGNjAzpr+XYKPPGZ1QjuekfLFKaY/JfmIGRzq
3JDKwCyqQO+jFB/VjrzRq4gh5aMPW3jSfBTipy765BwDU2iqyxJl+Mjg7+m2
uCMM7NOk1utK56Ouwy/KQlzI+NXJOnQGH93vVI47DMl4N06jUpIdPI8fdlrL
wNHX0+9sY/KR2GfC3FyN9C8nn9xMMteFuUhXhvT3sybfVpaP/N95DyjO0HFC
TDZRSLLW9rKX1N90zKwRlIjL8dHXOvH0vhY6Vn6nFLyD5JtWHsGfnpNyav5I
JMnW1fkOtcV0PDgaz8gjeXbjgnZROulPqaW0muTiCkdqahzJs3cba0k+si7j
U3QoHZs1jwEOyUuejRcFHiO5WmkyleRmXdvrXm50rO2i0+5PcnTWA297azLe
4IEvhiRv1ujfYGZEx8E6op9+kPkOp1rIL9egYxZwrr5MMlvl1l8Gk8w3/FGI
HMmet7vwzJwMrntmPRRP/n95WbOUX39lMCsqW2aWrFdd7PXA/z7JYIqIYdVu
ksNpbfboJcmjnm1pZL2NIvVX5JXJYOVHxQdayfP4vXBx7s4TGcyc5BrPkefl
PKH11PeCDDZLO35AnjxPydPnrniclME98n6JwuR5o/4GT+s9Mpj29EfJdxof
6Xb7M5aZyuBkS7+gI2T/fNuPf0msIP1zHX/Tyf663aZYPSZH5me6eeKJMB9R
PnD8X/dL429WvtfuUPio3EHGtuqrNA5unvk+Mk+g44371DPrpXEv0AwznyNQ
CxZpDs2SxicOxCx/QM5DXvGOdXqe0ljBu+mrHzlPybblB+23S+Of+pzEPQME
ivy29M6JTdJ41k5ov0kfOV/0vsn8xdK4OltNqKqHQNLHYvirW6XwwQb7kMF2
Ak1SRga2v5DCzz+fU9r1ldx/dz3UfcukcJL3I5hBzj9RqxP59JYUZr64QJcj
94Ovep2tvoMULj1Ou69SRyCPSv3zO4EUHi1VHup/TiDrnXfz/daQ7Oi5u7iG
QMvCDjMKpaWwwUKOlDCXQG8/inwweCWJfey6D9fnE8gg4R8vQ0tJXGfHdv0R
S6AlK3NuOq2VxJH5J6wSyf1J4zNxAEsS2/fb262JJPfj344VJfMSmNcbfGQ1
uW9v2oT/XceVwAaOVDdrHwINz3POGBtJ4BTP2cEWcr+339Zgu2hK4ISXVh0O
6wlUr3f9U5CcBNYbLZKqWEegJx7um8oHadhszrrXRptAzuUTVNMCGq784u4f
wiRQ2UmjG2ZaNOxz6AJduY2HlueeqRqQp+El+yYM+B94KLG7siuLSuqvpUH7
Nzzkv2+zuWKbOD64czWFhXhIz9F6YOiWOI7e/cs/I42HHhu5OeZRxfG3Q2aH
lPbykOyp+2HeA2I4qV4/xXgXD0UUfM1RaRPDbtNPhTbZ8ZCn1n6h6Eox/NU7
0HievE9VlI+VHPQTw9IBR1mucjyUMHNecVmbKDbSO2u8S8BFC6b8fz7Ui2KW
+hXG9wou8g2k+MZWimKaulG8SwEXbeuLfDF9i9T/9Org8F0uEuu4cbbVThQv
uWfLnT7ORWGCtE8JlSLYyKPwxD8MLjp2DacKJwnjwCMXReMsOUiHUSzMvCSM
l8xdGllpzEE9SelHl/gL40lbEfmclRx0OD3M2NheGCvsX//HS5qD9leYvj4s
IoybqExW9vsq5NaVN/sqUAg37rmWGu9Vhbb8k7QnwYWKtUPLj/YeqkQiLy/V
pEAqzuBsTwlwqUQC+1Mrc9ZScW9TXOw3q0pk4bZjpEaGii3w3RenNSvRJj9a
zEgtBVtteZ0Q3FGB1qWGcnabULCPXn6p8K4K9M/wK8MNa+YFTnXlmie1y5Ge
0btCrvS8wKd8cPd2pXKkfObjms1/5wQp3mdyVETKUf9Ut64Fe04w3Or/9UxH
GbpPFdG01pgTiC0taba6XYaGmebyTkqzgm4HtvmGuVKUoV88cnR+SkDPjz/Q
yy9BtJP3S++9GRP0u2SNdUkXocmp3dq2uWOC9qi0CvfRQvT7inzKZNSYgA23
f+F8KUT16bGXXTePCSL6VhZsyS1Ese/DnRTzRwUO31ptIqwLEWPTgcGEayOC
58HKrhYTT5GSlJ5etNWQwMc9dz6uOA/ZOp236Qv8LfgYP/D+Z1MGOinECaII
vRNsklys0uMdi/IWBuwOb2yyDDk2c1NIJQaYhK/MO77ij+XybQFfdnhkApe3
v7WrfP5YUpREMhPiMkEgKz9LLP+PJa1F7yshyARFAoPHjwz/Whq58V9/0s0C
euIb7rWCXkvBufq9ctNZQD3B/ir06Lc8nH87eE8SG4i9qyy6YTNkaV/4cGKu
PA8Md7bdOBQ6ZjkctIy64UMhCK2WcG1PH7NMXo9FpvoKgdhDY5Zr7Zhl0pCn
TaZYEVjsfqN4K33c8o36ac1a0yJg+XZT66r0ccvAf+MD1e4VgUTuA9YwnrBM
iBJu13YrBoZJ7iXhUtOWD50HGn+/KAG8U1GhE/rTlj2Kp8Q12kqA9c6iLf7O
05b+yq33rEZKgIekxMf9qdOW+UU+gVvVSsGliMpZK/0ZS5aq5+utZ0pB84lF
1lK7Zi0XC6XRVVll4PSWDx/v3p+37D6Q0HLVuxzsTWCvOcyftzToPno/Nqgc
WH85H2nUOW95pkZtf0h0OVh8SsPgnc6CJc/7bA3zaTkQpPhdlaxasEye992/
crIcSEyLPOAfp8D3ne2Hhq5WAHfHNNu116nQIJyeVXC7ErwZjw5UTqHCyUNH
cniZlQCmBKQtFFDh14qkIyVllWD1ry1jr99RoTPzzZTrh0pADetNP6YiBBOS
OS9D5atADnv95BO2EFRGDs4GMVVgauG/LKWXwjA5LH3LCh8OMLvODn7VKgxL
X+nMwEAOOKMQZhfaIwwPGvWbbY/ggGFtrf7vEiIwybRqh1oyB/Q6BhsX2IvA
UeGXEzUvOKD9yZLnsFkEhj697y/E4oIla4Zuj3eKwLpXhob1ulzgUVl7JGdE
BFJ+vL0daswFrY2+UgxFUWi04cDOR3Zc0DRW7fTZVRQmZer8/XOaCwQ2h777
t4lCkWzrrZcEXEBpXl+i2S8K3d5FD401cIH5XnpUy7wo/KjQHuH8gQu4/hXa
m1hisNTU26f5FxeU3pPwFz8gBiujJ6nNUjyQ9bdgPrVHDGaESfR17eSBn0GX
mhymxOCsRc9SKTce0KC4PhaWFIeh6Y2nVb14IE2BYn10lTjU7nM2nffjgeTN
TjeMfMXhJjMT2us4HoiJH1dtGBGHlIS+1Lt1PGAdODjcLUqDsQEapySaeEDI
/c8rIWUarBt/kHaglQdCNNrPbthEg87Jy+G7Lh7wKav9LyeSBpMUVrFuUQmw
/D7Krb1Dg5vGW2xsaQToCK+6+J1Ng0b2wut76ATYvbVAX+U1eZfkORZ/UyWA
1ZekmGhFCRh9I+QJYUQASnWcd8ZKCWi/7UkldwMBuBnR66vXS8DCvkTmEwsC
GPqG/pr4VwJqn4iqW21PAHXqQXgkSwImvShTM/YmwLzWupktppJQOu+6xuLr
BOBIrW7ebysJLT4HrS6NI0DQoFZO2B5JaLXzbozZLQL0Vi12LbsgCT/eiL1O
SSHAF3uhkuV1knBv0uC9+HwC3Fk7e83isyRMh/ZW4YUEcFIa99rbKwlnNXe2
upYSoL7jNz2JKQXr+t1EGrkEqAx4d0zYXQp+ve2RwnlFgEDXhn/UjktBlthY
vtBrAuhvqlXeGCYFlYVtoEkTAbJEq14EPCLZL9fRq4UA3n+KU+NKpOBzju3w
7k8EWPY2PzC3Vgoy93OPrv9KgNvJ6Rqdv6UgLc5GX/CdAA5h96fmZqRgb2tF
ls9PAkh7JzWp0KVhpVKmzUw3ASJXRYc7GpL88ol7118CBPD9PleHSMODqEH6
7SgBJq46u7FjpOHzLQZz5eMECHVc3xKfQrJ3oUncJAGu/BRq9uRLw58Zaxok
Zwkg9fTXTuu3pHzHYdvCOQIknG18vfqbNOwZWeW6ZYEA9yTvvJqlykCaznEf
cyE+WPY+xOannAxM97oe/1iYDx6n7qtt0JSB38wv3RgX4YN8A52a+1tkYKVc
k4uvOB+snZYBl3bLQIek1VaJND4ox8O8o0dkYM/aAMcsCT6o3s2rNLsmA7eW
bZBNk+KDLaxHJqz7MrCwe2nPZWk+qP8dVSqeJwPdVmVpucvwwc6SY4YDXNKe
UO1YRueD96E7C1sayfzAO80PJLtbG63ht8lApo+6eCiDD9oZKvmZ/TLwo6z/
A3kmHxz4NKdzY0EGsuJ1Rh6Q3PO4MzuQSYfB+wQsRVk+OHni5Yq96nT47Vu5
yQWSh43zn0BDOvSnxth8JvnsQoL6KkiHg8OvDmnJ8cFsXVCanDMdRreJZhwg
+WKix9Lpg3SondiqkEiy2F7w4HsQHdaB9voikq+vWK7y6godWmihjwKSGQO0
u4V36bDJboUj+T4BSZV9Csls0t/qGusqkpUvNSdeqCI5bGvjQ5JTt1Uwj9ST
9m+DRoNI1lBMidvxhQ4nHWnN5iRnt0dIm/TSodkVfHaKzFePfej60jk6TB/1
ncwkueiUHU2UzoDMrg+HrUg22ah/pXcZA7IVX354T9aDK6Ig8l6fAdNPK7i5
kmzxZvIi14LU/y+R0kjWs/Zu28JjRwaczFbpNCTZbr8g7Lo3AxaiS4xYsv5v
dbNnTp1mQIfpnAfkewU4j8acc49kQG3Rk/cUSfa86hKknUX6e2xlfJQ87x8O
G0YYFQxI0VCdCpfkA5/FaqcmXjJgZS0z5CrZH6cKek68+E3a2/2c9yf7afzM
6z8F0wxY3XxV20mMDzaz3EvrRZnwo90HDy1RPhD83mxYrMSEEV9Hl7PJfo3c
YTC0Qo0JaYzoThcqH9iUaBTeW8mEDp3Wo+NkfzeGiq+5aEbai3D2yZP938J4
p+PgwYRuNcsPV5DzM7izb9s9byacFK1LkBwj5yVBwrfzGBNGH72yzGmEABZM
y+LA80zYhJRy+QMEyGWWbLiXQsbPlPBn9BDgucPbvZ0ZTJggrPZYnJzfjoS/
4asKmLDQy+/56A8CKMguxwTBhGZuc2pPOwgQJnt7W2c7E/YM7FyaRu6PZMei
k6t+MeG3qA6uxXsCFN98HR84QMbzut3S+o4A3bJi78UostCrY7K2u5HcH3Jn
965Sl4UJIw2nrgnI/S3vfjLwgCz0Ye9mDOURwHxXUDxxXBY2mRteHWYTwP3W
zSKxQFlY9278xp9MAsTJ148lR8pCC9XXMfw0AkzKbwwnMmWhQTFbbTKRAA0K
S+PFemRhRJ2+RfVZcv8ofS9MPiEHLaI75pU2knLhBJc7QXIwIvw0KjIh4w+Z
T98Kl4PJIyV10JCsb0MKjE+Qg/7HTovs0CHAxotuLVGlcpC2MtFmTokAIr1v
ZwJm5SBr8fmx1kEeuFPDt94eKw8/bu9qoabxQNWJlK/UfAUYEZV2VPQ3F5xp
rHY+VKoADdZ0+x39wQVGel2NdTwFGE0+xV+1cUHh39VE/GsFWJmwrDO8mQuy
j6HUpQMKsJCahwguF9z26fRcb6gIt+7b4XT3BhecOqj93b9SEU7uixsS1+cC
nb2lXR3PlaDZfy/8lhznAKsHZ2+1S6pA1lhI1o/SShB9+u4yJ11VSGnSDItU
rwAN6msCl4GlsGnFzKeB3DJQpebvK3VRDVJc1J/bG5UCnz3iT0zesKDBkf5F
TePFoH6H3vezw+qQKdvQE1JTBFYVxEYektWE1Zr76NLFhUDd7cEdmaXLocVA
h0VS6jPQm7swvQWsgBES10xTOwuAvZ3cG7MdWuR9FLtL3Dcf5Dt7iX10XQmr
RX5+2KiRB76LidwUD9aGESkFhn2fc0Ce6O7rQ5E6MMJ7grHzORskUWO3Pb6m
A6tjvjxhIzYInauR3hWnAy0ataaFuWxgP7Y6vvSuDqSIzfxGRWzQ/1M06Wwu
af9xlmOfxgYGz8tS596S+gPYpiqEDUovKRZJqOpCC2i3p9WQDVLCtwVw1EjO
MPn3yBo2iAy5uO74cl0Y4b5EeEqHDVwC+soaV5PyO4am6upsML6/lhNvoQur
ofXKKAYbmP0T9FzxsC6k5C143u/NBqzNeVEvjpHyqEEjq55sQFv/3fqsHymv
Sksf+JENPhlsf/UxmPS/vdp425dsEMJa8eZBDCnf1m6uWJ8NvJfsibdPIBnf
zG2ozQZ2yjcd5pJI/UL1zMs12UCVOdfs+ZCUB52Ck5XZQER6XRLjCZmfXERX
aWk26BU/6lKdTfJTmvzpwmzwXjhN6VQ+qa9j1GCYnw3+/3sCtPi/7wngfwBF
1NLV
         "]]}, Annotation[#, "Charting`Private`Tag$1516380#6"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1516380#7"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
sjeZJdj9E6racg/pyHHKoDIHW+/ee/b8RjrqvBIbNIr367bQYkppMR1J1PL8
hvF+T16ZaeGYj9eHPHlbic2zTvR5nEVHLfJ6T4Kxr0rX8JX30BG3iPiM8PnR
yJ/ksms9HWWoyPMj8PkzS/q9Tc2XjniHh22p2PbsTzlnV9AR5aEW6zw+v8Gz
0NvnDnSUmNL/6ws+33VNSftd9PHnsymMW4zP/50qjuDlZDoqnJyYdx/Pi9c8
/4exSnRkESD4vQ5badM808ofBijAVu5EWBpBBox+btR+YoA46MebzXj+7Hj1
/GP1XQPk8vus8is8r1JvNmsuu2WA2PIN23ywq4+cCUo6j51ifG9eKj6v09dP
9Obg9Veju57heaersdx8b7oB6lbJOuaAbTFit8pgvwGSKDJ2FezD+6uRWuqx
0wCx3hYXeeB5ec6/ZdFFTwPkGBCdnJdEkCvTHfYeUjNAiS+ar57A85klOTZl
O8UA9fXtvNgQQ5A/fw3c8RnTR9238+d24nleFn5Ox+iDPurMn1ujjuf9uJe2
sE6C48vrNrrtIMgqvf7HbxP0kcVoaoQWft5wvZYlNu/URy0uYzt+hRKkf9oZ
4+qt+ojy5L+7bzYTpPyvdZz4NTg/3TazhI3316umPxrWuP7uR11D+HmmXlZq
4fSRhjiNXpXvfQmy++XvNtM3NEQsezXrmA9+PuiujVF6SkOJlMXvFnoT5OZD
kxrbb9LQ0KfDXQc88ffPSVyzrYSGMoqyWz8sw/PMevW+fD+c7/TG7ZsTQd67
rvR08JYeIsb0zqqwCNKd6aD/t0EPdYsDITAhyJYEToDWeT3kuNFpMNqIIJvm
3XttfVoPUW5WbXhAx/NLyPsQuUcPddoA77Xa+HmSbzg2YquHOBnE+TNyBJkd
MZc5dk4X2eSqvljZKCbV724OVCnWRRTOq2kXGsRkxoz8UoM8XeRzPfG37iUx
ebD35xTHFF3EbXKcdb1aTCYHXLfavQmvP5e6tAL/ftrhunyRlKaLuvng2JtI
MX6ebGL/TdNBrKLNu64zxSRHhfGwcp8O6r7vOj2Khn8/jTxd5Bevg/jpjZom
VDF5scXTsHKrDrKpd45kK4lJRpxzx2pXHcRNj6Snf6sl37cZelbI4Xo2Fez1
t2rJpP0vHbyStdHQufLCPyG1ZH54QcVYjDYi8q/oXNhYS4rWrqaVbddGNsED
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
GQ==
         "]]}, Annotation[#, "Charting`Private`Tag$1516380#8"]& ]}, {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
      "\"n (\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", 
       TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {658.5664367675781, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus carrier density difference n at varying disorder \
\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\), fixed intensity \
I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\)=\\!\\(\\*SuperscriptBox[\\(0.1\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\)\"", TraditionalForm], 
    PlotRange -> {{-3.756554153787358*^15, 3.756554153787358*^15}, {-0.5, 
     0.5}}, PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"e*\\!\\(\\*SubscriptBox[\\(v\\), \\(s\\)]\\) slope limit\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.0001V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.005V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.1V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.15V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.2V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+Jz+XbtZZFvHQ2ur1oJor8VPtvUDaTLbSpV+oD0h5sS
xiD6tOC3XSA6ZaFbnXT0W0eX90dbQLQxd/dUEH2kbeUcEJ3b17kBRGfPDdkJ
on1q466C6DvfvtwD0WFb3zwH0RnXRexkgfTtOGtOQyCdI2YhC6IXvBE1A9F+
tXYeINrpQUgciNY586YWRItUfRXyBdJ2xTtVQXTdDJMdkUBaj/HKPRC9T2Xt
dxA9ddVk5ygg3VQyfx6I/rPGfRuIvjjlxH0QnWAdLxcNpNOWZe2KAdIzZml/
A9HrSpcpxgLpiqxbhiBa3EPvVByQPtGuuq4ISAMAo0SVEw==
  "],
 CellLabel->"Out[21]=",ExpressionUUID->"53152ef5-886a-4570-a89c-13a23f305a60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide5", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{"c", " ", "vs", " ", 
            FractionBox["e", "c"], "\[Sigma]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.0001"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.005"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.01"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.05"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.1"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.15"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{
             RowBox[{
              FractionBox["e", "c"], "\[Sigma]"}], ",", "\[Delta]Vg", ",", 
             "0.2"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"0.5", "c"}], "e"]}], ",", 
           FractionBox[
            RowBox[{"0.5", "c"}], "e"], ",", 
           RowBox[{"dN", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"0.5", "c"}], "e"]}], ",", 
             FractionBox[
              RowBox[{"0.5", "c"}], "e"], ",", "500"}], "]"}]}], "}"}]}], 
        "]"}], "//", "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<n\>\"", ",", "\"\<e*vs slope limit\>\"", ",", "\"\<Vd=0.0001\>\"",
         ",", "\"\<Vd=0.005\>\"", ",", "\"\<Vd=0.01\>\"", ",", 
        "\"\<Vd=0.05\>\"", ",", "\"\<Vd=0.1\>\"", ",", "\"\<Vd=0.15\>\"", 
        ",", "\"\<Vd=0.2\>\""}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 5) Acoustoelectric \
current j_aec (A m^-1) versus carrier density difference n (m^-2) at varying \
disorder Vd (V), fixed intensity I~\[Delta]Vg^2=0.1^2 V^2.txt\>\"", ",", 
   "datSlide5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.941078995995062*^9, 3.941079080678685*^9}, {
   3.9410791136946907`*^9, 3.9410791141106853`*^9}, {3.941079287092457*^9, 
   3.941079473412817*^9}, {3.941079576267964*^9, 3.9410795771125526`*^9}, {
   3.941079640160954*^9, 3.94107964164008*^9}, {3.941079697309876*^9, 
   3.94107969944661*^9}, {3.941079993951294*^9, 3.941079994494081*^9}, {
   3.9410814220021544`*^9, 3.941081426311288*^9}, 3.9410824161863413`*^9, {
   3.941083639005808*^9, 3.941083642029213*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"0d6b6421-af2f-4ba9-8f16-73693316f400"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"7.890469583594676`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"8.488540677678553`*^-6\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1588660818655782`*^-11\\\"}]\\) for the integral and \
error estimates.\"", 2, 141, 66, 24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.941084003449759*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"d87c90ea-a3f4-4ed4-8e9b-6acd372ea4a3"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"7.890469583594676`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0015594752652694156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.1059581195766256`*^-7\\\"}]\\) for the integral and \
error estimates.\"", 2, 141, 67, 24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.941084003459453*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"406fb375-809e-40ce-9873-00f56bf49d49"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"7.011563333594678`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"8.017580625743856`*^-6\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"6.499284333825795`*^-11\\\"}]\\) for the integral and \
error estimates.\"", 2, 141, 68, 24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.941084003701151*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"6747b3c9-a903-4473-925e-306330e93ae7"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 141, 69, 24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.9410840037141113`*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"30a3c37e-6825-48ca-b188-0e3a6bc613b2"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 141, 70, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.941084004114237*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"6b68b066-d84a-48c1-b109-eb2fec4f1c0e"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 141, 71, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.9410840044695387`*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"3360744b-1d10-4946-a295-c1bb654a1f97"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 141, 72, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.941084004653097*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"1fef5ff3-7249-4a47-a89d-a35793c74850"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 141, 73, 24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941079118848215*^9, 3.941079554568516*^9, 
  3.941079661191429*^9, 3.9410840046610107`*^9},
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"a0472908-f8d1-4f17-bc2e-c5b12e314655"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 5) \
Acoustoelectric current j_aec (A m^-1) versus carrier density difference n \
(m^-2) at varying disorder Vd (V), fixed intensity I~\[Delta]Vg^2=0.1^2 \
V^2.txt\"\>"], "Output",
 CellChangeTimes->{3.9410791219739847`*^9, 3.941079557314205*^9, 
  3.941079663942328*^9, 3.941084054651383*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"6df079d3-4a9f-4cd6-8035-961aa2406b15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.1", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.3", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.3", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.5", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.5", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.7", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.7", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.9", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.9", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"1.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"1.1", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.9V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=1.1V\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"G", "[", 
           RowBox[{"0.1", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.3", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"G", "[", 
           RowBox[{"0.3", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.5", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"G", "[", 
           RowBox[{"0.5", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.7", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"G", "[", 
           RowBox[{"0.7", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"0.9", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"G", "[", 
           RowBox[{"0.9", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]], ",", 
        FractionBox[
         RowBox[{"F", "[", 
          RowBox[{"1.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"G", "[", 
           RowBox[{"1.1", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.9V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=1.1V\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"L", "[", 
         RowBox[{"0.1", ",", 
          SuperscriptBox["\[Delta]", 
           RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
        RowBox[{"L", "[", 
         RowBox[{"0.3", ",", 
          SuperscriptBox["\[Delta]", 
           RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
        RowBox[{"L", "[", 
         RowBox[{"0.5", ",", 
          SuperscriptBox["\[Delta]", 
           RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
        RowBox[{"L", "[", 
         RowBox[{"0.7", ",", 
          SuperscriptBox["\[Delta]", 
           RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
        RowBox[{"L", "[", 
         RowBox[{"0.9", ",", 
          SuperscriptBox["\[Delta]", 
           RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
        RowBox[{"L", "[", 
         RowBox[{"1.1", ",", 
          SuperscriptBox["\[Delta]", 
           RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.9V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=1.1V\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.1", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"G", "[", 
             RowBox[{"0.1", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]], 
        ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.3", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.3", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"G", "[", 
             RowBox[{"0.3", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]], 
        ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.5", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.5", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"G", "[", 
             RowBox[{"0.5", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]], 
        ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.7", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.7", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"G", "[", 
             RowBox[{"0.7", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]], 
        ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.9", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.9", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"G", "[", 
             RowBox[{"0.9", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]], 
        ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"1.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"1.1", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"G", "[", 
             RowBox[{"1.1", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}], "2"]]]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.9V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=1.1V\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.1", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.1", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]], ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.3", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.3", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.3", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]], ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.5", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.5", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.5", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]], ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.7", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.7", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.7", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]], ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"0.9", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"0.9", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"0.9", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]], ",", 
        FractionBox[
         RowBox[{"L", "[", 
          RowBox[{"1.1", ",", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
         FractionBox[
          RowBox[{"F", "[", 
           RowBox[{"1.1", ",", 
            SuperscriptBox["\[Delta]", 
             RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"G", "[", 
            RowBox[{"1.1", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ")"}]]]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.9V\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=1.1V\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<Derivative of \!\(\*SubscriptBox[\(j\), \(aec\)]\) with respect to \
intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and fixed gate voltage \
\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
        "\"\<\[PartialD]\!\(\*SubscriptBox[\(j\), \(aec\)]\)/\[PartialD](\!\(\
\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\)) \
(A/(m*\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", "0.5", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.2"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<Derivative of \!\(\*SubscriptBox[\(j\), \(aec\)]\) with respect to \
intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and fixed gate voltage \
\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
        "\"\<\[PartialD]\!\(\*SubscriptBox[\(j\), \(aec\)]\)/\[PartialD](\!\(\
\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\)) \
(A/(m*\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9491825493633623`*^9, 3.9491825923353157`*^9}, {
   3.9491826523097353`*^9, 3.949182722515403*^9}, {3.94918278629733*^9, 
   3.949182886735633*^9}, {3.949184738577339*^9, 3.9491848803972692`*^9}, {
   3.949185116122685*^9, 3.949185182830162*^9}, 3.949185353852439*^9, {
   3.9491854001892014`*^9, 3.949185418162628*^9}, {3.949185613772835*^9, 
   3.949185643811054*^9}, {3.949185852672814*^9, 3.949185902506219*^9}, {
   3.949187553668291*^9, 3.949187621224675*^9}, {3.949188166840609*^9, 
   3.949188182335372*^9}, {3.949352424235001*^9, 3.949352561300889*^9}, {
   3.949353730313079*^9, 3.949353734142717*^9}, {3.9493538094045477`*^9, 
   3.9493538230598927`*^9}, {3.949354239150113*^9, 3.949354268020258*^9}, {
   3.94935445504746*^9, 3.949354458692643*^9}, {3.949355051344797*^9, 
   3.949355141321628*^9}, {3.949355179413808*^9, 3.949355340872696*^9}, {
   3.9497175956918783`*^9, 3.9497176078252897`*^9}, {3.9497179130096292`*^9, 
   3.949717938609373*^9}, 3.949717978150959*^9, {3.949718309777625*^9, 
   3.9497183339877157`*^9}, {3.9497183946540537`*^9, 3.949718426675845*^9}, {
   3.949718820097567*^9, 3.949718864988925*^9}, {3.9497190915262613`*^9, 
   3.9497190943426323`*^9}, {3.949719130734818*^9, 3.949719146788706*^9}, {
   3.94975672180024*^9, 3.9497567569511843`*^9}, {3.949757378675568*^9, 
   3.949757380496004*^9}, {3.949758310783853*^9, 3.949758310884766*^9}, {
   3.949758342091051*^9, 3.9497583430905657`*^9}, {3.949758444709944*^9, 
   3.949758492956946*^9}, {3.9499753673659897`*^9, 3.9499754077027483`*^9}, {
   3.949975501348174*^9, 3.949975624705234*^9}, 3.94997608979296*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"0dba70f7-8dd6-43de-b878-7f26fa2566e4"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 24, 1, 24745237652482065349, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.949975636551409*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"01c09205-08bd-4cda-a6de-d8aac46f8258"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"7.1873445835946775`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3152349462124376`*^-23\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.0642665993942874`*^-22\\\"}]\\) for the integral and \
error estimates.\"", 2, 24, 2, 24745237652482065349, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.94997563658673*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"9e18f7c9-b9dc-4d1c-aacd-0b4b1147ad02"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 24, 3, 24745237652482065349, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.949975636660822*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"194f0964-7067-4dc3-ab32-ab4b4f15a3fc"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"7.1873445835946775`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3152349462124376`*^-23\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.0642665993942874`*^-22\\\"}]\\) for the integral and \
error estimates.\"", 2, 24, 4, 24745237652482065349, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.9499756366950407`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"7e114f69-a1e9-407d-abc5-a174ef516253"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 24, 5, 24745237652482065349, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.949975636757102*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"4e853eb1-ef4a-4a07-9272-41da8910652c"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 24, 6, 24745237652482065349, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.949975636764958*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"e5d7c457-b77e-4658-aea5-b36a78bd58d0"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"7.1873445835946775`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3152349462124376`*^-23\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.0642665993942874`*^-22\\\"}]\\) for the integral and \
error estimates.\"", 2, 24, 7, 24745237652482065349, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.949975636774063*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"a75f5cd7-5030-40c1-8004-b35717e7b7b9"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 24, 8, 24745237652482065349, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.949756846362844*^9, 3.949757382651288*^9, 
  3.949758313097986*^9, 3.949758500075115*^9, 3.94997563678329*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"18efac64-5e2e-4296-91b9-c8602f3b287e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVVHk41N8bRcqaQrLvMyKUorTIe8tWKVsbfSNLO5W1kiSRrSxJpexRWaOy
RHKRLfs6M5gZ8xlrtmmXIr/5/XWf89z3Ofc957zvVXW9bHeaj4eHJ4iXh+f/
5/7TE13Vn48YPzmn+i9TTRjxm8h5DskaQHWvmkUlSRjppyUmv5U1Ba+fuuJ9
GsLIso36JkX2MPhG6GkJagujY6fmPsTLnoLK348v+eoLI8bGcJNoWV8QaaDd
OG0qjNKlrMOiZENBuyZaIe+MMAoWfLsuUjYBDoxKXe/MF0b2DhmFX75mgb5K
TEfFAREkshR8wkKpENTfU8k50yKIbDs78fFuMQzvYrNSEkTR1fbtkPijHJrl
x16M269E0sXiTF5eDJXBWx7LK4uhUrZJa4dRLWzYn/2pQHAVqr2QIu8wXQf0
CqeWed7V6KfGrlUFFxtBPiF+05PbqxHffN5qeXIz/Fj5/QRWEEdbl5xLD71q
hfutZ5/yfhBHraEG7Q3rOyDxVo5ziIcEUo6bms+Z7YTtPxXlRUwl0dTcELNP
rxt+SB7yPrR+DcqafN8sFtMDIjTDM14HpNClx9bqFx70QHmBsepeWylkaDoc
UJ/YAxs2i65XOyqFmlOEdW9k9sCbJXED1kkp9NXGIfbzux7gyX6fEOojhYzL
fh2qG+6BFZ2xP7ySpFB/yCaG//Ze2NTzduLvjBQSU3zJGRnpBfPHtTuaU9ci
dDSEMfy5F5T2rDPZnLUWeceebGHP9kLAxUbd1Jy1iMIr85L1uxdI105VBhev
RaljEU500T644+Zjcq15LdpQdKGtx6APKgaStq6bW4sOmmzIqw3tg8oS7Fx0
SBrdO19yJp1EgYyLv3Pz5WTQJCqIEFlPge8TLqn1qjLIQuZ57pWNFHiw4cbA
iKYM4mtMmD2wgwLeg3x2Ww1lkD/J98q8NQXSoh0sNA7LoDNDm8PsAihQm2Ta
tydWBu0+UvScv5sCldc4hmXCsihVJ7vxMpUCCafiKfkSsmhhWfrnAToFAsOI
1blysujdm1jd1+MU8J/YFPl+vSzasPpyieMit9726PBOS1mk0KJbX6pJheKQ
e54fomXRL5Q3ci6ICs6SvVhdVg5VZk0lXQ2lQvbqssR7qnLotqDOobBIKgSN
KT9e1JJDYp35NZkPqLD+iu723zvkkMbJV6nMl1TIenow0tZRDh0NfG1/uJMK
Cvs6/dIz5VBJeVkrqNIgvuPY4lpDeXRd8XeIlQYNlHNtHNKRPELB23Y6atMg
U9P/g/5+edS6tzzn+hYaPIr5M3zNUR6NUCvCSvbRoCCl/snNUHm05tcHpO1N
g47Bf/nhvfLId3Nd8dqPNLCdNTeQDVRAZwxU0u830UDkI8/AtwgFZL/1xl3R
dhoEY6EtgwkKaOcOA1e+fhpYq6kH0fIVEN+erFWzszSwOzSSEsFQQLG2oRfq
5fpBunboef9uRZTraari690Pqxxkl1SklVCyd7oI52o/xAysWitGVkLRvgu/
zgf2wx1txo+V+krI81px28mIfvApjHlibq2EDG+RAixT+6HnmJNPWoQSqovl
p6g190NAss2xVUtKaOhV3d0u1QG4kyj1afyvMuqc4Z/evG4AJuWP+EiuUEHV
OmYHEnQGIM2vYJuxmApKz60XPWY4AK4jghklSirI9UVDNP3AAIz1GKbqIhU0
ltIUO351ANqSD4DVHRU0c6/1wWLbAMh2312dLKOK/l7oTdK6PgjPSr9PkNzU
0OGtjvc3BA2CYPIr4YsX1VA+71iYfugguBh6z1ZeVUNOiXNeu2IG4bLYTx2f
e2qopl5ur+2zQdjcnfyffqkaCldx+XGteRDe3poS/CSsjiQpMwea5OhwcxPT
dLxEHXlkXNnTpkyHlBPdEXHV6qjOY8mwm0SHEU5H6pYWdXRlmbg6fQMdrnJK
uz1Z6qhfz2Ces4cOx6sSHZ8Ik1Da3evPpd3pEHXnTpWkIwn9ProsScGTDssN
+p+vO0tCNmr34lT96MA8Fndb24uE+MpTArSD6GCfP+q9FEpCp8eqbeEBHRZX
Ojp8yCMh7d0C/868p4PdBp6Zlz9IqCg3bx2tmg6sS+Zx84skZLDGxnZfAx16
RN1/qwuQkdF4YpZ2Fx3g8YrYBRkysopeb/lljA4CV6P3R+8go+5f7b4u03Sg
Z+2p89tDRsecfVK7v9Kh1OyvnNZ+MnLWr/xavEAHx/4vHRP2ZOTdfzDRX4IB
OtBe+NCHjH7t+VYzKc0AZsGWzFR/MgrIfzT1nyIDUqUVo1yDyIhn7U6pNjUG
3DjZYDYUSkahQUPGxpoMSKyPKpKIIiPBzyHnCnUZIOu9OvVPDBlF22nGq+gz
oCw8dDDhARk9InuN8hkz4PQb0RPUJDKSi5Va5WvCgN6fF+QD0sgo7Xf5ttG9
DBjawFZvekZGJFcn16NWDPgMdhqVz8kou4XvXuMhBiy8GW0/nE1GOltelmxz
YMDG25frY3PJqCjVcijHiQEzt9sLLuSTkYHgF0H5Uwx4Hn9Uc7iAjMq9Ejbf
O8+A8Qzo/vWKjIwHt51YvMQA9xI588xCMqo1Zdy55MvtT/SgwhgXm78KLhzy
ZwDef3+qkoubpTX6bYIYsHlF0D4yF1sFN/PVhjKgKlamRYHL1zN5SUc/igHv
FE8uz+C+b39Y8mhWLAMMnGaiC7n90T+UBUk9ZMDUtcS/Ztz+ndedyAl7ytUX
Ij3uwtU3GsfTM5fGgJgLr6d4uPov/MlaOPece7/760uVVDKaddunMZDLAA0e
l6qqJ9z82masLYsYYBuxn0JLIKO5rfH+lSUM8Px1M9kjloxupG/N1H3PgDRx
Ut3VSG5+woOtqdUMmKgLF/h9m5ufT9CvVQ0M2H5tXnMqgIyEGOoqwS0M6FHM
+W7lS0Yx5k37vnVy9VbfNVL1ICOJIg8fNwrXn6NmwyfduHnKiqf0DjJgeap0
j+BxMpIPKWkwIxgQXNS3TM6Gm9/Rf7Ka0wxg3xI9cJE7n9n4mcmTr1xs0v40
bwMZ6WpZXBSeYwCtaHXSfjUy2roQWz3NywQwyqJlcue94rTBpKMAE8x+fOg/
Pk9Cxh00yQ5RJnzQWZLymCQhi2eqZ19LMyFvXLnwcTN3XxLFNBoUmEAaSGT3
VJCQSszfkQFVJnz6fWRTQC4J/fHvc+XXYcIKs+UdAhEkVGAb6XQMMaG4Ptt9
hREJPbW4ouhhxoTzy/4djlhHQmG73Oi39jNB2f3nrKcECTlr7Tqee5gJ5nx+
NX5j3P+F9+uRxXNMuGx5/5pNuDrimWOskbjEBMsZw26hS+poerq5R8OHCVUx
2UXah9VRAy3L1iaQCXJhFot5SurIv8j+YOZ9JnQ5vnCpyFdDQyerTfdVMKH3
ZaqF1StV1HqkYJkTZoL+N+dAzXuq6J3l01rvOiYknhKbCT2viuINfVFyOxME
BucX29VUkdkqTSMOmwnd/ZWxc7EqKK8qVv+hyBCozKhco7xSQlcVT6oRJ4aA
07KnqfKCLHK10TtKdxmCKwIigSprZZFVCG8U9cwQ+Fku3fWvkUEanzO/tnkO
AY/QrKq2jAzqLZ6orggdgpEnroqnGtYivQPeJxPyh2CCp8MsSWcNUggyeRD7
msu/4Yl0z4AkEnizpjGqdAj29Spt846UREzpsg3B1UPwKXdK/N+4BLo3/Hfx
Yu8QuNzeozuRK44mrt9JtlgYgoLduxlPE8XQ5FHtcxk8LGhoqCyrXSGGnL9I
8ikvY8F4eoX7gSsrkaX66BY5QRao/FovkeIgitQiw1NWS7Dg3ILSs7pNwqjz
cKvHIpkFe+MpgrHaK5D5bPGKAE0WdA1LjDBfL0eV4Snpv9ezwHO2Saxx+3L0
suJS7/eNLDhB6/nhasWPbqqIG01uZ8H0x8mPrVF8SGf6iAj1IAvGdtTnBKf9
g3eHD+AoGxYk7tf8F9++CCYf9vgYH2JBwmOPMWPeRTges3HwuT0LfJ9VnrD0
+guRekJ5vm4sUExC5qcDfsOaJ0tOmmdYQDc2fXijYQ7SeX9J0M+x4PPshhzO
mjl4182+bnKJBWe3ql2ve/8Txnwr90v4s0CpN3yvot538Ga8+VcfwAJypRCf
0MNvsGiW88b/Jgvks2Sy+Ba/whrpR3JECAvu2Klv/tX3BUzKL08WxrBgwtKa
5nlkBtIX1aIOZrHgohqjqSJ/FHTOyBrzvmRB1tmdXe7tI1DWvupbcQ7X/5xt
OWM/hqE9bcFBoZAFAWUPh8es2bC4m6I1Vc6C5vGLvblXmRCR28pIrWRB/7IU
cb1lDFgj+fG+HWbBI69docsfD4LOSOF8eR0LBNQNN62g0uB4WOSniA4WVF1e
2LmjuAfGZoMCjbpZMJP8b0H2Zjd4Hbuy6UsvC1y0Gn2VrbsgQtPtybEBFsya
ibcoirZDabPReY1RFhRUL2qHhtfDHn19xYFxFmwREFFVDPsIbUlaXdGTLLhL
1v47HlcDIx5rt//ksOCIUo7e5oT3ILnqi2DdHxZsXKckoyyeB90fosL3LbLA
yb2u6d1YFsR7kFd0LLHgSs3jovrqFJBoPr5sgJ8AvfBZxdkJf5C4U7/IESPA
uk3gcvmVZ7hb3/mGnzgBH8t0fJ88eInj2X/+/JEkIDumV7H4fj4WR3q/l8sS
wH/0lvpyubd49d+n3+TVCbixjjeLsboSd+Zs8cogE3C7Pi7ktk4VjrPv5Gho
EpD/6NH7SMVqvKp0+cwmXQIkWK2n+GVrsZiX57iFIQGbsskU/cZ63K4scqZt
OwGMb3vNrLIacEz78xE7Iy4/NcGbGdCIV+oMEo67CXBTZv/plfuERcfN6D6W
BIiwRbU2yrfi1oes4/MHCUiSiBpe1dGK75kG9N+0IWDrfZLfnpttWORZESXy
CAH9fztv8Ha0Y2FH+a60kwQMfWgMNUvtxM0ipdZkVwJi9Ge/d4514qgKm/bc
UwSkrMRP3HS7sJBMWEvJeQLE996//Km4Cwv2fKlv8SHgx3aBz2UF3bgp+K6p
7RUCHPmP7kgb78YRehofKdcIyPpstZup3IMFYv6rJgIJiEooXwi/24MbjH4Z
n71FQOY0Xwg/7sFhU3Efpm8TsHtm7amFLz14xb6GirlwAsrlcyeDbHpxw5zz
9sAoAlLrshblb/bisBd/y/iiCRiXX7H3cG4vXs6/qWRlPAGhOgX33/3rxfw4
qVA9mQB6V3S2SmIfHjAy3TuUSkB17fAx+6o+XFgxzXqawfX7YYmE/nAfPl66
S0LiJQFLSk5S3zUpWM9gLLcth4ApIjNpYh8Fr3gTYxKZT0CJxc78jPMU/Lpg
yJfnDQGbKQ7fbzyn4DDtiJWVxVz/urJ4XtVQ8IkcvRdXywiY+3PKvJpOwYLP
g6mzlQR0cVwcslZRMVNtvWcuJmBb4pa3Ieuo+G16t+CZWgIkTX45njSmYqdk
9R2MRgKcCm5Ikc9TsYFca3diMwHXXrcGygdSsVCir/vhNgKOPyviaMRRcfGD
+uSWbgII80m1hLdUHCV+aUt4HwF7h3S0eOuo2Dl2bfseGgHSdKu6Jz1ULHL3
7FI5gwD3ANEh1y9UzBJcnejHIoCjuTUrZZGKS8Pe6W0aJsDm55soGWEavsfv
8ml6lIDHKp8v0KRo2PW2kGv2BAHrs1/ysFVoeBvPmz9uUwTIkRumtmvT8Mqb
xx8ozxJw5FJN0YgBDb/zz6t79J0A6lPxI6bmNBwzd8jR7hcB367/LOe1omE3
v4WfK+cJcKY28Ksf4fJ9z4r59JeAGkXDHfn/0bj7cnDdnX8EGJRVmWe40PDI
7E+MeNngrhS0tPwsDVd4pNovLGPDoES2GtOdhuMmzb+WrWDDhy4Ze11PGj59
jhPpI8QG+Z8Tm+Z8aHjH2GO1jaJs0It014GrNLz6FHo/KcYG3vzThYLXaXiM
mDj0QpwN3YrrxY7doOHKk/enXdawwSpnOFD3Jg3HM7bfUZRmQ4tXnkVsEA2f
/Y+t2C/Lhmr+8jNBt2jYqD+qNEGBDWnW+ZM8wTQscUzf2kaZDXv5FBrXcvFE
7+C4iBobNoTXMT5y6z/Yhd5qJLEh0GX2nzAXx3fqyIasY8MRz57Ps9z3zln1
vTZez4YwBs9B70AaNm4N3P9Hhw07essaHgfQsOR+jeGSjWxYfv/AqIs/l7+x
PcBrMxvo5cHreq7QcJXZ1TW6W9gw3GyxOMPVn/BRuWDCkMtXMN9QzPXn/O4m
s6wdbJCesaBoXeTyY0/myV1sOBoufNn6PA2v2SV7VR6x4eremsZ1p2l4sqJm
FXUPG5o0bgmVONNw9bYL2fFmbHi2W9R6npuXu8H7fiFLNli33JQotOXed/bl
vzvIBgHrh8vgAA1LXfwSdNaGDStNX2+L484Dfk7WqD/CBqXzQn6BO7h6pOO8
bzmzgcDaUm+Uufrf5pptdOPyUwQOBchw/bKul2Ge5vozRqdIiHP9j/hTtdOd
q+dC+/U3vDT8fv6UyJwfG0zrD/QOsKh49aMg5vNrbDh/9576LhoVn9789PXh
ADa8sq/zvNZBxavcO469ucWGW4/g080PVOxG35518S4b/B6yt0w+5u4LFts1
ks6Gcww+B5IFd5/+01r9IJMNkbry9o+NqLhkzmR49ws2rH+D3b5vouKTev6R
aXls0NQcpZ5X4O53xnDf8VI2pGs9Tjz9hYL/C313qauFDRURRyMNHlJw3j7X
9KpfbPCojaoxpvRhAx1VY5hng4Oq2D52cx+uEmMN4r/c+Xm7xS8Y9+HOHkfp
Gp5hGPaSESvO7sM/HB1iPgpzsdbtji/X+7Cxt82NJqVhcBNtNFqmzK1/amzf
bT4MElr7XfnO9uKfU3Krxx4Ng6a6WcnDf9245JDFsgTTEXgmNpTab9iJg/be
SSseGwEXX8/snaKtuNvp3Am9zyNgnzUVcmOhBZP8LGXzp0ZAVuejUtN0C27O
EH+Q+WUEUsN3XQ1qa8Fr/qaExf8ZAebkq28XY1twdkHpRU+xUXhv9ZrHVKoF
d0pM7NTZOgrziVX7MjWbsSpjPy3zziiMhX/7nOHRhKNqdxYeiRgF96qo0B1O
TfjbS50wgbuj4HuqpoRh3YRrvcUM3ONGwWeNzVsT/SZ8SrA7dnPSKCz3ENWP
/tOIs/UdLGqKRuH7D9MrYncb8Yaos6XMwVEgJnSCY9824B2GoQmym8fg1p6d
aZUq9fiEUsc8b88YFMXJwfqoWvyzOZrtGTwOLDsVpuD6apzI7+RrR5oAPvQr
TSK6EksyS57x1U2AkZER7+Dxcrw8MPjwdq/P4PVf6a6k/0oxT45TIVtiEnbZ
BmsXzbzF3k8LoyVqJ4FzdmpdQMZr/EE7QlD80hR89Zm5K2FXiMX3e+vcFpsG
6UjbxXDJfEzX7ezxr5wGvnNR/aM/s3FRKpBGnGbAxPPTcQ/nF9ixcKu44r8Z
yGUXnveQz8K37mQE03NnQchoMrBlLAMXTCgmiR3gwLUwu7fUlek4IuWOM9OK
A7X8HdRlK9LxKbsZ8itbDsgsESvPLqRhhcrKooPHOBCy0+XPDkYajor9r+Ge
KwdM7XxIhmlp+NzWJ1+F/TkwuRBkHUhKw2qha/YKvOBA23GSmoZBKv637cZK
ajYHTgUIxDuQU3H/zHD3izwOmD9bSH6wNhXHHXvraP6aA6VbbvvJz6fgpfV2
PncqOeCgeL7FvyoF07tiU5f1cGDxieXIxf0p+F3YnFtPHwd2LWw/LGSUghN2
ntTKpHFAXG6GnKebgi2fbyjew+RAnlAyi1c8BVdca/sU/JkDV7qSbP9Sk/Ej
3S2xttMccNaSuPTpUzL2YicfVuVwYFjuY2fK+2SsecBjqPoHB07XCh13SEvG
/Ly9WXFzHDDwXfRH95Mxq2TnBec/HKDaWXTrhiTjyguZG/UWOaCWc/ukql8y
fqws8nNpiQM0oYNK8meT8f8A4gX8+g==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$13511#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVl3k8VO8Xx22VKGubbaYsRVGytHOepFQopBSRJMkWUtLyDVESWqgQoUhZ
x5r9kUL2fZ3BbHeyNhSJot/8/rqv9+u5955zPudzzuv1bHC4YnFRgI+PL52f
j+//z6MXh9sqR07qxzhvWHyrKIKEDsh6DsnoQGWnolGZsgjSToiOy5MxBK8Z
DcmujSLIuKknN17GEnxCNNWEt4ggK8fZ8mcyjlD2+6WHj7YIGtj24EC4jA+I
1vTevmgoghJXH78fKhMEWz6Fy6c7iaAA4bxND2WiwIRYfbM1QwSdPpOUPTmV
DNrrI1pKTESR6L+As0akbFAq7VH5MC6KVMy/D39+lA8sPSY9PmoF8m3eDdHT
xVAvx3n37fRKtDZfcpCfH0NZgO5LObIYKmQeaGzZVwWaR9/XZQqLoyqXeLkz
41/gUYldwxy/BJrZqCee6V4LPbefbY8JlEACc+kScir1IHd24iyWl0Q7/tkX
nshqhO/bcQx/uSRqDNJprtncAq/e7rG85yaFyE/G5j58b4UQpWpjEUNpNDY7
NNil2Q7Xig7tMt68CiWPltaLRXSApuIN840mq5GYQiqXze4E6RurnRvj1qCw
ywVOicrd0LL6U86CxDr0C6Wzne/2wGjE8t6ecRnko/Ulf83nXhgRNVOfpssh
J531iU+/9oJsfVFw0ogcOr3j9qMVzb3wadAs79gPObR3j46DQF8vrBz2FHkv
KI8EDJLFv3/vhb6I/5ac2CiPHpsHuVTL9oEa/aK+q6s8SvM0XO/j3Qf/Btx/
hv+UR3HeiaJc3z6oyZN4Ov5HHoX7/P11+U4fGBz4Rz0opIA8b+Q3nQvpg3N+
1z58W6WAdvor3zJ+3Qe6r6WOMHUV0JfHQt2K9X3Qty7TM/C6AhrK+vKobUM/
pGzsFauYVECtE0LjWpv6eXoJjQ/MKqBK9YMmUer9IOT2eOnUogJKTKteYbWz
H/ynt3ZwV5CQw7uacJpJPwQc9y03UiUhTvzXx998++HXLc5S0lkS6qYJTx6+
0w+frw85HnMgoVq5I2Zpgf3gul9Tzd2ZhN7H1Em4h/dD0cf65z4+JOTyvP7p
jzf9IOc8m5n0iIQmwhojF5r64c6U60rVQhIabFgxbdfRDxGuLfJrSkmoWcTU
srK3H1xsApdOYBLKCmladY/VD1omLd9P1JGQZ1Dzc+G5flhxuzL2Tz8J2X8W
+3V5sR8cVZqFNw6RkLnA8VMNglQI+fLMdAeLhLT8W9ZEiFFhz+HY5qVjJDR9
q/WltDIVto+8KTo7R0LsEonfPmpU0D51ZjTtLwl1zZmd7t5KhYKDWxup/0io
0LdtXcxuKij1UAXZS8joXaGk37w+FchLb4SWCJPRyxnzPhtDKmwq+aToLUpG
N662x5COU0H/fBgRKEFGzrlS83ctqfDf6XI9qhQZnZmysGacoYLqJyFB6dVk
dFQzssTgHBXU3S41qK0loz1XOmSTHamQo/FanSxDRpuzpG8tcaFC5XvZsh+y
ZCQ7cYLqdIUKeSdWiCfLk5GIetTerz5USIm+WKJFIqM/Lp2v1G5SoWcNw+I1
mYwsd9g+3XqXCuOq9Adt68kog59zXzuICpkmjwOIDWS0pMnj9q6HVCgnXIf7
FMnILnrWSy+CCgtOfY5ZSmT08YL/JYNIKijcVklwUCYjiW3LbY2iefGPhMEv
HjvPP7UwiaeCwJd9351VyOhTtexh8zdUsJS3PVHCY9mnb/VOpVLB8KD42lEe
e59V17bJoMLF8GuMWR43bCpQtc+hgqP5R2sWj5V/6pEuFlLB+suSLRk8vlNR
I+1SSoWAlsR5cx53Pzy+/EolFTKEaV6dvPhbT/YuXq2mwiOstFubxw/Wn5++
UU8FrXG9SXde/vSxkZE7LVRAD5Stg3j17froPRTYSYUqf/sl13n1Pw380/mg
jwpCycVvDXj6jJoG1YcNUuFOndPgCE/PAzIrK5+yqGCf22PnqkBGceznBS+G
qTCTX9JcI0dG09mk9FcTvP7eFej9w+uX6a3UxMQfVBidHFMWWcfzyyHNFymz
VBAVFrKf4vV7UbL4UdpfKvgPa+jkSJMR5X399fylNGjgW3uyWIyMlvuccCsW
pcHQs8A5vhVk5AC08xUSNHhjcJFDXk5G0t0TJl9laSBo9dWUKUBGbknXDZrI
NDgTkqQUzPPrF7d/O9uVabC/gPJ74Q8JXReUVKJtpcGJISVbz2kSammOWcfQ
pgH1+HmTy5MkpBqrKMbZRYMI/+fzO8ZJqE9TZ45rQIO6/dXWx/8/P3/Lvk8b
0WCm4LdXzCAJhdYeZM+Z0CBMLknqYx8J7bOzahG0osHj71s+u7aQUMKjmylr
XWlQP3uwM7eIhH6fEnwl70mDY6tmlZ/mkpCZYtiTDddocNP1eSnKICGB4vhb
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
J/w/G9mJpQ==
         "]]}, Annotation[#, "Charting`Private`Tag$13511#2"]& ], 
      
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
sA==
         "]]}, Annotation[#, "Charting`Private`Tag$13511#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVl3k8VN8bx5EioSwzlkgUIck3Wi2fK+2kpIVCJSTtIlokuzZbmxQqpTL2
LRWiLIWym6EhDLMwjGRJyO/+/rqv9+ve85xznvN8Pue56s5n97iKCAkJpQkL
Cf3/ucOVW1/C22f2yF39X5KGBCFqoXzup5IRSpo0thYulSAME2Of5ChtwvnR
FTLNWhKE5Td6drzSXniFG+iIL5cgDriMF8UouaDwz8MzXoYSRPvKMIs7Sl6Y
LGdcdd0kQTyl7Aq9qRSM1pI7KjQ3CSJAPGfZDaV7oLVSLtelShB29s8yhn69
QIdpSO17q3nEvJkAh62LMsDfUbr0DX8eoWkzyP18Kxcyn4/Ux9+TJHy+r0fs
yDu4q9QLc+ykCIVcmQ5h4Y9YIl93VkFNmsjvtqipNfmE/afW6D8Qn0988ohf
aM8vg6DaeW6F8AJiVMt0ftrpSrTtexPIC1hAiEzQFizUrIJa49uUQGUZYs3M
kXzb9BqEOWcS0/kyRE2w0fcK3VoEPUtSEXWSJdSi+ifeDNZBX3Wm54a6HNE/
/rOj2aABkioTK5W75YgXfR+qpCMaYW7cacvPkyekVV8JenqasNy/XbrpMoUg
9ge1s3hNMFf7zz7Yj0J4Rh6u7h5swuwz136suk4hWoQVX3X+aYLd4lOeN0Mo
RAI73Ikp2Qxdn+7dS6IohH6mx7dGo2Zc9fUeGXtBIXZa6NM+BTfDfuTR/eka
CnHtqsSj0hvNOOTyk3uilkJk5rFDSyKa8f3AhfeN9RRCXjvRuTi2GS+9Yz4m
tlAIpuQC5fepzZi/NfqZYieFONXyKzyrqRkO0yf0w4cpxO0TeW5Pl7agqOno
KQMKlegj0sLn6bbAPHCB9ykFKrFV8WXKxZUtGD1HjX6hRCVEKu8NWm1ogZv4
vp/ii6jEpaVeFyd2teCmuArjqRaVcPu5KnTPlRbEf3Q0nbOWSpTl674uut4C
ft/LdTPrqIRGhEaVdmgLDrpeyf29gUq0m8hKz0S1oCpRSbzWjErsjft1n5bc
gvM7MyjWW6iE+b7Ml6INLVjY88HddS+VSNB7XXmW3oLKOR9/y+ynElOznvLa
mC2IWO7n+u4AlSjIjlyRxWmByev25j8HqYT+grN5jtMt+JHQ3rzuKJW4zXGj
fxGhQ39eVOAHZ3K/xU4ThuJ03GpvrljnQiVenrY2lZCjo9NFc1DjOJVQqV5R
nq9Nh8cXicTcU1Ti8nNNjro+HRebcwQSZ6gE/ZLq3DuGdLzIuxl26CyViNGW
2nnMjA7bdBOX/vNUYm4ov2n+Xjq2+xvllV0k8+PYM3bZno5FOXwNvg+ZHyOm
ItuJjtsXj4dKXaIS11nVDoUn6Bh+lj7b7AqVGCNoPe7+dFQs06nY608lCl/0
P/YJJtklL3rDdSoRKK5nG3qDjvhdKxqVA6iEdF1qadJdOvZctnlQFUglmgwH
fLNj6WhqXiUWF0Ql4h6uMCiNp6N6h0fNsWAqoXU4PaHjFR2LHdetYodQCf6n
wX0DqXT4c/6WJoRSiWytlVJTWXQ0Pz4ZbBNGJcwGM64oFdJh+SrZ/2U4ldjv
l2W3t46OCMXoY3Nukfnq+jX/WDO5/qeMJ5Ekd29aVXm+jRzf7Vwue5tKnJHM
WR3ZQ8eH2+Gf5tyhEkbnfvPjeXSwd24P9SH5b6Phi9RBOhYUPFToJjn0ca5s
1R86NsXpB7yIoBJWMyNfGdN0nEh7tm2KZNljqwM4Igyo/hz/sDOSSjAqvNeN
iTHgofq1IZbkBN18gagUA/vj04PbSXaJGEuWk2Xg4uTGrwujqITu8BonDQUG
ah00Ym1JHtrnQ/lPhYG2yD5uMMl5797WQJ2B//SNczJIvqz6J8haiwG54rzB
RpKJgHXGjssZcGqajvlF8pxe3+GTBgz0r3n3UDyaStRse/fm8moGpv5FjiiS
HJM6ceTGBpI/6D3TINluwQbFWDDw8oHJfU2SF3ldrk3exICx19kv6iT30N+H
5m1nYIOy7yoFklOMJ03LrBlQ2yNZPZvkc4nGow22DHhL9d4YIOdfM+tqapcd
A2dvFrt9J3nKrfDYkCMDh33t7F+T/KlqSnnGmYEXKhftr5Acrm/aIOXOAMen
w2krydYxfjdUTjPgd9LhqCTJ8mNFxHJPBpb8LLarIvPXZv9vfL0PmS82wySA
5KdFZhnbrjIgzguY/R/Jbur+bgcCGHAov5/SSp6PXshHVbdQMh9/R5ZcIXmY
O9PkdYuBG7XBJygkF1gRt4OiGGi4uPLCa/K8N8mX/n0ax4BiwsPsArJeJHyF
szMSGWBGWDBWk1z3w/xE8QsG2EGcZzSyvhySPtF/pDMgMn+VcMBN0l/EZkX2
5TBw5fNIaOcNKsH1sNgyUcDA0nncqHUke60qy6V+ZuD89naZBrKe3YwWP43+
wsBmOwfDWSTbrbl6S/I7Awtiml2Xk/VvvMHIWaSVgSMC/ZYjpF70TKJ2+nUw
ELTfRegMqadFZvx1f1gMjAnM5D1JvYlsfDF/cJAB1qBwgxOpzxELoUn3EQao
s+67byX127vZgc2aYKBGZ8knrWtU4st2+aJW0VY48kVjv5J6j7QJ9ihXbgVd
yq4igfSL67ad+4jFrRj3GThp4k0lPPeZmH/QbIUx9+SNuguk/uxHFLIMWvFU
7YEY8xypv6Mu5U+2tELFs1vO34P0g2MlmQpWrbDvS7pS604lhFxVnsTYtIKT
lyFHJf2N5d7kGe7QCleJyayQY2R9ndu02MuTjJ9nXTBwiEo88Xw6T+DTCglJ
VvagPZW44zU1dsKvFXM6Fsf1kn57zjf32+HwVqQFUaXzbKnE2utLr1gmtMJg
iWdq6w4qoR143a0iqRXTbo56N7ZRCeVgpo35G3I+AdNen/T3f2H3tNfmtuLZ
t9BEe3PSDyNFWzSqWkEJThQzJO+P/OgjpfG15HjaO81IIyrx+m5hqmJzKyyu
nXnb+R+VuPXQK0i6sxW/h62VXfSoxJ7EHoO/o60YfRC9pH8xlfiZXnarXr0N
j4sTSkbEyPoZEOWvWtaGTHZUfK4olSjR22x1T68N+lnNQyeEyXpOKZc8sLYN
V3e4sXP/Ugjn5Io7TKs2DI9nhFXzKQQ7/kskx6cNlZEnq8a/k/c5U3xom18b
MvZ38yWrKUTlwu27UwLbMKolslGhkkK8fvR1wek7bdB7r+Uz7yOF8LhfFT38
vA2CJNbb8+kUYuB2zd3pb20YP1++0/AWheiolhxxamxDrWj67rhQCvFdYufe
EkYbXl17e3gsgEKkh3+TD2K1YbfEzyd3fCnEueDv98Un2tCkFee9zpVCjFyp
eyi39Afy7NUW+5tQiEmPpsc6l3+gfSLGp7Fbnti7xjFa3/8HJtcEftnYLk+k
CrNDDYN/4IZz+svXdHnCKXb8vGnEDxC2DdJ2NfJEabnyNpvnP1ARo87bTPY7
YYuPjvhW/cB0zaWgIyHyhFzLgNUXZSYGBfd90xbJE6eeXdz4TY2JjQaZB0YV
5ImyUzNrG5YysTltjaWRjDxxcZbMEqY+E9lxRPjDWfJEq4HRhGAjE21sRakR
jhyReOvyS4WTTHxdtHHjvAw5Yrm52D+3D0wsOaa0mLtGjshMoS1jlDDx9L3P
E199OcJIfrfN9gomDpSkV8xoyhEmnNgXy+uZMBd33j8sL0dY39G1HGIzkeYt
U3liWJbwbN0Ze0m2HdKHDULTaLLEu/P3Vt0+0Y6mO55H+AqyxNbn6sezFDoQ
2iH5sKZtAeGjelijy+EnrIaXDZVkSxJ6/H3z6Ds78WCio+NNrhghN39IvOxv
J8ZVe4WPpokQDUU3w7ZPd2LJpnv3Wh6LEDGnNOfUznTin+5W3/03RQjZqoOz
2kS7UHGV4+B9nOSQ8mmBdBeYig8LDDREiAWTccMLl5DvO5nyyY+ECUnOZuYF
yy54dEg5l0cJEaIfH2csedKFFzNS2eYbp9Fmsmnbz4QuHEwO0dilMY2M9/zO
uGddWKmxStZXZBoH801lZV91ocbK2lfl8xSy0n56CWV3YbBf807G5ik4PVmy
ob2yC/pSoutndk2i4BKt7MHvLoTLfShfe2kCEeO2jnvGunA09GF6jsMEjnlP
jUpNdGH2xbM1O4gJSJ/fuSzkXxfWHs++VSU2AVd3wY0Lc7vRYVNtOT/2D2QP
GO7ardYN59DLGclF4zhp9KF1rmU3ohnWYl9VxlBS15xasLMbojsWps8XHQPl
9JD/8d3dqI0ZtzvbP4qPLzW1yvd1Y7vS8xuX3o9CTiHK8/qRbkxKMEff2o/i
w4TLvHFv8v3QQHD9kxHM+yht2vO0G1nx2m8oq3/jyCGdBXeTuiG2IizWWe03
8sYtWObJ3Yj3L6qsmPsbhw0u3UikdeO5ZmpyU8cwcp6xmg/md8PGYesb0ZvD
OBRccKa+uhslB2LiX/X8Am2789PisW4kmgnLhqQMwUhP3QwT3UhRkvD4GTuE
YunOHx8nu2Gye88Kq7Ah1DU6KpQKsTC4CkUOLkMYcbSP+CzBgvbL4ot2akMw
89x99csiFkR+7qk89J8AdXFmdg1bWKg1DjZtNRiAvd/06J7tLMQLXY/5JTOA
7sOFdxstWbBSaVq+/DcfI0s31DbtZiGtPqNAOJ8PpYzVW+gHWfA83KSw3pQP
5896RswzLHQt7Wt7a9OP0X7lBewHLExZ8PtXxPBwL55T+eQRC+l+uuxfXjwY
7sr1t33CglhKfS3jAA/ns3cKSp6xQLm/slN6EQ8Dvte/P05loea1ipJiKhe9
s9m3bT6xMHs4Ruz6dw6a1bLmFg2wMIertDl7ORte9X6lF4ZY2KrH2holy4Zc
0I5Lur9ZYGkE9d6e6IUNm8V9+IcFxeayk12VvfiWSv3iOasHu6LPi4y49qJ8
/dVQbaUe+FtHRj9/1YM8262z7m3qQXwiNdWCYCHcsiBEZWsPHOiR/y3VY8HB
Qkf85fYesAolOAsVybwazpPKt+4Bran92u6hbljL1lIZdj1wzpudWf2sG9y6
/boqp3sQ+WN15Yh4N5St3Wxe3O/B30VSq05yOjGwmd6oF9uDOudupVktnSgx
3bY/L64H878rmGaUdcJthe6hisQeSLA0mRbPO5EjOejCfdMD1300aQenTlhV
e/vqFffg+OX52h65P+G/LSQxl92DZ5l0Y+7HdjQ4uTsY8HpgGn7T3eN5O5Z6
Wyql9vcgXGrvEemQdlQ9k7mbNNSDZKWfyh92tEN+Mj405m8PPEQCXiXRmXid
ln/6nHQvKAyeIGr8B+pkucZ6a3rh/m7lQJd1GzR0qv+8WteLSyPLthxY3QZv
pOctMe7FxJTDX97CNiif8lq5kOjFsWhfgRuvFS7lQkskdvTi6Kykcx9CWvHH
R0mC69gL00dzHLPJvkm9fQcjKaQXakIzsyZt6bj5yThjX3gvXu7YrjttTPb9
r/RCxW71gmddt1F1KR2fPKWNTkb1otZ+d17+SAtcxBsiVz3uha9h5L0dD1vw
2tB+a2kmuf6FJh4tXc3Qv3k8v+MHGX9FweHwW014cNbuTlRHL+TEY+7P8mnC
zN7tLhu7evFZxcs51rkJdWrLZZPZvdi+ehshvaEJ5/MGT5/+1YvsJ0IRy/oa
kdvprTk1hw36s6G/I9aN2LA2+J7SKjayOF/HtXQb0OKstCbeiI3f/x1OKVdq
wIWIdPritWxo2D864jO3Aam9DGVtEzYshbr95Hj1WHRvxbM1W8h4kq8k9N7U
Q+RXS5rtQTYOBFHWVuvVozpFp/JOIBujYgqmK8zr4N5S7C4Twka3cOJDEcM6
iIrslbgfxsYDd9W93KV1MLO/tvPJbTb0iqZe9IjXIVOssTHlARtmW5xlTZNq
cc/lamdlChs9Cb0+UjXf4bCodkK4kY2aFxbhu42+QVrJM+9DMxuP5+ktKFL6
hlI5ynlvBjm/Dqtwx0wNtOYe4nLb2ajtH2Z8qaqB4De7pZZLsvxBX8tjNQj8
+i8n/h8b96OdmZvjqvHaS//Mel0O2teamI8tqsLBs/U6v/U4eFzXvXqdeBWk
PLx6U1dycMamaf+DX19Jn3nvsHg1BweDIm8ll32F8Y4tlmIEBwvpQ9Wyp77i
u5qTdvM+DnIeJyVNfvyC0ao73ecCOFD6/u+J2pVKMOc1u08FcWDUWWwz4F6J
T1YqgrBQDt48F+bV7q9E1PeUyYRbHDBFB+wbV1VCt6FS/tt9Dt6GLwqv66+A
U6vwVp0UDkKm50ZGHK1ABceb1tXAgeXouNyFQ+VI1S7673QzBwmaltbpluW4
e0K04A+dg3/O0pcnjctxpD+mbH47B7+uy++qVinH38GMdlMOGU/L8L7ZzzKs
HOPNj5vkwHDZJ4Wjx8sQK+rktWcpFwkixvvFgj/j3zGF1fVaXFxv+qsUf/Ez
XD7Xje7S4eLpY8lM8xOfYRBo4bNTn4vSE6OSb60/48uM9uVt67igZC1O2q38
GeN/f/ubWXHRpfHH2iD3E/b/unFL14uLDmPDNfrDpSjcbWH15iIXfrorK/zY
pdDInJLUvsRFRZyLaltbKQbPnI3QvMYFi72ot+BzKUL4e6MXh3PRbGW0VupB
KXI5ag+pT8j1KGfMEzUthVxH3nORMi6+1wwYVt4tQYSkn9/bCi5C9/ye+za8
BBLGm+xOfeVC+3UIPcevBCKxDVIt37mIPWMn13S8BMM2At83rVz86ZWzSDMp
QV259q7dAi5SitrZ7vUfcTvt8WS8Mg+Xdu1/ZXu3GOJM55Y9qjzQ2P7thteL
ESyhmyW2mAenxLTluqeLceV4gdt5TR7sdd4l2m0thod6c/0mAx6mg6SZ76aK
sO2+9Ov+zTwkTdArvU8WYbZfwN7153nQOWSbvNCuELm/+BMfL/BwUXx428tt
hXBxs0vccpEHqc1f92N9Icp2reyzvcKDtUak2wvlQgRrtPufCeHhT9BzE4OO
DxD9so6W9IiH482BhJn7B4jIDQlLf+JBzvKfUW7Ye2SHHXp1r4wHS0l3h2WX
38N5qsJqYSUPPXrRaa9Pvcen3viH2jU8+J+4ebPZ5j0CCyxXWLTwYD7w6GiL
ynsIO72y8+3joW5OuL1b3jsIvXHK6Jbtwxehe7J7hgpQwaefSaT0IWZ3qu1p
VgFuG9joOyj2QWb2esGDlgIoFFikNav2kXHnDsgXFUC/Upv2RbsPzR7rJd/f
LIBD73Byulkf2vwun3ykXYB36mEJlz364Hr06cDqM29xzVXIae3pPhRdfi08
6fwWm95cUh0524cZg5P7aw68RZ3BqSenvfvIfdwJvmv+FlzYxB253geLxwXb
silvQXVa+GDLgz6EmEg7Li3Jh2dcxh3ZT33Yu01Y6qJqPt5OxYV9KuvDV5lH
QU1y+ZhyCg3wrOxD7ug1WVOJfIQtcfRuqOlDtFzNVr3xPDxJlXCMofdB5/6c
9wH1eSgvdtWTHejDnDpV039heVBkLayWUezH+y/trfzJXBQtDxeXOdMPiUVT
I1unc7CmSeFbzLl+rB8Jc947loPMq6+i5S/0Qy16p+VxQQ6ef6tQVvTth3vE
xfNPu3IQfnb2CrXAfrwMzdxyuCIHe3ICbVY86MeCM5Y94tE54Gzwi9te3I9H
TIOFTN0cyOzw1AuU5mP3ysJo1bPZeFo6f94GGT7qX1h4qp7IhsH6NN4vOT4M
uuqoS45lw1qbm3xUiY83xiFROJCNm3Oc1M2X8mFXxb9diGyIft5OFdpAxqM3
Z5bIZGPMWF3omisfnq9uCMreZYG5oq7xUiEfjsczFM8qZiGxX8Zv1kc++T95
6fWMXBac39hq3SnlQ11q3djd+VngLaX7Pq3gw1/M/kPlnCyMLexQrazj47h3
3JVDo5mQkeAfl+/l42WT0GGDxkxsYYtNpUsNwDXRZNIrOhOZCVja40T2kVbH
Zp4pZOL35d9iR48O4KBjp4yCfCbWHHjV335sAFuM9/VELMjEh/nzc+juA6C/
LSsKnZuJiusd5tWeA2h5dJOzYjwDP5z9DmeHDuDNPct/p0syMGfZh7jr6QPI
79B4XL4/A44Za2RU/w2A033a7110OvIP/pGuExrEag5F59CtdEjPeS8ZNGsQ
oskhdOGQdJQ4mIrzxAchItGr5eSbDg2JTTO5coNgOKz+Y3M4HWwXmwErnUHY
Nq7NVtdPxxnlU1+v7h3EPB3XKdPaNFwPeRbATBlEpTIKHBelQcpHbMfRtEEE
LuZIXVBKQ5z7aVl2xiCcLG+9uyWfhhzL9UmC3EGcXZ02u1IiDWyZ+jKRj4NY
HHaK6jqeCssEIXGdxkGYxZlZm9Sngvr2cIT35CBW6S32NA9LRRpX9bG0lQCL
HQNXi07REB4fcqTDWoAt94vMD43T4LJnQDPdRoBHNH5U3jANKoWFmTsPCNCV
Fd93gUfDzchDFbedBajWT1iuQKfBfc2jXxKXBHAPNR0ZyaZBI1h+m1iyAMu1
qL/HTtHwb91VKfprATK1Vv7LcKehdYDVkEwTYFdUdO9JFxqiDuQ4bskSwI+/
z5R/iIYZ3T0XQgoF4LRmFktb0sCsj0yY1ShARiItkKFDQ0Ho+LHGZgGsNouP
FWnScM/4sE4SQ4D21laFZHUaLF/q527sEKBhX/ava0o0vPf99jWAJ8C35uWP
rOfS8GDF6kgbvgDn2pmG22fTcL77yV51gQAKyw4d3yJMg7bVqZ8lIwIMF2hH
bJtIgahw04uocQEirxld3Tmags48Y48jfwXYcyX0z95fKSj0SFppME1+Xxws
dHggBQ/V5o3OzAgQ9jc2+iQvBf8Dn5EX1Q==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$13511#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
QLii+M/paQG0OOfnGckz8D/RIx0Y
         "]]}, 
       Annotation[#, "Charting`Private`Tag$13511#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$13511#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$13511#7"]& ]}, {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\)(\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"\[PartialD]\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\)/\[PartialD](\
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\\)]\\)) \
(A/(m*\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {574.6769714355469, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Derivative of \\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) \
with respect to intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\
\\), \\(g\\)], \\(2\\)]\\) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\) and fixed gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\)=0.7V\"", TraditionalForm], 
    PlotRange -> {{0, 1}, {-0.3828789658000784, 10.84355247917683}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.949185346575508*^9, 3.949185363387055*^9}, 
   3.9491854213797398`*^9, {3.94918584681061*^9, 3.9491858660195007`*^9}, 
   3.949186146819792*^9, 3.949188160293127*^9, 3.949188478455657*^9, 
   3.949352484828315*^9, {3.949352531902789*^9, 3.9493525622595577`*^9}, 
   3.9493527104654016`*^9, 3.94935359352211*^9, 3.949353760239811*^9, 
   3.949353825735661*^9, 3.9493542594761143`*^9, 3.949354352099759*^9, 
   3.949354462086405*^9, 3.949355424952259*^9, 3.949718111886581*^9, 
   3.949718611191004*^9, 3.949719018115847*^9, 3.9497193164829807`*^9, 
   3.949756834289926*^9, 3.949757009473153*^9, 3.949757539402315*^9, 
   3.949758470976006*^9, 3.9497586590450497`*^9, 3.949975818635456*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2e09074e-6cbe-4584-ac44-19c7842bb23d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1503860#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
DgfSfL2yOGMk+B83N0Nw
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1503860#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV13k8VF0YB3BJeEWlaFGhlK1FVELpJ3uLQgkle5IWbSqE9lKUkpm5smUt
W5GtSEhSSYslIUn2GTEz117mPc0/8/l+5t5z5zznec557iJXb+v9wkJCQq2T
hIT+fV/TXXhuRVU7Iql/n7coqG+82fy9HdN3sdrun61E4oh0U9LPdrTF9B9Z
YlCJMLnN6t4d7VhSTVttEK/EQcf8ykl97aD888NlIt9ArjN8isqfdih/c3pt
UF6Bc4Pbgo7LdaDO88RjZ83X8JxzuVpPvgMn+hfd2zjpNXbpFi4UWdwBq2MW
IszP5VgRoFbEUOvATTVBcfbJcrSIiI4W6nTgl4bMm1MvXgEyL0+I2nbAyL0l
bqlHGZZrD5V+3NMBxUm/Exfrl2Gu3QppyrEDg1NE7a7LlGHg/v3Hyzw6cDhq
X1ZweSnilM5yLH068L1tuZi5WimEV2t63A/vgIWrWt83kRJUWCXYr/rUAYPE
zMOT/hRip3r/xy21HdiqEXYlvLAQrcLrTfc3dKBlQD2mwb8QY0+/aEW2dqDy
7pxlpyaeY+VsYUkRbgfM/cP2FE19Dkajc/FX6U4YHtwWPGFcAKWn6Wt4sp3o
2l1Z3TGtAE9ujqRKynXi78iLUrdv+Xi3IYy5aXEnPGPLNi48lo+JmJfH0rQ6
Ye8q570nMQ8ebvJKQTs7IW38alOqci74670oyrYTxeylzUajOTgvkzc9Z28n
0mMXGzlU5SDytcWfbrdOjB4fERc5lYNqlYA661OduOFgaSDx9im0OU3XlCM6
ccKy9GDN9Wy8KleZMKA64cNRty12zYZl9MlTe6M7YapgyJ+lnw2v7VNdwpLI
+BZtiWO8LMQ80dMby+1EYYtKJMMtC6I+FOdDfSeSu66IzbV9Amv/ML26xk7k
bgpa93LdE8RcuHa9uaUTfWdVOUVzn0D7ls8Sdmcnkj6VBRzLfwyPFCsH8eFO
ZFteVVr2PhNvvv1XZTinC3tVqI82MzIg0yokt2V+F8zEtKckNqXDuXP4gJVC
F2ydV2y8nJKOEV7HZGeVLjy8GnyPNkiHqmTZ+oB1Xbj4a1eGl18arm/0S8u3
7ULB0JXTnqKpqDU+Plq8twv9X8SfKTc+guJWT7MKpy6ssrfQdM58hALb3b9q
D3Qhdv+Lu7B7hJ5jWvN5Z7qQuaUlOCTrIbYk9N5YzupC6LHSRgvfFDAe/WxY
HdUFdbHEevVdKWh73KC8Pq4L64JV3ntrpMCvqKJs88MucCKu6a/oSkZqXfyY
R0EXunZFm9vtTcZU8b1eDxq6IDfqs+u6TRKSz5h7ujV3YeJYzZZzOkkw6Frr
sbS1CxK5oSlF85NwqmKG66OuLki5y9xT+JWIlssV9llDXRDpKI2390nEk0la
m0tlumH+WKVFkJyALccVzC7N7YZ/2Rlx91sJaG+VNDFZ0I213EuH/judgHkl
XQZvlbqh75awTdY0ARcDo3U+a3UjbE5Wr0JPPGzGxVV/WnZjo6Klhq9ePAa8
hpYm7OqGdcrJfSlL43Gj8ZfSfrtuKF1SXC8lHY/iZ8UKPU7dOL9epT6g+wFU
z56awz3aDa99Grd/UQ8wRv8QnRTajdPD0jcsRB/gnvsHkVdh3RDaKT6UT8dh
Ze1z4Sv3ujFtSu9vq19xcHsaMSEe1Y0mUWbqzNI4VB3fOjQjrRu8h4PnnwfG
IfZ3Xofi225kTlu8YJNwHBplnkms+dCN2/smtFzaYzF7faGG2edupH08RMWW
xyLk2kvfI9+6ET28LVr7aizOKlZKPe/pxs+cQxVZUrGwtP62dqdED1Q5ngFi
K2Jw82zTHo9pPXAqo6wPzoxBRcz3IN+ZPaj/kxgxfyQaG9g/38bK9eCIZuPY
kfJoqF3u3cdR70HNFeuubOdoCOeNX7mytQfjI7oV/6VEQb/5byprRw/yFuR9
nXEnCmeFhT6l7eyBiMfe3L3+Ufi9XUTuy94eOJ+UHnpmGYXGLslM+cM9cHzp
2np54j6ezpOvzw/pgee9nLkv9t/HbyiOvwvrgaz42+zMnfeh7rFYseVeD7I4
X05923QfcdnKXiLRPYAopjTI30fIVo0Jy4weTN42vcyzKRLuAQbKvR960Frs
vszeMRJ9krrj+Z97UCVV5H3HMhKnozQ/XanrQXC1yXO+YSSCCxf7Lfreg0aO
T8Ea1UhkjopU23F68MOpoj+KpjDq89bnjUQvtA9u2J15j8LFKWVbIqb14nvx
VV3bYAqSEc8V3Gb2Qn/5fK5SIAX5nLS3E/N6MdWcd1zFk4IxL3Shtlovzg3l
/a3Sp3DrqPXrRLNe2MXGqJn1szBnYkvkia29mJhIDRHpZCEu1MjbYEcvStMM
/VqbWSDb7bzm3b2QNRwv5r1joaF39pFZHr0IE5eMOfuQBaUDTTIXL/fiwcWU
u289WUgfqunZcb0XNr5CH7a5sKB9tap4YUgvYnNjpHrtWTBPeuH5LLwXrarp
rONbWTj6K7ZoIL4Xv14LFWZosFDg5O7uVNoLnbLFrgl/mBBaKC4t97oX86d0
L3ozxMTmxrQXtZW9YKg91BDiMtG4iz97y6detNUFOGV1MDG++eLbNT96sT+Q
ZyPxiQljMeXT/W29MJqr9ebLOyZCyt8uTu3shfU6k+7M10wsgPQ5hd+9OLpy
+qkHhUxsXBO3UuJvLyzlvN28HjJxlWvUVC7Ehqn6TJH3CUx8zOy6FiTCxvD9
sWr9WCac1TR+0lPZmOL6yciewcQF+eLwH3Js3Bl5lux6hYly8eaRHB022msu
2VEeTEhWBCV5b2DD9q6qg7gbEzaXlKzVDdgokWlpu+rEROdfr7RYMzZepQo3
Z9kxIcYf3XdjNxvXVK8aFW5lwvJJtITJHja8X+5TijdngnVkU75gHxu7LD/s
Ypowodp9fYbPfjapRx+5dDCx5fucV06n2JBwkzT1X8PE3chCb7mzbAQxt7/+
pMlEk63Tgjp/Nm4Z/PZbrcHE4S/JPlsusXGc0z5JUZ2JW2/Wqq69y8btcbZR
uCIT9Ze/1fZHsLE/7Z6XhTwTCoYBF1IpNuwna6rKLmDiSVF5o8IDNviuYzmV
c5j4nLUzVOIJG7tlrZ4WTWfi+VJJl9k5bDw52H4zQ4qJRKp8zeICNjxKHe+n
TWXi9IW1zbolbCgFbXlTLcaEnNWcZQc/sSEQZHllCDEx+fXHiVO1bDgdi/8z
WcAAR+f6l/MNbOxz6k3y+MvAS8VRX1YrG2r8mNwdYwy4DzRWvhlgg/N9+6IM
mgEL9/CoGpoNxnfeS2c+A9oNW4/9GGHjAKfimAKPAfGSojnDQhw4ev84/aKf
Ae5qH7bwFA7Ob8y5E/WbgcaUFS+n/cdB9JpJG6/2MZBxO8ZDWZqDgY25n8+y
GWBMttXTkuXAi7Mu4EIvA+fPTJ+2cR4H/bs8De/1MGDtdD7XZhEHtWpWSV+7
GFhfoxPsspQDty+X/hMnXmLGdTiixoGmgq2MYScDQytdRa5ocvDj4mjGl3YG
fsTLNYSt5cCj8PoUNeLK2TVpUbocrHZZF3H9FwNZN24GPdTnwOqgrCG3jYHI
CaOdOZs44Lc7c12JL534o1xiwoGl+8/r338ycLgzZ+z9Zg4ESQ6/nYl37zlS
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
22xaZLO38WH836e7ccQvpGYkXbDk48e5066bORTiAk++UrQj9yvqud/tI/no
rCfkdICPzJW3tYQHKMRuqHljepAPIeb2v9uIG+Yevr3yEB8b/uPMYhJv/hwt
P3GUj1Q5/lI1Lqkfw0n60af52FN+q8OYR4GnVOnbdIWPYS5Xdi95f1km5LLp
1TU+1t05XBZJ7N48Kp4WTJ6XcvPlN+K6e8tYfqF8WB/tS7cZpFAw5XbevAg+
nNlhDiZDFAK7bPi2iXw0TFW1EhmhkP/q93Mk86HdfWeZLvFA7LWLKg/5uLSP
cjhC7GL3THo4jQ/H2uEXNcTGbxesYjzlY5pU6i3WKIWpab8O15bx0cdZmyo8
TvJb3jouu5zEX/bRsuXEG+6U1IRVkP9zPFvKhvjwmWg9i3d8yL2OpxOJq41s
xSs+8/FZ4ZWN/h8KnXmv1yfW8LH6auovF+IJtTXeF+tIvFqdaq8Qa8yQrt/4
jY+MYOsf74nDmt8l5LeS+WsJ4i3/kv1vh+7XiDY+lmdO23GMuKQsReJUO5nv
SUXn28Tch5ePr+rmg2nrnv2e2NpnIx7187F1SF5Bf4KCV3f6iWtcPk40DozZ
El/aOz95P5+P3eVD+ieIczaNSC4e5mOZUcFYIrHstOzGyAk+3h7M2D1ZQGHl
BcVpvkI0Vl8oPzmP2JS+tclWmMbWpRvHVhKfbjz0cJYojeW23sZ2xLcsGpu4
YjTM2rPEDxOnlJhP//QfjZTxw+uCiBuSl54OkaLhscy1LoF4YN69R17TaTz7
rGySSyweKvzdXJqG/QJfxQpi3ZM/jKbI0jg8v0mukzgSlHTgAhpZbYrKCkKR
yM4WM3GQp2Gi/WN0GfG7pafP6inSqI+zXq9DPD51548hJXL/7kPiO4hlgkpn
1i2lMfcNdc+eeDlPw/SpCg2DyNu33YgdGiQzvJfRuC/+64sP8amt/q0WK2hI
bHs7P5A4tLhn1nINGvxN12uvECdr2plJaJLf57j/DSEuTqzw69aiEdsZxwgn
rp+zNrNiDQ23u0FxFPHvGwk/E7VpeHlumR9LLDohLXtJh4auuqFYIrHC8fPm
Lno09j5NdX9IfB2+0z030OjpGAtKJx6QOlF/dCONhiE1+jGxfbNXtI8Bjb/G
t0qzictS3dzPGdJQmBfYnUOs7uuw7JIxjZL4HQfziMPNbHjBpjTSxu2M84n/
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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1503860#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
2l9YLIu+TkLpKeZPgiCw9V5d46cQEv4PeLJqNg==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1503860#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVU3k81IkDlRWSDsdSiEXZpF9qOxbZ3kTrqn5C0pZYkaNIpNS6OtSGVGtp
a1Z8aeRMmMEY1wyDmRLZKCvUTqXMZeQ+v2vf5/M+74/3+bz3/nmGx0NdT8jL
ycklL/A/zSCCiss5g6De/w98+MVQTITPB0FRqIz2O8yHRNVyprJjEIMc3ZCx
PXycT9/y4lrXIHT3axEZW/hIqDb6xbBvENdVU+0tl/JRPKXQdlg8iKtOCTNJ
9TxMneOfa1ERInrNhl8TN/Jw67RrE81eCErAgEhNuwXa807U8L1CyCu+Tw5R
bAGRbBtKcRbCjNd5t2+sGfSibat7DwmRL783ZLqzGd1CrRANfyHcVhsYr01t
hnHAG80r8ULcvbPinYFWM5jefn7eHCE4Z4S75Nc3QW6NsppOkxDxhkmLyNVN
cOwprO3kCSGJV7FTVW1Cz8ERLacXQnjvs5n1kHEx43iFv+2tEG0aFczSKi52
bSM2qcwJcWB+5PFRZy64yr2TDAsRVOL8Tk1da4Rqc1xOqLUI9Nyhmr6LjXC/
auy6gSJCV56+wouQRgzMnSzMtBehuE/HtN+9EUojU8cSD4ngkqb5LMOkEU59
2o3eESIcTr9dnPW0AR2lbskqJSJ0/7FmYpteA1jrVH20GCJYc+jjHSsbQLvP
3WbEFKG/V+dt9OIGnL+8vdeSvdB3q0pnVsqBjou2WdALEfytYrQyGjjwk/Xw
WmQifCWZdPQO5mB803GFa1vEOBP1R507n4232Trdd7aLUZlWEpBUzwZP62Vh
uqUYvbTIktZyNqjztm6M3WL4nb8jDstmA23rst+7iDG+t/HbH6PZuBEyCJvw
hbw14a1y37GhW3QmiiwTQzG1x4LrVA/XBAOyqUKMilOyqlmreiT6t125yRLj
3n3mdjuzekx+szFxdYMY00E07lLVerxK+3Rva4cY78Yv/u3VVoeUOK+KgKGF
PZddVqgfqoOy277hdjMJNtpPbtMLqwVl80zEXXMJuu2T9uz1rUXksoJJz60S
lIWMsG+412KgRUlOaCVBxvKW8k1WtWi0blyu4CSBWK8uaa1CLWJNrDZaBEpQ
cNtRP49ag9GpbwMImgS7uz7cTuuoRmuySI2ZJ0HhgdSIU9xq0Ayf1LQXSUDO
3WtyrqyGu+MOdZIhgXIr6Wn7oBoV9/bUHmuSIOGMh1VnUDUiv/fR0B2Q4Mg+
4nXS4mpMR1Dr076VIkrFPqfDjoW/lL1OPjaT4u5nZB7YyUJBuuHXTeZSvGJ/
X/fGnIUj3LyTo99LcbHW2FRrNQvVGpVfuzlIERn7o3C1uArRZS9PrQySgsM4
aOycWgVySHVVUoEU+q6vYhZLmLhbGkW9XSzFzJ8CNZ33TGw6K9RLLZOCkWd7
w+JvJjzHWwwfsKQ4/1Pm85QmJqpmr5g9eSqFSss/y2oymDi7ZGrXS6EUJhfM
Jjpdmfhk9PGErtkQ5AZqtZ9zKtHuXksvLByC6bBr+ClmBRiXjAZOPhlCDCf1
L+PSClALf121gT4E89mEYEF+BfwWucbksYaw7yA2h/9ZgemiAbsc/hAER56a
vYmtgInCyp6MT0NIeODParWrAH7aIsdXk6HgDtd1vqccfyjFm9Tsl+Fc9Eix
hUY5jkxS3LjOMnh6bnJ4ploO/cG5uFYXGTJH/D19FctBexr5d6+7DHrBUz0P
pxgoST51c+6YDDua286feMcAT8Pty67TMnSbLr34sZiBaQOjOs4tGSj3d84W
OTPgZcF2b2mXYdLE94t2Jh28Yxd6ijpkmN9zYetWKh3fXd3snfJShnduAfMu
aXQotRGBx14v+I3JRtQkOkp8L0eN9MugLo6yOniBDvnbNlkGUhl+Lvv5aLAr
HY8+csWRqsNoj6FZayyhQ5LCv7recRiCXIHrpbgypHGCUotbhxFcMBGrfrEU
Bnmh1Pb9X/C22nks/0EJzjBtMu2av4DB+jhJef0EPelF1wUOIxDPRMT8/2ox
lha+D+5sGEFGEI0UBT6GQdglBx+rUWSNecfOni7CvqUMRY2aUfwQGl4uuFAI
SjujUWf7GHbtnvORzy3A/oB9vvbMMQhsWdfauvJhXek4udxyHN7qaqWUVfkY
2ax5c2PpOBSs/Lsen81DQ+w5+dCtE2gwb9V805qLn8YfRio9noBgqVYgzyoX
f62zEFitnQT160BGFv0R/Ex9zX/PmcSSL5/Xq5o+Qu2ho1G79acQGnSd/1tx
DswPC/M1s6YQ1zVBid+cg8Crdq9/0J3Gsxid+mQ2DfH+ytOLfp9G+YqdjQwP
GqrW+JBCzRnM5W53XCJ6iPL5619tuDWDMOUx3fmEh3hKtxUmq80iwsje33rd
Q3C+8W++mTKL6C6KT3hzNi5Vumf9ozKH+gg3j4iwbBw26vU6mjyHtg6aDX9V
NiYqzHXNlOaR0H+drc7PwoWvBlvTYufxwbp7JxGTBfW1lj7r5EhoJKVx0jdl
4ezpQ6MqF0kok+snTnwisGqHH88kisQL7ScO/xsgUDMXlm4TQ2LHq/6W0Q8E
FJOT9/xymcSNk8ud4wXEwn+4qYMJJEhWRFxOH4GGz99t51FJtIfTvGQvCaj7
rjh/rWYhX+8BP5dNoHLDGqesOhL/nJWwIuoJeH7ZoF/LJqGQcqN7dx2BR5ft
mke5JI4firjXW03AiojR8ntOIt9lwlSzksDxPlGFTT+JlLTjiUmPCSjlTCV6
vSPhwPLdebSIQFGwkvcvAhLGtoqrzAoJjM8YKZUNkAgqWXzwWR6BRJ0jHoZD
JAINn3YtoxEwFwSY/TBMIi+sTNCfTaAz/xx5eITEb4OfdUqyCOhb/pZ7Z4LE
gWmtZW6ZBBrlMqOKpkh0D081r80gEMgrcubNkKC0LSoaTyegeodl/GGOhKfD
2hrenwRKPXgTJEkiWc9jgkol8C9aro0z
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1503860#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$1503860#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVk3s0lAkAxSe2pmR76bQ2ZTLJtlSKrROVK4nYrFN5NOVxPJJeJNuqrGak
Uq1RkYqK5pSPmMF4E8n4TDNWIfZMWqzsyiPNfB5hPOZb3XPu+f1x//1dI//Q
/Ue0GAzGLzP9yl5Te87dAiVSkr9GDq/RV0aPypXYfv35vi2X5SibumSWW6dE
z+zAwzUH5Aifp7Zp7ldCe2PGm4IRGXrY3UcMzFTYb8++ItohQ4N7ZUF2tgpF
Mru7K/qlKOSxPx7PVYFszn9a3ClFSnasvmmBCuY/b0rzVEgROGt/VGa5CiFB
7cghpZgQfnRIl6sgjnp7RZQmhck3i96n9qiQGEl3Kz2kAGcTQ76YwnKTajO3
ulrcY142qXCh0NS7YTS8hsShcdsDpCsFXolCOFROwrBvmlu/j4JerP1ARD6J
p3URrW3uFAKc5QNJAhJ5/BNx094Uwsr9nVg8EjK9A0M2IRR6WLz1/jYkJljs
F9XxFGL7dau4VTXw2frS/VUDhWTm68butxLIvM+9FzZRqJ3vrN5XL4FFzEbf
hGYKud7RTyS1EjDfPA72VlB4WHj/lLhUgryA6MjhDgq7Mv84SaZKoHXTTsBS
UvjV9ISk4oQERDc5EKE7CHZ6prJtrgSfE+Qxa50GkT3UyvnOtRpJ1cfu5NQP
wqdNwY1qrQIrMzSlwWUItrZ6x1viKnG61C7NQToET6u6v2cVPcf7h8KrXXuG
8WiFfvv3E2WYn/3vyRbJMCQxYdLE26VghfH2+FmPIN25Q2PDKcHe+YVz9CpG
8Nly/f26dcWwbSisWb75C7bmxKZmWBTB5ejeAMfSL1jnsrLZEYXYXuI0vsBq
FGT7tUWrggswvHFp3DrxKMxMzjXdEudDcvGsVqjlGHxhue3ulBic0ScRTNEY
dLNad/P8xHi7ZmuXtfE4PFLV1xpb8hD4Y4B5Yvo4LjFro9wc81DpcThyp6Ea
SwoNL1gm58L8YP+zpQI1eK7hHjqCHATHOCh2GEwgn9rLPCQT4XLQ3IlZiRPg
xPOSbjJEKFvpR/cvnUSNsY5b6k9CFGmuapvGT+K8l4nR6uhs1BXs6ucvnkJG
+rCXrzwL1auCpHEJU/jznsbtnWHWjEfugg8603iQYMdXxD7DQXabz2H+NHr/
4TZvGMjEWLG5gRlTA1FLluidXybOaffVJ13UIMnadtCxMwNLjK381jBofOJo
B0xzMhAe4jGic57G2TjugrVdBPS3BMpMImn8YLP52IpOAhXTYQ/tomhs43ev
WdxBYA6fb38hmsZsVSU52UrM/Ie803edhr/u3KS/mghIei02y1JoKNo1Rx5U
E1gSsPC3KxU0JO3aUyECAiWmK50FL2jUlCq8QtMIeA2ZGla+pBGopzE4/YgA
Ee0gHSFptN5sLDyTTMD6cdSywNc0SMtwl99vE/Bv/1Rs10HjiYWuliCaADNd
fcOnk8bUjdfWGVwCwpNM3wtdNHZrWI2iKAKjk2xm/kcaZdx5iyrOE7ix/JCn
kYrGst3KD21hBMy7jprtGKTBrrKc6g4l0PLsLH1wmMZRgw1nVKcIGFrdzrg1
RqPPseW09nECNYy0SKGaxp44J/W3wQSCZUJX2SSNvNw57fpBBHRvla/+b3pm
j6cMjAMJiD1lYzRNI3zhQJG5P4H/AVDDidc=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$1503860#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\)(\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"\[PartialD]\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\)/\[PartialD](\
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\\)]\\)) \
(A/(m*\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm]}, 
    AxesOrigin -> {0.5000000306122449, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {575.899169921875, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Derivative of \\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) \
with respect to intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\
\\), \\(g\\)], \\(2\\)]\\) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\) and fixed gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\)=0.7V\"", TraditionalForm], 
    PlotRange -> {{0.5000000306122449, 1.999999969387755}, {-0.5, 0.2}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.949185346575508*^9, 3.949185363387055*^9}, 
   3.9491854213797398`*^9, {3.94918584681061*^9, 3.9491858660195007`*^9}, 
   3.949186146819792*^9, 3.949188160293127*^9, 3.949188478455657*^9, 
   3.949352484828315*^9, {3.949352531902789*^9, 3.9493525622595577`*^9}, 
   3.9493527104654016`*^9, 3.94935359352211*^9, 3.949353760239811*^9, 
   3.949353825735661*^9, 3.9493542594761143`*^9, 3.949354352099759*^9, 
   3.949354462086405*^9, 3.949355424952259*^9, 3.949718111886581*^9, 
   3.949718611191004*^9, 3.949719018115847*^9, 3.9497193164829807`*^9, 
   3.949756834289926*^9, 3.949757009473153*^9, 3.949757539402315*^9, 
   3.949758470976006*^9, 3.9497586590450497`*^9, 3.949975962517906*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f686b251-c170-44b1-901c-cd52d92fb993"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"A", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}], 
      RowBox[{"B", "[", 
       RowBox[{"0.7", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"5.4", 
       RowBox[{"(", 
        SuperscriptBox["10", "15"], ")"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<<\!\(\*SubscriptBox[\(n\), \(-\)]\)/\!\(\*SubscriptBox[\(n\), \(+\)]\
\)>/<1/\!\(\*SubscriptBox[\(n\), \(+\)]\)> versus intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) at \
varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and fixed gate voltage \!\
\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
      "\"\<<\!\(\*SubscriptBox[\(n\), \(-\)]\)/\!\(\*SubscriptBox[\(n\), \
\(+\)]\)>/<1/\!\(\*SubscriptBox[\(n\), \(+\)]\)> (\!\(\*SuperscriptBox[\(m\), \
\(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.02"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<<\!\(\*SubscriptBox[\(n\), \(-\)]\)/\!\(\*SubscriptBox[\(n\), \(+\)]\
\)> versus intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \
\(g\)], \(2\)]\) at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and \
fixed gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
      "\"\<<\!\(\*SubscriptBox[\(n\), \(-\)]\)/\!\(\*SubscriptBox[\(n\), \
\(+\)]\)> (1)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"1.2", 
       RowBox[{"(", 
        SuperscriptBox["10", 
         RowBox[{"-", "15"}]], ")"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<<1/\!\(\*SubscriptBox[\(n\), \(+\)]\)> versus intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) at \
varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and fixed gate voltage \!\
\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
      "\"\<<1/\!\(\*SubscriptBox[\(n\), \(+\)]\)> \
(\!\(\*SuperscriptBox[\(m\), \(2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.1"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"B", "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}], ")"}], 
      RowBox[{"-", "1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"5.4", 
       RowBox[{"(", 
        SuperscriptBox["10", "15"], ")"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<1/<1/\!\(\*SubscriptBox[\(n\), \(+\)]\)> versus intensity \
I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) at \
varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and fixed gate voltage \!\
\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \
\(2\)]\)(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
      "\"\<1/<1/\!\(\*SubscriptBox[\(n\), \(+\)]\)> (\!\(\*SuperscriptBox[\(m\
\), \(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.949719473101568*^9, 3.949719473474555*^9}, {
  3.9497195081167593`*^9, 3.949719601245789*^9}, {3.949720692539976*^9, 
  3.949720750016273*^9}, {3.949722279078019*^9, 3.949722292632574*^9}, {
  3.949722328351861*^9, 3.9497223850499268`*^9}, {3.9497566614926357`*^9, 
  3.9497566712028837`*^9}, {3.949756767391868*^9, 3.9497568239804993`*^9}, {
  3.9497585103914633`*^9, 3.949758590279215*^9}, {3.949975433668974*^9, 
  3.949975481033503*^9}, {3.9499756452403307`*^9, 3.949975732882428*^9}, {
  3.949975764887885*^9, 3.949975783287704*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"59d76fc6-ced4-4ef8-a7dd-4575ad2c4588"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
dTE535a2ZaNlFKwsygrdls/Aq/cbuKkV5Lu1S5obh5xXoea6ZSUF/4b2HynI
JfH7ONNltRSEiQpmzt5nYKnZHfK8UMAPaGicuUfOW5x8SK2egqsvhG2i75L4
QSEvr76mYDQz9sFsJok/7udr9JaC/qMPIpozGOhuc2bVRCsF23ovWJbcZuCP
ylP9Ge2k32uPX32YTvLROpxg00VBkdnP6tI0ks/1fbsluCR+7UBc6y0G3pr+
W7iST0HuxFCiMLG20/Zij17S/x49RyGVgSX1Rsc1+yngLcqIv5bCQGMDA9Wu
QdLvnYvrR5MZ2Ji07M21EQpO9K1N2kdsy1gUuOUDuc/2wgdtSQzsOzV33RcB
qVfM/nQnYrd3kh/ufaTgs/4L1dlEku9GkfQDXygwyPZ9kUV89c60lew3Crrn
15gcIFaQmWDXzlCg/rzKdBHx2yehwSazFJw9GW7wOYGB0ac0RF//ouCo3iGL
FmLL+VUBVnNo+OdQxOEnxPL1diJdDBo83O8vKyB+e+6LvwOLhoaia875v9cv
jRLqF6OhaPHutvLf69u0/U5I0mCttdq46ff6wGezAmkaWs/Unhr9vd7A8cK/
cjRkTdyZL0/yie6dmZlRoOHBjTwlY2LL67Hel+bSwF/MV/chltus942pQsPI
y/WST4ibx+vPhM2n4crf35JY5D6iUo58kf2Ths2edil2xOZmQl5xi2hoPFfY
U0ws+z3x4/zFNFx2cVyqQu63OXu1e7oGDZfMa00DiKNsmwWaWjQkF6DKFLFM
CfPDKl0ajiQofPxI6tXknHby0UoafD+x031IPSMUNowY6dNAaTtsliD1lnZ3
G9yxhgbh1ML0TaQ/mhZKuDSuo2ErN0+6lziiKavP0oiG9yxmdRjpJ6nl3fTB
LTQMDurunyT9Jjm4rcfTlIaFad1qwncY2BBL2U3vpsFioCPwLXH4Vp/Oi+Y0
rLNgMbJJP0vczmsLsabBbfmROudsBoofnP/mlgMNQjFRPQpkPtgtE89eedKg
8+rFr9/z9cI/bKvFGRqsZAeCd5WQ/tDTrGk7R8O17XwbJzKPrIj9VbQvDXO6
d51OIvMqavK8fCqYBs/WyW96ZJ4ZlUmcxck0yE3qf2yrY2CX0dad/FQaAj/5
heq9ZCCnfIxKTKfhR6WLd3g9mbeSjfLyd2mIa01hmjYyMD+X7yVUQMN95p5U
6i0D7ZMXr+fW0bAtyeb6QR6ZX++c2rhPNNTXmMrqf2XgScPHnWKmvZDidPT1
kCYTc0yc0p5+7YX79IZFz/2Z+GV0nuxA3HtYKsmq39HAxOK9O0RitvZByKnh
pg45UfTbGXiraKAPAlL196aaiKIad1dHRmA/BBSlDEp5i+L6NQExKvoDwI6s
SC7PEsUDf76eFm4ZAE+No4ni9aL4pf5ar5v/IFRaFkd5j5H3jGHvZblkCEJP
cITz2CxU4BXfnlM7BDoC8boVaixk+vpbrXMfhiweWBesZaFQtj2nV34EXA+H
dGqasdAjkXNNvnoEXtVa/UGR9/eJzlW2nOsoaLa/ydM5zUK5XR7LL0uPwZfg
mInHF1jYo9vc4l0xBu6GjkbcEBbmpcKSPvsPcD3+872mGBYe5Pwlp/rzA/jO
SCWeTmXhpcB0/5774+DUltlXd5eFuUOqSdJmAvh2KfZCNIeFV1MCHXl7BHDJ
R9mpkNjZ8oPGQwsB3JKJXNNKvKCiIm+3jQDaRS8UKOWxMDRy//NwJwEsOaA8
fJP42F8Jk+LeAhisuumQkM9C9QDFnaw7AggJU86IKmThz7UXpNrvCcDpolQs
h7jzw/u3d3IEYBfdebaJOMqm8OD2fAFwdGRkJYtY+Evb0jOwQgAGVQ/Dgoh7
3kSmirQIYK3M1eJzxSwsDZo63PJOAAmxIqVxxDEbHJZldAjg75HKnCJi06wV
RcY8ASi8UDw6QVx+rvGl/7AAFM/06x4tYWGc7upIizEBzO1Z8DiA2L032UpN
QPK1bFh3m1jL7BS/6rMA2BNJElxihnBrZtSUAGSNG+xniKniDSccZwTg9Sw0
Q/kRCytOZKzUmyX5dXI7DYlvLpT48uuXAH50vBK2JP4/VUOLoQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVx3k41AkYwPEZTYuE/GbQ5GqcicFMqHS86W1TUhsdOiU7lZStpI1S7Vgk
d2VFaiLVxpRJji3HTkmuh5SjYWkUQ47hh3Ukxc7+8X2+z4flc8LjkBKFQtms
6P+7Hup596J3x+rUmzFbOSIu0nDByXamPUQGrp3z9DEXl9xJvpXLXAcpsOo+
9xEXN9VKnt5mbgdnuuzikkwuevImSq4xeRA8Yv5iSQYXP9hexlhmIFSQk6dt
bnAxTfuniChmGPQYTh2be4mLfJVciyvMRIjpEsh9t3Bx1+500dDwPXDZOWzE
7uSg2gx/n4uhCDpDD/oXhXDQzH2w51V0HjgT565ManPw7JvlkDz6HNTfW59/
nmGHunlaUipVDL3mF/S3ONphQQfW1K0shTlHvziMBNliqd9tvd3yMiCCMr3E
oTY4Zr5K87F/BRDGroz4JDYqTQrn6ZlVg2zmSrlOvDU6zngXbMuugeCDRySL
rllhTZj9m/LFdVC+Vnqx/vpiNEron8wcfAtN993O2wZbYv9Eu7TJrh6u5ZyJ
+35sEd7rK6rWiGsAJ+HEqjtogRoGf5IyWSM4RIRGqRqaY8zR/MNppu+BZzR+
lTPXDMfXCGW+lyTQeN2EWNptgoHcsjydV82QNbLLT95ijO3ZZdHvWP+AR4Dq
yOuXLJzya0y1PNcKKfZnn7mXLEQrZ+Xpw0VtwCk1TVbKN0KXu6wjObpSmFaX
+lQMG+BZgwPGn/a1g2SnJEV8Rh+t5TvUJJs/Qsnr2NVUSz2kaw6plH39CCFV
g38M9zORJk4Vmdz6BEXlH7ba9c/HY/ZFLaqbOmC5t8ro7G+6KNzok/b3eAdU
V+qpRdnr4lj/gnndSZ3Qmk1p/CFJB/O3ucxKXCeDIVr01OgsHby0IfxOXrcM
5j91DnFO0EbWB9fmjPAuOJme8CvbVhudloYlMrnd4Pa84C/HJgbuM6ybpDZ0
w+Ec3tCeWAaOVcd2nOR/hpaohy6HXBmYTPMK9DDtgdW0Qht/BgPp0vy7SmU9
cH1Pazq3m46zL/C3Lz/VC5+z4pa6FdKRkukl6iD6QKAaKXBKomPATVEsUdoH
47ktvimn6VhiFami9Us/UL4F1B3YQUct1wDrUA05fDsyylNaScc29tuG4GI5
nBv5V0nfhI5PBGAq8xqAOgtx9JA6HfeLHLUMpgdAs0+zqvkrgb+Fp/Pbsgbh
R9q4ceFnAh/3GKRquJGwkCJeyJYQGHk73Fu6hYSbQYOVXe8J5HkMmGW7kyAc
+T1CoLB+cfGTzZ4k2Bo/cp6ncFT83vIYHxLWmYcWjDYS6OuYMjwnmITJ/YNx
L+sJNA5jbFB+QILvg+F0vzcETi8LUZc8JMGhVk1qpnDLQGf9AyEJVsFf2J9q
CUzwzN2/PoeEPSeYqrsUnlnscTq8mIS9Pmzh+hoC297FC2Y1kKDj75JoUU3g
s4iJnxuaSLA5Pq0sqyIwccUBy4xmErqwJi5N4U33bfLWSkkYqrzYxFS4MKi2
it9LwhSLul69ksAktkO8u5yEy6Uc9+oKAk913NrOIkngXTU4cVnhRW7H21+M
knCQ/72DqjCN2ngvYYIEe8/WZeJyAj/mr/Dz/kqCQHdjeojCxX4ZtnbfSVDO
WqHvpPANI7WxmRkS1mg8zJx4TeB/MvFG/Q==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV0Hk41Akcx3Gkx+gQfjOjoUkjlDOGVWnzbXx7TKVrxFarELpo15EesfXM
To/RRTwekVBCh2aZYlSbI8dstVbEhIhxjXPG/Koljwo7+8fneT+vfz+s4Aif
ozpaWlq7NPu/O46OttSM+Xl030za6yxmoy6aRvYyXEHfzGdRaTEbXW7fyClj
bIUXewPusv9go/ebjtJchi/U5jvwXYrYuD90uiqNEQqtr7tqXArY2LPuIiYz
YoD319wZx0w25tH2JF5hJMDF6ujTS/hsFFDK1lxmpMN0EEmc3M3GAwfviD9+
KgTT479dcxx0xsXzgkPclWKwWZCXVHvOGa146tH6qxJQ6nVyltCdMbZpI9yY
/BO+z8+Gqwqc0ERiJNfWfgFRby+UVbs54ZMBbGz+sQ48W6v8GuPXYV1YrtlB
lRSOSB0DPRMdccp687LiX16Bx3KthIs5DqgzIzI0s2oAF1FaLC3LHt3mg57s
K2mEJo4eNfWOHTYmuDa9tG2Glw856siHtmieqpwpUr8FO3+Jue1NG1RO98rb
nFpBFM3t2ZO1FgvHKxoMrsngullqa6RgDRow75MKxTuo90oZYkdYY9LJ8mN5
lu0weddky2SUFX7ZIlKc4HfAK9nwG2GoJcawpRJ6/XugsJgWwZGrsbdEerWF
1QVtVXGdSdEW+C3sXbZN/Adw3cQ7WJ7IQjuO3tyxim5o/jChTn62Crn5rOOP
TeSgMDTKiJGZYywz0KL/UC/4Zdc/9Y9eifYqv8Udu/pg0Vnu9bb1TCSWfaRI
v/aB9Td10/WFK1D3RbZ4dU4/cIUz1nv1zDDctaJT33sAaoyVwf2EKYq2B+dV
fxmA8gqKV5knA6eUpobDGYOgfzqek5a5HMv3cRekb1VAu+Ox1+5TJsjfJrwt
GVZA7lOSMRZpgqyeHe8LhEPAX5LD/DxHR/f1CekM9jBwR/7tyUmj46GVzTPa
smHQeTD4fHYjHacakgciBSPgZZvPyRii4Q3dgBgfy1Go2Xzts3MeDQl5eb6O
dBR882OptSE0XHhe4LsxagyqVtTJ+DY01CoKEA8Yj4PCvUumN0PF6JviZOO6
cTCkxPMWNlCxyu4SxehXJTzLX2tclEdFox3R9hcMVHBqH2dN/Xkqdju8lcVV
qiCg2H4wxJ+Kj26BpSJgAhqkndarPKh4WOxmxJybAAPOz4FVq6n4u/COoPuh
GiSFjbTD+lQsHmVmG+wkYTZApM76TOClXGGQfDcJli0uWhs0DvWZsCrhkVAy
0uPU/onAFZWVj3btJyGFzSONNb6S4v8yKZiEpaua5MkkgSfcsj4tiiPh62Z6
3GUVgRYJ1G1690goPdJlmTlM4NyGc0s7HpDAoNye2aBx58Rg6z0RCWHnTim7
hghM3V922OsxCd4Z/VbmGs/b+pwWVpKw/MCZyQeDBHa3pNxaICOhfS58vLaP
wGeJ0yGyNhI6/tl56ajG6ZsCbQrek8DydvfU19j7rqPEU05CXeesPq+XwOdn
3/wtGCPhdWncSH8PgRkOP6TwVCRw641DEzWOGsjxZZEkKH/y+G6r8dqdp3pr
JkkIFxvyY7oJ1NV+V5g6TYLVkayTDI37yjeFBX3V/BNxNqL6A4GVYQXrnGZJ
2D5+KzVE40zzxVPz8yTQx2cbKRr/ByF+Svc=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$2983355#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\)(\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"<\\!\\(\\*SubscriptBox[\\(n\\), \
\\(-\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \
\\(+\\)]\\)>/<1/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> \
(\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {505.42919921875, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"<\\!\\(\\*SubscriptBox[\\(n\\), \
\\(-\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \
\\(+\\)]\\)>/<1/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> versus intensity \
I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\\)]\\) \
at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\) and fixed gate \
voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", TraditionalForm], 
    PlotRange -> {{0., 0.9999999795918367}, {0, 5.4*^15}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.949719637438786*^9, 3.94972077331971*^9, 
  3.949722408259473*^9, 3.949757777429014*^9, 3.9497588292861767`*^9, 
  3.9499760867050123`*^9, 3.9499761246251383`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"96929517-e750-4f06-a752-2f5d47a1e3eb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
vpRzXYJ3+Akb7m8Q+fO/rh//+ns3UtnwfzlUxB4=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
FDrrx1VCgxcC7Et/fzdGGV+7iAb/ByjmU7g=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
bisZPh1kWca/c47EGnW7N5PhP/wvRLQ=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
l/T26dQw/A9HmsWU
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
UBPhf/OTlWc=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3122443#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\)(\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"<\\!\\(\\*SubscriptBox[\\(n\\), \
\\(-\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> (1)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {501.49957275390625`, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"<\\!\\(\\*SubscriptBox[\\(n\\), \
\\(-\\)]\\)/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> versus intensity \
I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\\)]\\) \
at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\) and fixed gate \
voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", TraditionalForm], 
    PlotRange -> {{0., 0.9999999795918367}, {0, 1.02}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.949719637438786*^9, 3.94972077331971*^9, 
  3.949722408259473*^9, 3.949757777429014*^9, 3.9497588292861767`*^9, 
  3.9499760867050123`*^9, 3.9499761483264627`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"76170382-2e8b-4934-bb68-9753cc4989df"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVkXk41Akch91HNmfqmcKmqK3EJIl82+/KbKOonInKTZIrawuJFG2RqGey
teMmqcGQoXIs4YeEoaFRNONKMzl+sWE7rf3j87z/vu/z0fUOdfCTkpCQcFra
/9zvJ+ppEDv/rGAmt6B2ggUyVqvDhBQTNCw2tKSdZMH27NsZFRQaMnPy1M+e
YoFNJ/9hJsUJdzrstRWEssDFd6HuJsUXqRcj1lZEsuCN0R9WKZQIZD++HnMm
iQU5mocuJ1ES0ENxT7JfKQviFSo2XqUwsEnYcH9mgQVHXHPZH2YKUNosmJKZ
XQxKi/HH6DpsZIZn1NjSS0DfflrUlMzB3Z7Fnv4LJXC2yxxvf3yCa1sUm02I
UljFURNIStZjbIHLStlbbKgasergQiNWyFa5zdHKoDEwc43rZDPa/CDxkt1W
BnMbdquUBLeiaFp2NPlQOUh9Yqmu0W/HVZsOMLbMlIPpomeVY2kHGhgYGm2/
8xA6Eky6WjZzUWOHKXOnfQX8mDbx6f50NwaErOcab+fAxIJQ0Ed9gSWdOQ13
9Sqh4H1Nu/J1HsZcPKjS51QFytr3yLGxXqSmqs7eevQIrp2s9M/Re4nNHV1q
Y78+gflfWGMBcXw0F43nah2vgQjjZs7Kpn7kFq2tfieoA2Fpc3KP7mv0mlX6
atTaAF8Ce5mbogfwqH5d7KGIJthiKf/dv2YQY6WWB9WfbgV6nu6J8lUCNKO9
DnR90AVCjwbavmoBblwtQfc93wNntT3WDR8T4t6gC+M3onjgbUc9POglRLtL
3tJvL/Pg4CXJJL6/EHWtxcPLGDzYIM6f6QwTYk/8zYHnJTzo5YgaqhOE2NXc
RVUR8oBqG+7BKBai+k2xI8WsF0TRiRn0r0K0dhjufPe0FwwmnZX4B4aQFvI6
SbCrDzRUPig0fx5CwVCXJpfRCzL1TPb6jGHUsIuNCQnhwSmTmleKNiOYJXdd
kWb9Alj7vHP+nh9BDfe2frZzD8xNrFYdTx/FolaJc8np3VDpSJdm0MZwRfV5
LdN2LsRZJ2Zzxscw7wZDh7vUr/tmf39+4lvU5HIGG8s7YdfOBAbFeBzbI8c+
Up92wDEd7idJ3jg2ubsllCw8h7n2lJGw+Hfo+fs+L1nj53Bbxj3CQU+EspKW
FvNX20FDUJkn1SzCNN1Kv+DZZyB7Pt7J/LQYuV/ipAbcnoHEfXf2iPp7bKqX
1xHw2yD8L3aKeuN7DCjSmhM7tkHdlisKaiETGDhrlGM90Apq+8MNLipPotyA
8hxv6b/Brd28qNpJPCku5XnItUJZFuqNuU+hzxGf0OF7LXCcbaqm/X0KaenR
FwztWuBCYm784INp/Ed/F1V5noASkTZT2ZbEqoncfMtCAq5kJnoKDpLoszaI
Ol5AgK/DlH6pPYl8VUIhOZ8ArdrasgMuJIZXljH7cghISj3acs2bRE1fe3oI
k4AA0zszy6JIDIz7llGSRsC6hBXW8oUkVp+xivM5R8B3s5jl/CISVafT6WrR
BLyaGn1RyCIxJUrqSH0kAWkuFcf3lpMY1F1lp3WGgMXNDr8l1pLILHuQ9SqM
gMGe1CxpHonBitm3vPwJeHx5wYfXR2LoOXmehh8BDAuPTfn9JHo7jhxu8SHA
5q4hZ49gyV/myjYDLwKqIzufxYtJ3CZ+avTlKAHpW3ek2k+SGOUxmcl2I+D0
SIaTLkmi3qMae19XAn6yDRI2fFzqsxi92nWYABnJ3oK0BRJ5OQrKCc4EDFVa
BHp+JlHsFsw3dyKgNjDfiPqNRMuN/74lHQj480elucVFEiV7Us0L7Qn4D+mo
oyI=
         "]]}, Annotation[#, "Charting`Private`Tag$3322938#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVxX08kwkcAPCJFSlFd9zqyDruIuS0pPrxS5Tych3xkSI7aaLTy6K13ld0
nZG6W0VoSF2amZdR3bj0bKRF3iq6NJqdhvHkjhZd6e6P7+dLj9kbsnMahUIJ
+s//++/UttUNhHkZe0zXm8eJwMhn/r4eGgNdSly8feNFsEyYlVtJ88Wc/EIL
zm4RBDR3VuTRQnFFyPpA1V4RhMfqa3+hxaLrqSTbykMieLn0J58MWhJK7pw7
ejBNBPmfbzqTRkvBaJO1/J2lIuAZV37zM02A8p664lG9CLZEFEjejBahoUci
LU9YAqZTvEg/GwnmsHNlgX5isA8e0cr5UvRkljBZejFwHq/ErLG7aNtgomDU
l4KV1FxlYHAPjxeFW1IvSqBa7dPUAgRWUqu3jvuWAZGQtyBCp8CAWZRnksYy
GP/ac4448QGmj1D7+JvKYdqEaO4CeyXGmwUJloyWg/sUs3pzaRMKLjsuXZZd
AU0pjMcNji3Yn/H6yorgSlh4fmiieKQVJQmzH7otk8KQvkf11LUdWdP3cK7b
VUHRoExpdq4D3bRfqNpCq8HM+jdSo3mCyfZOEUdu34b0+CpWvt0zHKDpNq9b
dxferhFpdp3oRHfu4S0nI2SQ5KaQWsq7cOPltneXHtdCT6mC30b/E1PjlblG
hXXwPuFJjsPhF7h+Af/dzB4ClnjP+MiSdaNd/MLFBbx68Cukx5VbqdAi0Slj
sLYRONbRi15F9uD7qiadL/cROOnCTDuDerFwzXvvM87NMG/OG2PFZC96M7e4
VtxrBqN7OZKvcl9hlLqhvHl/M+xmyJ6bBKgxziZQ2C9uAtHGmPw/3qrRs+OC
SVfjIxgfmj+3/1IfJmXz+1L+VkLVZj9Dga8GZQ+CCgYtlXBiQ6pQ2q/B4G8z
pldEPAT6S/+ua6l/oTI5bYedpBFWrUgR0Nz6UaQQeguojRBp0zJh0NGP1XSf
oN1JD2BcmaHex3uNXjfLldl9DZBltD0pxE6Llq2bntexGmCeqqpwmkKL3OOm
t9+M1QP1GC905f4BDFz+TxblVD1QirdL1BaDyE4/faXTuh7YVyQZFsQgOhYp
2hl3FFC75Kyx+Z4hTDW5YCDeqgBzf7bTKTMdzrnPnWAbK6DbubWDW6ND5b+x
VE+pHMquop1m+zC+/vBiR2e8HKIk7ubWH4eR7+A6K8VODidTC3jdt0YwTChd
THlJgFhrnWMWSOKBX3spyXkEnM1LZaq+I/Eix6g3OpeA2JBh+9JgEp/FZur9
cwj4sqamLCicRANlWgs9m4C0zG0N6TEkTk7qbNsFBOxyzx6dySXReaaDh2c6
AYtSPtsw4waJtLCWMjhCwEePo7M7b5Jo72XIcTlMwPPhvvYbIhKFDMYBWy4B
58Mro9aXk3g/Ze1sKoeAKceQA6k1JDZ9P6OhlU1Ad1vmVcMOEtkHjVaxEwi4
c0a/o+MpiVxqRHhcPAGC1dEO17pIdBKfLo7cRUDAdRfpWhWJeXILnR+LgN8P
NT/kDZCoZtlobWMIuOS8PDNYR6Jxp8Mtqx8I2K/ODaWTJJJeR/LNmAQsDvyx
p26MxDr+TYcPUQQYGTwpOq8ncVUbs2YskoDeqtUJzEkST7RYndZtI6Am4dpS
1w8kJjbJjmm2EnB5oen41BSJyZarS7ojCPgEqHdkYA==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3322938#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVj3s0lAkYh4mKFIYuO0WaoptyKZH1tu8qxbpsmVjZLi6NSJspq4tOneLQ
DbF7sMowxkjxxbgMaSmfmWnIKoRGJaNpksvwccKk2mbtH7/znOev5/wYoWxm
2CwtLS2fmf1Pz7CBdnLQ/we9rXPUtHACdHcsPSGnO6DNPRtXt6MEbOZmcSrp
bpidl29y5hgBXk9lFTl0P3Ri7vLuZRMQwFI//JPOQrv4mBWVZwl4Y3tlRwo9
BgU1N86fvk5A3qLdl6/TEzBIf3tSWCkBcXqVa67R01EsJ4vG1QTsC+QJxsYL
UGfrcXoO9x4YaOIOuC8XYHY0p9bbvQSsfEcHxElC/BJ0L/iIugTOPHPGrIkH
2CfUlzg8LoUlQlqvtnY9tj7xXzw7QwDVih0trSBC3RLer5NuZSCKzFkWqJIg
V6DsFDSVweTqbUYlxxvx8CK/l0m7y2HWNGG8zKoZrf3jd1qPl4OjJrh6b2kL
CtxTI+xvVkBLgsMz6fpWZI+ybW19K8EibXi6aLQNTaNGRQabhTCslvd22T3H
WI0sepFlFRQM1TYb3uhA2kTHLRGzGgzN71BKZSeKUksVsrL7kHy06kie5Quk
WI6rF2x+AFM/EsqIizJUb3Qxd19TCzGbJMLF4m48TTJfMX55CPJSSVI74xXW
28zP9zEh4UtkZ/a6c6+RdeGjDq24Aaxd5347UtuDYX/EpxfvEoN7PiO8fEkv
sir015dqJHDGPGjl2wNybLcStFmFSGGDyt9A5tOHnsvETbi/EUyNxvQkn/tw
Wn0RA0cbQbc+W7CK8xZH1Kq+NuMmOOZQ+1LfS4FTzjTeP+8bgfgpNO/RlAJP
mVoMNF1rhMnhpcb9me9w23n7Fr5ZI1TtdddJd1NieIxeJj9bChc9ErnCfiU2
Uy+cvRlSYLzx7OYnvsdLosvpIuIxfO+UkE7f1I9jfp9T3ewfw4HlrdPaHf34
6FL1vEqJBCabUxQn4j6ghmvbkuIvgSzdQzFMywEMrKlwav8oBtPeqvxZkgEM
4dgHsG6KYfaFOD/nk4P4NaO+6yOIQavokEBhMoQuerysjGERRN8SpJiIhjDJ
jp3BzBLBQ+urerSoYey+Esta5SUCmmf0hnhDFapcjLzlc0TQs7GtI7ZOhY/4
UYpMsgHKctFSeWgEuZ9eRTvEN8BBgSPN/NsIWsQvnCNzb4BLiby4nuJRPC6H
gxEGDVAyYJ5t6E3hwhRV6pUuEq7mJAb3/kyhdm2/E6eTBBZzxKrUl8K1VUXz
yztIMKurK/MJoNDMcw+8bifheup+aXIohXe+JlfYPyMhwvHm+LxYCkN8XUf7
pSSsTFjoMbeQQuMPDRhdQ8K3recXyO5S+CljT1jyfRJejrx7XkhQWCl9X1VY
TUJaQOXBXeUUnvuikr0WkqBZz/w9sY7CzL1j5h7lJPS0p+bqdFAY7jV1e20x
CTWX1Yc7uiicYKed2llEQrpL0Dp+90z/0z526F0SvG7bCLf3Urh0Gt9yCkn4
++zTJ3GDFLYWjNeZ8knI3Lgl1VdF4fyQpB77fBJOKjh+DIrCvNxBqz08EtZ6
/yYnJyi8/139lhQuCbranQVpagpfrDD7SuSS0FflEhn8mcIEV31Vcw4JdZF8
W7t/KeRGxc4e4pDwl4XBpEYz848X5KE/4/8B6yJ2AA==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3322938#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVx3k41AkYwHHHbFSLhm17pholxkqRx0hab/tu8aQctSS0CStSdEgjVKtG
xJKjGiV3WKWJcef8zSnWI0cIu8zkzNmPJ5pHG7b94/t8nq+O9yUnXyUFBQWH
r/2vre94h2Di+E+qFqvkVD8uUKw2BspoZmj8wni/9TkuMLNS0sto1piWnaMZ
EsAFu9c9pRk0Z9zjdNBeeokLrj7y+vs0HzSJYG0tC+XCwK5oq3gaC3lVCTeu
xnIhe/3RO7G0SPRcfSDOt4gLbNWyH/6gcTBBJiiYk3PB7cQT3uxcHjasukDL
yHoBa1fY7jbaPKSyk2vtbQqB4fhhXBxXjjOdll5n5IUQ0roXU+arkaguJswa
imBDOVWqqMjHQp8gkpLMg8ohq5Y2EGGzakf/vHUxiPwzNp2YliBDMc2zsKkY
FvT3aRReaESpYd+ViKMloLTIXbeJ0Yya1POhqnMlYL7iVXmsqAV33eZSm1JK
oSXSrPWVYRt6L5pVaf5SBluSphYLPrSjjqlJi4ZJOUzJZdJukzcojNzL1qZX
QN5kbbN6Qiey3GqVIw9Ugjr9KTky0oVHC8Yyh+Nfwt1zFWey9d5i9+YgtWNk
FXz6mTty9mYPcpx7dk7k1gDLVFL+vbgX09nVk9EX60BWJInr0PkbU/3uj9vf
I+Bf/6607df+wcIbvc8yfQWwY7/K8pnafrz2mRHBCRSCTY6OX8kGKSb2+DIW
wkUQQvfcNuguw+XobKaSixh2Th9f2+PwDvWa7u77KBeDlsasquTz1zdsCX/q
LwEKP42nmz6I3QVuSXZZEggwq+1bbTeE9b2JusP5EuAe9s4mPg3hwvqanMoY
CSxMbVw39nAYc/0aDPyPS6DimI0yx3oEH3FcRoVqErh5KCqrfGwE+4NfWjJE
YtAZsO3NjRrF9nfXKygsMfy4J5JDMx1DXT/bdhldDO7abYuKnWMY9K1HzqZW
ESw0xw8Fst/jw955l/QwEaRQPFhOeuPIGejTsDISgZa0IkdJMo75rMcjjFEh
fPM723nv5QlkRrtE6KcKQaHAgzekOYl7LEpNma5CCErlxWuKJrFxOTlhlCqE
+h0xqtSLU5isyw6ndAiAahu0M0J9GkMDze8ZPxJAv1F7Z1jdNM5pOH2BkwIo
zkS9EY8ZDAhbUq5mCOAUz5xKX55BZkhecNcYH25FPWH3P/+A+lstGk3D+VA4
Tk9TtyfR3eCBMH4rH2IyorykR0j8LUZl6aM2H3ycZhhFjiTaqJy79SudD5vr
6oodXEmMt8j1MNjIh9jEk6/uepOokCe52qjFh7Pmj+fWhJHIFDpStFT4sC3y
u0Mq+SR+cYhbI5shYNnihlrPMxKHIq3pR6YJ6JsZfpPPJbHgcnBw/SQBSa5l
pw6WkJg8NbuQ/p6AFUOnK1F1JFJHzXZ7DhLQ35GYqdxJ4vOnzPTZLgKq7shP
d3aT6OISsHS6kwCOpef23F4SJ7ZM5PR0EGD3p3H5ASmJl0IDavitBNSEvv6L
PUHia/F12oMmAh4a7U50nCZRLa8rVbWRgMtD6c46JImx+gOe4Q0EGNiflwnm
SaQfLi33FxFAUezKS5KTOPjghPWggIB3FZb+Xp9J1H3ru8GNT0Cdf+4ukyUS
XVkSo7Z6Ah5tWbuwskJixKx39ME6Av4DOENvXQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3322938#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVkH040wkcwJEunSdMJy03jPQm6UpO+dY3R61m8njr5ZpIUfRKSnX11MrU
oVInkeT1ctrZrKHkN2b0ck5empJr5m23sPGjs+bl4ro/Ps/n38/zoYcd8w83
0NPT8/nC/2aG97VI+oM2cF2/0lEO8MDQc8HxTqoLfixa4eEVyYPV2en3RFQv
vJiVZx53iAfer9oeZVEDsZ21maU4xoMd+3XiW9T9mHYy1lZ0mgcdzlc8r1Fj
0Tb5+rlTiTzIsfBNSKTG4+6JjUnhfB5wjESLf6am4o/DoqIRHQ927soVDI8U
YGR7mmVW9u9gPM1hM6wFGOxxtZDFKAYHv6G+2qRSpIcJOsJ1xRDXuBbTRyvQ
3NVt7LtnfLAspSj09auRx6hznEgVQHmPZ0MTSJGfa3C426sEpFFZVrs0dRgn
YC6OeVkC2kXrTYuPvMBJB+cJ9TYhGIzzzKwc6nHfXrYqhRSC63RoeQC/Ae3a
PzLu3H4EDfEujc+XNeHqzwUJD7aKwCZFPV401IyxtBNHHOxLQa3rVLxZ+RpV
ppHMpJllUDBQWW9yXYaquNHGg5blYEIrJJXKVjzWdFu11/MxJEeWReQsfIvR
9Wy2PO4JfNrIUx680IZcCrIylRUQu6qudF7tO9ylHjBi+VVCJ78uqYX+FwZ1
FAqaBwmYjGrNXHr2PTbsrRuam1AFjh6zpiIq5eicGHLES1sNjDz6AaGlAnss
Aj54lEggjhZi183uxOxkRi7FowaWa4KM23y60E9U2OTyqAbmmg4b1U10Yck/
NO+x2VIwrM4U2N/rxlMja/Y1uUvhkEtl+2zvHnScmuy46y8F3tawnKpPPWix
PUNSu00KWvUCM1VaL562Zev3u0mhLIAxI9VLieTYovwz5lK4sIWbXapS4lu+
k6xVWQP0Dua7fO7fqLChz58S1sC67+NTqatUaMt2U98/VQNs66ZxfZkKnwS8
olqtrwFt/bWe45wPuELsIhj8LIF0wz2x/gv7cEp4tJtWK4G5irI8g7o+/Gk3
g9iQKIGZ5zmBa6P7cZb82VmljwT0ivYIeswH8NImJ4qlpQRi7gqumUsHcLPh
03aLymoQO141ohxVo9L+eO+/PtVAYcYsv2SiwXUV2qhqdRXInZplZwgNZpwN
BmNuFZTcx4XKPYNo1q0TPlxSBcECVwptahDz6vv9mS1iuMjN5cgfDmFaOidY
c1IMxX20TBMWiVabIjgSezFczeKGKraROCdjxuKddmLY7z/owPcj8ZZv4Mxh
WzF8SxAlPjtIfDOZc8jWWgyJN3Y/Tw4j0fewgeLyfDEcdM0Y+foMiUYvknyD
5ojBLv6bLbMekCj1HDe30xEw5XZuTttvJPZOxJdLtAS0D/a+fsAj0cJv/c2Q
UQJSdoiCNwtJ7H5sqMkaIWB6mf8JLkHiy7yCNTQNAfKWG/dnyEhM0slNFnUT
8CRBt0/2hsRQU77Ny04CUt1Dlua/I3HVLTIiSkGA968rSn9QfOntS00XvCfg
6elXf3D6Saw5b3sF3hKQ5rTmhp+GROuk5cyuVgKie+4F0kkSte7envEyApaw
DndKRkn8UH6zraGZAEP91oIUHYljC/JiopsI6CpzjwqdIPHS9jTPeY0EEFH5
zis/f/lZEcasbCDgjo2xdnqaxMu/TCaE/knAf3pRdKk=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3322938#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVyXk41HkcwHFkcz2R2tKwakmlk0dDqc/65HiWwm6G2dGGJCRHupmkdmQs
osPKUUS5tiaGDB3fuRJpPUSpHXYZDDHOX54Hs+lZs+0f7+f9x8siJJYRpqWh
oeH9pf+/L0z5RjrKdCoJm5kzPsoDbVfTE300Or4mq5zdjvFge1FeQS3NDeM3
pC6Li+KBZ5vsUSHND+1iLLzksTxghapEWbRQtM6lf1sbz4Nem19dM2ln0HT6
n4Rz6TwoXvFjSjotGZubHNLCqnjA0a3dkEbLRp/NrYXTKh74H7jL/zhdiml5
7hcKih6CgZoT4L6ajztY00573Sthnc+U8sUVAS53NM/yV1VC3GtHzJt5itzQ
uC3aTVVgIjCWa2pKUHFalnAxmw/1CtfWdmhAtlzGcHGrhobIQrMDE42YPuc4
otNcDbPrvzOqjGlGfe7ijFVeNaD1ibfUbF0LvlrrpJwfrQEHdXC9b1UrtkdV
uOZfeQStyfTXLze1Y7UsQiLaWQtrro9/uj/VgezHnLzExQIYV/XJ39u+xYxT
+StYXQIoHSMthlc7MZfSIzPtdWBoXkENDb3DgGcXTWxl9ZBxrC682OpPdIM4
nkfvY5jbwxuKuCTDrHNpspO6T+GMXaNg5YsutPSP+bnD+hn0VTVeeWPxF1b4
XmX+doTA58h3tzee/xtLE/ay6TeEsNlZZyGc9GB6spGB3y0RuN+zOFpjIsc7
tNYSQaEY4swPWQ4E9GG57s2F+BgJbJlgGsi8+7E8UWNUrieF5UYfdRvn+9F2
bNCgx1sK2pLb/LUFA+jOdlA3xEshik669TwVKJqiOWZkSYG3N6RYPKfA5zdr
2pLypTA7brp0OGcQW+bmPLy/eJ2v+6JstyHcf9bNPuGiFC55cIsEw0P4IGGV
escRKVj07usq4X7A7uf7+UwXKezakZxNsxvGV8ncVh5NCgGr2z9pdg6jb7jQ
SmdAArMtmYoTnBH0nWl4GHhZAnnaQWcYVko0FR/ek7NRAsvldfe0GpX4+Syz
rbZDDF8lcvwcT45if5JeSsQJMWjcD+Irlo1hqyI1IcxEDKdu8TOXNYyhWai5
kv1EBKLNqbrGx8dx/KjzgkugCIz3ndqSZDiBLiXctzb6IujZ2tHJFk5gFz+t
LP6REKrvoNVQ0CQu8ZzfrggRQiDfwdh8YRKLtaNtlpgI4RfuXU7Pgym01j/g
v6uZQKXS/LahF4VWB3ezF10ikFrIDZb/QGHZ/MqPTYkEQhmT66p8KGQ1NtxI
vUDgG6Gw2ptFYXBQPNPwPIH0awdfZoRQqBXb3Wt2lkCEQ/60PpvCz4OMKaco
ApbJX3volFOY+MFjopRFYGHnhSWy3yk8rBypjf6JQPfk4NtyHoVFx0kZnUng
Oqs28PsaCnOvjus0MQioNzFOc4UUasTKm0a8CfS8uXZnUSeF98My19q7EXiS
ojrS+Z5C/Zs6GWoXAtm7D20s6aLQaCBkdYszAc+ybQIXOYU+SRXSQ0jgWXzb
H5xRCmMsO+czdhHI2Wp/zWeCwnMKcY2/I4GTigI/C4pC1fmQLKudBKy9ovuk
MxRm5tR3CO0JaGu+K72uojCcEbAtjU6gv253ZPA8hdPR9+qY2wkII0tsbP+l
cDLlcrilHYHcNQazavUXXz+/h7Il8B+H5mr9
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3322938#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVjn080wkcgCmd4qKVrlsyrawrcelt1fl23zrKe4U5p4gTCV2l3EklrQzR
i3M+UkihN8tm2ei3twqny5W3KZSZl6V5/YnkI7Wd++P5PJ/nv4cefNgrdJqe
np7HFP/bNVTT8LjX58fEgNWDlDAuGDgsPKKirsOfvecyHcO5sDYvK6eU6ojn
V9t8FRPJBbcXzQ9yqSxsjemE9sNc8A0Zl6VTQzC/eYNR6XEuKFclOVykRiON
as76I4ULN+bvTEyhJuCM8bxloTwusGeWfneemoGBJydXD49z4Re/m/zh94Vo
/6qjLD3vPhjr2P5OND5Wf7rPYDgVA8NzSFOZKsTtu8rfjHwshpjaTZj1gcAW
/wSWtpIHC4SUdn39Rxi2uKXNPZ0PZV0Oz+ugAm21O+mft5ZARUSuud9AFdqH
mnQTFSUwtmyzafFvTzH0nVtguaMApk1w55gzavCM0s94v1IATF1QmTfvOd5X
R5gRMQ/gecK62mrrOqxN+SekcGEpWKb1T9wbqsemOO+i+pZS6B9Xtb+0a8RX
pjonRaYQCvskNSaXFHgirDpJGSUCE4s7pFrdhK1k5V0BqwwuhIv237B6haO3
ePQ8u3L4uIWrPhDfjNZ1lUfUVg8hek2V8JvKFsy0pDkzjAhQ8apSG+iv8VdT
FdtbS8BkRFP2ihNvsE/rWXO6Wwwrtxpq90vaUJDoOWpTJAGnfHqYYEE78vNz
XsdGSiHGInBJp78Kv94R2z3LUAY2Az7GzR4dGGBrmHudI4N5psMzqz51YDKY
momGZWDwKJu/NKcTL7VZz766UQ6R6ySts9y68NDbSf/ycDlwXYJvyD924fkd
QYPZ8XIY6184pyezG8m4FIPkqRZ5O03PcFSj0JGyLe2gHOKdOXnCHjUunaU3
ssVdDnSla0sB5y3uCWXQrtLl8MOGhAzqmh7M3K3xFfTKwJ9WN6Gv6MH42tRz
RTwZjNVc7DrCfocLmGZG9uEyyDLYG+1lpcFvn81b1Gg19d8uyp9WpcE7vsMn
01VSmBHHZm2K6kUb93Mqk7+koHdvL79rbh/GDdAkVDcpHL3Gvzi3og+jDRNY
a75IQLYyeSblUD9aU/o2eAgkQHE9anPWZACTDj/VD4qUQJttvSJWOoBP1t7F
p4slUHIdrdR7B3F55p95MW1iCOAzKRbaQWya1CiU18RwhnOT3VY0hAc0F67t
9BFDscYi28SdxDe2D7ZNzBdDci4nqH3HVAfqyE4zMYR4DTJ4niRGNw4/rJkn
hkVSaYmHL4kUt6rbORQxpFzeU30hmEQ3+faRrbPFcIB59b1RLInM4oMu6QZi
WJJg5mx4m8RgWfRnl1ECtBtPzW6+S+LfmwtOMUcIaB3sbrzNJdG7Isl86XsC
0nxLA7YLSKwLOSb6PESAztrrGEdKokNWs5+gj4C2hsvXpytIfJLaFLK4i4CH
ieP7FC9JzD8dVm/SSUCGfeCKghYSWZP83V9UBLjd+l74UzuJz+4F/ftaSYD4
+Itn7F4SzzpvsrjSSkCm7frLngMkKmlRpxNbCIjqymHRSRLtaP7a35sJWO5+
UPX4A4m7dC67fV4SYKDfVJg2TuJRQ3fmtiYCOkT2EUGfSHTk6OzWKwiQRhSs
svtCYpZ2nyujkYArlsZjOh2JE6PHz85vIOA/MV9y9Q==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3322938#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\)(\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"<1/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> \
(\\!\\(\\*SuperscriptBox[\\(m\\), \\(2\\)]\\))\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {499.4153137207031, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"<1/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> versus \
intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\) \
and fixed gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", 
      TraditionalForm], 
    PlotRange -> {{0., 0.9999999795918367}, {0, 1.2*^-15}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.949719637438786*^9, 3.94972077331971*^9, 
  3.949722408259473*^9, 3.949757777429014*^9, 3.9497588292861767`*^9, 
  3.9499760867050123`*^9, 3.9499761501450653`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d4bd36f9-7df9-49da-b289-58d76d428a63"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVlnk0ld0Xx03Vc8l0DTcRGS4yhEuoZKsthZIxNGggoZJoUiGiUIYkqVCR
hMqsDEWS3rykUBT33odkzpWK5MXv+f1x1lnfddbZ5/PdZ699jvL+o44HBPj4
+Gqo8f/Z5sDgh9ohF/Prt67YGxSwUAiXBnDljKBtywbh4scsNLyTmlYiZwn6
g2bZrEcstG3uKE6XcwZY/zXUMJeFrl5Tz5PkvCDtgVqtYRYL2XqXME7uOFQ9
+xG08gYL78psuxgrFwle+h8OLQ5jYThRohEjlwxH728e8bFjoZv7vYLxH/dh
WUIEofvVAEXmw3dtUiyAWdbHT5XnDJDpMDb46nIptJ4V/DkpY4Cn3q2G1F8V
YNer0VWQpY+MUkkOP38NrFqYmM0y1sfyXmxqMauDvNikrt2n9bDOL13efbQe
YLtqyp7wlfhbfZ344yNvIKazN/zZNV0UmM6XkGc2wuDGza+sY3TQeH5vudOT
JsgV2bs1+JI2NkUavWvQaoGi8fbcNeFaqJQ4Mp079h6CS6z/K3dbgSNTXM5H
/VbIu+z+AE008f5wVaNYfBsY3wwc9/mujmLLcnh9fe2wdddnldMpTLziW+Z9
V+0TLMg08zffoIaTFvl9PmEdcK97HW2uTAWPs+pLZV91wtsdUDatqozcJ/WX
Pyh/gZvBOqFykYo449d+e8WZLmBuOTrs57AUtdcvmvOu6obJ8Ymuhk8yWJiX
r9FZ2w03tP1l19XJoJG0vYN1QzcUPh02fPRYBs0GUu9rf+iGAxojwyciZdAu
Tst2vL8bxPsiTz43kMHAz1tTg+lsWJ9X3ON8WRorjiWzrviyIbF4dHu7mRSa
d5numvVng8naoKGfGlJYZ8mO8j/OhkHZKn6GlBQ2MtQ/24exIcCGWeY7RMfu
50/DZK6zgWkyZ7sthY58wl1NGbVsmAjr2JT8QxI3ZSofLGJwIPMqM2xDsQQa
pYqpNyhw4MNKkWjjuxK4PH6m74syB94fT681j5fAv8Ef9wvpcODTYIlMvJ8E
PnaI8XC14IDXBYsyUzUJlOL/4TLrwwENGcmVEabiyDfFlqb7c0Ar9kHCOYY4
jo42tqkHcWCh043xokkxbOi872AfwoG0/S56rWViGFzotjXrKgcctCzOLzIR
Q+6eWkvrSg5kTITIGliJYpPLY0GPGg6Yleue37lCFJ/Z3qoLrOfAKZ9DGz4s
FsUkk+MWae84UBpbvC6zfTFuFNc04/VyoN0yMXf84GLMf5FgeF2EC6k8nXPs
dBFMLT03kSvBhYMDX9fIXhTByDzfohcyXEhy0u6+7y+CHimoN6jEBWub226v
LURQ0n9Ka60RF9IqgnYpDAnjqWV7VHp2ceHOiY6D22yEcb+9/vbufVxoIpe3
epgKo90F/tgOby4sqO6VeaUujOpDWT+aA7igsKQoM0ZIGNtLB2srI7kgqPAy
hFZPw9qBil9lMVyQiopPqSylYf7Sy5pF8VxgX+2qepFNw4jzuok5qVz4uUS/
9kU0DfW3BO5JfsSF4IPvnZMcaagQhtcSirgguU8q5/1GGi4qln4TW84FjbeV
lz1W05DDeLoyvJZafzlEeivT8MrXmdkj7VywHMAAud8EnpZtNvD9zIWHTdGs
+mECPa0zDnhxuHAurrC4giRwTYFF845BLhSWa+tHNBM4eCYqbdN/XFAfUjI8
kUfg8HZtn3t8JNwrjJTen0ng3nEpASVBEn7PLPx27RaBtqrfVi0lSBBlLjF5
dZnA2urmlhvCJNQEGzNrIgk03l7uKyNKwsSKsa7/QghUibmULkEn4Ytan8+a
YwSmqgSYxEuT4CVwNsP0EIFi1W4fRBgkRBwu2XniAIHTYysWLFIgocmMo5Sz
g0D/aPqdSEUS3ivvDL3lQmCf8oypgDIVr4Mt9daewPfOTYdnmSScmZKIb99E
oNVY6cKzmiRUJRx+U4AEVl9Kv/tHiwTdCd+eOiCQpXxxzUldEuhGNxaKmhGY
U+nf/lOPhCdx7fviTAlUcHb1P8Yi4WtmkCKuIjDpOxA8IxKi41x8dFkEhi6X
NBteTYIpu2d7mg6BvyqmPx40I2HHQ3lXJS0C/Zx6j34zJ6Hj8cjtNg0CydFG
mud6EnJi01yeMQl0uViSRSK1XzGnrEmVwEaltHUeViR0bn49Jq5CoEVFZEfX
ZhK0PWirwpcTWO545Ji7LcV378dzJSUCdUZdRDq2kiBkdbZ2eBmBz5y31MTa
k/Bq+Z+xJgUC8fmGIHMnal1BJr5HnsB3zNUaEy4k3C4szdKg9I54va5sNxKE
lbVMM5YS2D/JTHDfSUKQlt12S0oH7lFAUQ8S9uolichReu4Nfap2Lwn9/ZI+
8pSO0aflH/ckYfRWVqgNpaVvzntoelN++Qa8sil9l3+S3u1DgluUk6E2dZ6O
32hDwiESQmzXL+ii9LPW3jPoT8Kqjj9/Sihey7WfV04FkBCZXqFXRvlpyWrp
zQui/Du9amYrUryLG1I8TpKw3mn3Xx0qH/3Hq23owSS4j3dz7ylTvOziuddn
SXhUlZe/lsrn7Mbc4uBQEr41W8VPqxEY/eSOt2445VdhS9UXdYqXkbK05wIJ
J/oCfTmaFG/YlXfJF0loX5fUKqhN8Q5GRGyOIeF0211DG10qnxVHhwviSUi2
EOwxpu7/nbJ3hudVEmbWcMq7jCi+2F2OjGQSPouX3MgwoXh2WleG3iSBuHCi
4Ow6Kv6sSuzW+yQIVBi6nreh4nvLmfPnkBC1jB0vYEfg03fiE6W5JLyxnIpN
d6Di3/nPXaGAhINXfx2Qd6f8rP+0YqSChLXhiR7qvtR5F2PeRreQYN6euoov
jsrHWFiIWSsJux1fL2i6SuAx15MG4+0kcA6J6D9Mofxret50/ULCzYFDrQl3
qXpqNPNV/0YCw/NqnEQZgVLi40T9XxIO1AvJhlP9ofV57CXrWao+f3ycefmN
qv/DzIUt8yTY+4f0i4wQSG/cIfhFqAd2eO17W0H1G3rU61meWA9MJz6hnRKh
ocTMrQl51R6IajvzdKMpDRcPbOwOsu2ByCvVn8jrNBSquV2gmtYD5os87fe5
C+Mho6rPNNteoC9n97jyU/3dev/dF5O94BJtvs88RhR/jyyV6E/5ChUhR65d
Z4thmdMmwWTLPihlKgTR5SUwbHPUndL+PjhcsctPgHr/lNk2nVlR3+Df7Pgi
wlwS15hEJsux+uGx1YIW63eSuEuxZZq/rR88na0uXrej4+/GuN6A8AEQs5Kr
ymqjY6qQx3FHtUHg/NTc020jhVKcskyB+kHosFaVj66SwgUh4c6rjw3BgLq2
UaiBNPLlehT00odhQ4rwy8nb0hh4qyCOXjcMlapwuUZEBp9rRxOS/iNw7xQ3
QeukDEraBOpEiI1CksdMZQn13+jWfd8WXD0KyfGe+RlmsliYAWp9Ht9B3vts
0e6bsri7wFhy2dx3qH4UaKk/IYvno+6Fd+eNgWLsN7ud9gx8PLjsttgWHtT5
+AfaPGBgdHrUXo4dD17P0xgNOQz0cvzOfOLAg/aWB6nrcxmoUF1duNWVB519
hKHpIwbGJuxsuLKfBzqXjr5WLWagj/HNH8LBPGD+88Ln13MGqkRKb170gAf/
nHMbPPuRgXOm50Q7HvKg/1Sm+c9PDPz8/Wvrg3we7IlYHOTXycBE15LdVkU8
mLzjedKti4HzWo5BUdU8qNKUHGT1MLD7Q0KGYBsP/jyZDO0ZZeCzi1OebR95
YHduW9X2MQYmr92zIquTB1eMHT/9y2OgbfbK0g0cHoTQTj0sm2Bg5enmt+FD
PMj+rfXi0h8GpuiuSnAY5YGvRc34zDQDj/WmOSvzeKDItRAImGGg5pbD3Npf
PNC4oVvnOsdAIf72+4lTPDA8mBvw7zwDybK1fnv/8iDmj+GcOf8SrPbL0tOf
5UF9+ke/YoEleENJ5Pf8PA9mslPKmUJL8H+lsIF6
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3338556#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
YGvJ/qMBHWz8H96Lbq4=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3338556#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV1Xk41OsXAHBtN+WXIt8ZYxnZ2whpx0lHJbJvZSchSUjJra507RVuJERI
KlsiyhoJlexrGmbmO1SKDJWklN/XH/N8n8/znPO+z3vec96RdT1pfnShgIDA
OPWb/xocHemo/Wilcz3liql6oQYuRglfDkMTug7uWV5coIGb05NSHzH0QG1E
K1sjXwMNW/qK0xiWALpD/2zO0UAbt+nqaww3SL2rULs5SwMHN0XgVUYAVJZN
nlK9oYEZhEl4NCMU3NQ6jv8vWANDBB8pRzES4OQd/VFPYw08dDizcGLyDkjH
XhJUGVJHobkQ+/3MQvit0dNbcV4dFc3GR55fLoEf5xZ9/U6oY2DrDkj6Vg63
R5VZhVlqSC8RYS9YUAOcmbhsja1q+JiHzW1adTD+rpzlcHYT1nmlSR4eqwdH
O6UkpxBVnFLSXllw4gU0m5+6Vhavggtn8lZJKjbBcsvk3QZRG3HrnPNjiwfN
sPHzwfFzERuwOVSztXF9G+xPf7ptX8h6lIkbnckZb4fixcW/Phxah6PTHHaP
WifM3tWbHNm2Fu98qmwSjumCzsnGmii+EgpL3+MPD3eDeOGZmdRURbxyrNQ9
Q6EX2i8o1x0xU8Dvu/OGPYP7wCG8Lo3GksMAjfoS2vM38CZvkefQKVnkPKi/
3CH7FjJ2h3jHsGTwl1f3zXV/s6CsJS1WeVYKLbc6/KcazII77BEx9qQU5i94
H745lAVSV4Oykz5IoWPStJ92DAv0Dk8JS3RJ4bMGCX2z2yy4xDouYpIrhRFr
XL6dbWLBVotl+tGHpXB17+eDLyUGoEjWVSSqUhI36C794145ABHy7JtVsRL4
MDdP+U3tAGixlOvmwiRQU8zU7EDjAFxYKnHc4LwEan1IurOhYwDqMiN9v3tK
oPHV9YYT7wfAqFkpMHePBPr3GyUFiQ7CON0l9/I0A8v9EjSuHBuEttVZmWc9
GKjD2m7/22cQJD9o8WscGVinNxjmEzAI19OPzKy0ZmATXanfNHgQmkQWHW3S
Y+BA9ZNg4vogfPR8E5wjx0CB5azmW7WD4OFGZNG54rj/tqxHEZ0NlgmFUu9c
xFEzSVipUYoNr7bueNBpK45rYn4Nv5Vlw5Rs7s2XFuL4M6jHdfFGNljke6W0
7BXHArMoR5vdbOhd4R2vtV4cVy+YtPrtyYbNL2zCi77RkeNUq3eggg1/v3/O
FIqjY7NVwSLHGjak2HTvXh5NxzLDlDr/ejYk7k0SFQ2l47VtAbtTW9lgp2v3
atdZOu5duVaLz2ODUpzTzWlnOuY9jd18XYgDtmvddUQ06Rgo7SRH2nNA5Nqh
uSYuDV1N1awHXDjAmvT4+oNFQ+N/F0T3uXOgJztXc1MfDZU+Zk22+HLAWTDt
RkkLDbtLRmorQjlQnhN1X66ShmoH/Z0S8jkQ2fB4LuoGDaWCMT62iAOe53Ub
d8XTcGmx2IvoxxxY5nGwZCqGhmz6E9WQWg40nOj9GRJOwytDv36f6ObAtUVH
+3+dpuHI32Gp+2c5IKZlxPGzpuEn6w2emQJcsNU2ib1jTkPnidULZRZxwe5t
sirHmIaG8u+2SAhSns5b772fhnJREWmrRLlQ+KT+9vB2GrZbNnv/VuSCg8iz
h4bSNNw4ZiXUZ8QFwVvfDdpHCSyzPFgTbcqFGR35YxUjBGL1nlM6FlyQPucl
X/COQNuYTazsQ1zYZDFqnM8hMEptWV7AES5MbJAoWtVN4PuAKgPRIC7MdZh8
8XpKoP9g8Z+Gc1ywtrm7l1VJ4O+9OcVB/3Aha6yh3KKcQDF6ogT5Lxf6e2eG
7Euo/cpPfiqM4YKPhoFdWy6BGb/loo3ucMHjxK7/VJIJ3OjO0FlwjwsRUd6i
UjcIfNK68ktJDheStNmqotcJbE2fPSxVyIVJuiyd+I/aT7d33Wg5F2L7tz8K
iCIwMrd58FYVF4I9C6XSI6j9Vz//z7yGC0ZJtIH2MGr94cKZ8noumMmU7jC4
RJ03POpVZBsXDl22+Dv+HHW+8eALWp1ckBKKTZsOItDP5oz6RDcXJPzs213P
UuuvPZJs85YLF9ft0zU+TeDjJq1jSu+48Oe22KGzJwlcvXJCsP4nF175ScWL
HCWwszo64sBvLpSu/Rr3/QiB17wV/2qb48LnMxk7SFcCRZtsF71dTEKyeqLP
C2fKYQ2/+cIk/CVUndprT+Vvdj5/WoQEbrSY8ogdlc/7+fPnahL4qlFyc7YE
iuxW+7GEQcJY5WJT7cMErvqV8kVSngTXU7pVM1YEtuds8ctUJOFVecBfWynH
HWrnK60lYfOYV2SgJYErHy/5rK5CwkSWJH25BVVft4zjTzaRsHpHCmFnTmDM
6l2ftDRI2LjCbVORGYHCfr4f9m8jwcAhOMnblIqXEXJv2UFCq2hef4cJFd+a
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
2draDibekBGampvjg5Gf0XqXLib+HyJV7qI=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3338556#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
wvp8zA0O/g92vHjT
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3338556#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV13k4VV0XAHBTCWWWuOfiahRFhuYstdJAvMaIjJWk0fBWNGhAoaSSJFGG
SmTOlClTk2SKhOvec29m3epVUuHb31/n+T3PPs/ee5291tqH5XnUZp+IkJCQ
qLCQ0P+fZvsGmqsG7Y3v3b1itSJbH8VQ9ViviiE4Wm6SzHuqjwZJcQn5KpvB
Ymh9mn6mPpq/68i7p2IHfZt5Zw3S9dFh73j5DZW9sCR7QZVBij726F7CqyoB
8L79m//y2/p4X+mfsAiVEDj1ufng7GB9PD8rf3G4Sgx0MayHvS310XHXg+yv
31LhybnHEst4K1Bq+vzurWrZYGvWSpeeXoELrb8M1EQWQHtb3oZxpRV4onEN
xI2VgA8au+am6KFygRxbWLgSkkMUTVav1MNCGhver68Gpywxn5CTuljtc4+x
a6QWlFP4+e/PL8cfizbIPD38EmK7ofZ1zDIUmciQZSx8A98TWrQ6InVw5bR7
oW1WA3zTFeM3X9HGhhDDxvql72Hxb4fo+5FLUT16eCL9SxP4xU96Dx/SwuHx
XvYHvRZo3sKbVnZegqlDz99IR7XC+z3q+kuWLUZp5iMBn98GARsrci1EFuGV
A8+87i9oh+DYik1tIwvwp0kG3zu4A16f0zokWz8fA/RrC+bWfISfZvEFShWa
2JtVG9nM+gRShavPtOSx8I9P212toC7gDRTdVanXQLuVLteXB3cB/1GrDbta
AzOF+8IMQrogIrGoKrVSA13jxn03RHVB5PBY7coSDXxRp7rNOrkLhkwrIo9m
auAlDY+xk2+6INgl+pvhTQ1UaB/d8Uq1G0baFF8qeWqg9kbxKa/n3SAbnhXr
NkMDc55kLP5Y1Q2M5vmeLiIaaKhoZb29vhuSHjpzSqfUcX1/XKp2czeo9xpl
vfqujpZXl5p/7euGwFTxt6pd6ujXaREXKN8DI/cvmMVnqmOJb4z+lQM9MOE+
bCtjq47GXat3Tx7pgTRzyeWJFupYvbkn9EhAD0zf+1SwYps6vlFe1GkV3AOf
eYoNXhvUsbu8KFjpVg8cdvFYLbFEHYUkuxoSq3rgwsdXubpTarg1mbU/V5kN
i16OW4lnqaFhnPSieooNvMJ5VsHpaqgR9Yf/icUGSviV759UNfwd+MFTTIcN
s838mEIJavjUOtzVwYQN65b5qqyLUEMF4W/2k95sCCrYlXdivxr2ulVt3l7K
hkAfDRGphWrYYP9U1LWSDbt2jdqIs9Sw2Dy+2q+WDWWbA2vEmWp4Y1WASUIj
G0LUvUSUlNTQVGbJegHNBrNszoj7DDXMqLhmcEuqFxanTclV9DHxBNNNk7u7
F3rcm16EZzLR00pvZ7dHL1T2YZpqOhMtLwpHdHj1grdT0uHsNCYuGkz59u5Y
L0Qo/0rnJzKxrWCgqjSkFwpn0aVnrjNRb4efW0xmL+RUPz534AQTB4JCE7b+
7QXbwW451hYmDu3U9n4gxIHlITYfdZCJ7l8VRNRFOcA8pbxvvQkTzed/NlKd
xYHX78YbvNYyUTP80j1ZeQ4Yido+G1jOxCa7hkOTC4mDsjuT5jFRZ8ReqsOC
A/Vt7/xbvlBYbLejMsKKA65u2qlqIxRi+SZ/Y1sOsCXuKx4dpNApSrcrzZED
nXbOWRSfwnA9iYyAPRwQ3mMW/aSTwr6AMjP5QA6kSEq6Xquj8P6kZoRFKgfm
Ua1yR+9TqOOlYiz8iAPDRQoBkEhhUaPM94J0Dujk3fmgkEBhY9LfXVQ2B/qc
iq++uk3h5MZ2reESDhy3uhfjcY3MHxb++vJ7DpQH7pSwCqZQQebrrNrfHFAT
uRMt7UlhS3nEpe2THPARywk+4U7hjUMLZ76fJuNl5z7huVIo/8ZJ9JMYF1ab
zkivcyYOrZsUSHMh2f7ZvBx7CmX/xH9nzOdCw7WkmUwzCpvSjXwfLOTCyjXq
lcXbKIx2bBIsWsKFRenuNx22UihTOGN0xTIuHLJZeilxM4XSvsf6t67iQj2z
Yo81UDi737Tb35wLY/Zzl283orDhFsdpwoK83xGbq2RI4ZXNpzrPWpHxYvF6
n/UplErOaQ+358KDkZkqV/UolHRhNCe5caHkUpCTkA6Fs1q/1r3150KtXWq7
33wKX52P3Gx9nAvFJx8yj2hSeFlvUU37SS4Yhp+FQywKxaOcq7hnuOC257SU
rzqFM7fXl45f4sJR7bWRCQwKxSrvZs9PIPsbrnAJVKTw0/rN23oTuZDSVeF+
TYHC7NIRTvwDLigrHL79WJ7Ev3CDvPwjLpStcr3Fl6Uw92lvgFAeF1RZrhEX
5lAYpn15TlkBF2Lr47m5syncna738EQRF5IeJTjwpcj60853fCnjws3+s7ds
JCl0TZi/tuclF3bI5cvYiVNoqNrQEveGCzx6jmLCTAol4gIO2r3jgm+yjWb/
DAoLbtYlvG3hQoCHvk2YGIlX5P7pkh4umHaqlgwIk/MbmFEb+x8XPl/RsVg3
ycCocVsXm59csB0YKs77y8A9//79MWeCC2Jrls5YRizta7E4dIrMF8U3XPqH
gfu8BeH+EjQIWQalb5lg4Nq+25q6s2lItD/S3PaLgbJ7TZ4PSdOg4uBVt4+4
zO36iIciDQFGK8Sjxxko72Dwj5U6DUq5MzJm/GTgQFtXv5QmDckv+4fTfzCw
3Cbk3MsFNEz/CeZbEXtbfsg1XkqDidXz7w/HGGjccMbstw4Zz7ET3UmsYLaI
90yXBqfj11+IE1eYnlBcZkTDRZuh9f7/MTCmRv3pwCoaTumJ/dAhPrDxlWnq
WhrobWVWg98ZqLhB5QTDhIZLSbMHDxAPlb6Q6dhEg+lUusZy4qrVPo9vmNKw
li34NvaNgQcNn3dKmNPQrx3hEEFc1fQhs9iChmKu8qtdxEqHvwbvt6LBpqsk
R5vYR0LKdq4tiYccQ0aIuDJt4aI6exqU/fs57V/J/JtMJvwdaQgcfjs/h/gA
26lB05mGGvfjHyKJFZSj/c6509DysfOUGbF3/hNT3T00UJn/HVxGXP5P3Tz2
PhomWbdeyBPLj/QOX/GmYY2+b9BvAQP3X/5dse4gDWXsdTF84rIFSjeGDtPA
M3oyu5lY7oXuvjvHaIiz8+NWEnu5mK3e5k/DSW9z2Vzi5xN7pcb/JfHKHY1N
JZaNDWannaRhfpi8fzzxPv34XLtTNLhYByTfIC5tLAgRPUtDXlyj5lVimYPv
HfLO0cD62/MtnHiv+NBSj4s0hK52n/N/l6SITcmE0XBTS9E/gljaRL254jIN
6W9LNKKI93SvST0cScOLDfKKMcTFJ+1OUFE06Nb0miUQz1E6avY2moatdz5X
PyT2zA1nBt0k+0sfCMwnLrJI/boklobokKzD1cSzhypqOuJo2CQ7dbeV2COs
MzbsLg1GHkki/cSFmmMHjBJpCCl1TvpLLFUpvYF/n4Yv1yaPKpL4ujtryd5M
ocH5kpXfcuJn48jb+JCGc0Gs1P9/H8kY18Kvj8l5O2kseoDYTS8wPCmDhr0v
j18NJy5ouLnbMouG3M/xJpnEEgeydCdzaGBHnlZtJs5/wPvgVEiD2em6NSxy
XmYZTz2WKKHB26s9aAexy6d5p4uf0zCo+qszkFhcwVJz7gtifuPgJ2LnkOIj
zW9pqO0sUigk5zdHo3XjuUYa/hoaSnwnnlE+qqjbTMOWfalSeiQfsn9oPr/S
TkOsztDyPGLR/VfFt3FpWHJXpaCR5JOj6ONPP3lkfd1r2lVJPj5Nqn6a1kdD
VNXFMW9ih4/jtqIjNGh7bGNKkXzO2O55v+InDdsPvv3sRfLdUIdlDBM0GBjL
+ZcRV0hzuir/0DCmtTZTgdSHplYX5RdCPLBdkMB4STzmsiuqRpIHeWueVG38
TfLdz+r0KzUeWI0/KAoh9eqlnYzqdhYPksXNYYzYalVj0ev5PJjFG3LcN0W+
/1/z/94s4YFORPG6HdMMvBS21eedPg9Mig/c1CH1ryne2LFlCw/qBq4tW0nq
5a4zkz9stvOg1bZwXgUx7VZ2s9WcB9Nfxk5vJfV1bMHa921WPMj3fvzEldRf
lWyjLR1OPOitSj2WKEGhZ42OYfcRHuye4+DoKU3hj2FV2b5YHvB8nJy+zaMw
5l7/y4Q7PBiQ728pUKHQ4J+CYNsEHmSUKzYFqlLom2chqHrAA4MdptazKApH
T55rvJvJI/1hdMMq0o8+z+i7Yl3Ng7dqDeu7FlL4QT1XonyU7G9vvrAe6Y8B
zWde+H/lwYmp+EoN0j8VLpoFLv2PB5X3QxrkV1Jo3ccbuP2LrJcr9e73Kgrf
Zc595SfKh1zVv+s/raOwbs3psCUqfPgYmHLmA1L4zHaraMxmPjy8fPRnnh3p
l+bFodRWPjy63Pa3iPT/3ag1K207H1xDQifLd1IoYiA1p9CSDxtrVg82OFJo
Kf9+7kdHPmgcZpj93E3hQNPOpdRhPhR69q08vo9CVUsv69RbfAjtt1edf4LC
4G2hSQV9fHA8I7JinNxvWD1mH1NCP8PFt3+HtAUUrl0VEqOi3wfDr49URVgz
cbfa+wnh1j6QsF2hsTufiT/eXKWPne+HiZlz5r4h99U4MdcAmwUDELDFIPNC
JLnvsp8li9QOwLyiLWfDx9Rwxpnzdmt8ByGx8ruZ+n5y3053zablh8AtuV9T
sYXc7+Ozr8pXD4HcmVWDlZoaWK59eZbckWHY0qGW/cdJA+XM/HQuSI9AUwfL
/nuUBnYva2oNLBuBXUXuczPI/0xOIizgu45C/Z3y53N+a6BL9ko55tQobInY
sO2dNgvPhT443/3kC/iZa8+T9mDh0wHmXekdAgBrrdmyN1h4+V6oO9tSALj1
utsg8V6b0YVZ1gIIMqtJq77JQqqsLMfCQQCaPzIl/73FwohrzvVXPAWwycdj
ZWccC71X3vkmGSiAh523lZKSWKgZorhN/KEA/E7xf2g8ZeHU6tNzOh4LYNYe
/dRfxJ2jvJaHGQLwuO5q2pTFwmiHfJctuQK4+sbWPTiHhdNLbfxDywRggFW/
uvNZ2N18LVG0VQACA0bBrVIWFoeN72n9IIDk5qvRh56zMGadm1bKRwH8vtbv
hmUsNE9bXrCJLQDjLpuOr+UsLD357vX5QQGwfqlomb9gYewyo2vWIwJw7m5P
YFWz0JdOsGMJBPCLEyz6i3jJjkO9VWMC+NwXl55ay0Ix4bbU6HEBRKyRHAyq
YyHn2Tof998CMPrHh2Fdz8IynxRdvUkBqLSVmCx+ycLb6lI/pqcFUP3vhOMk
8f8Ax6Olvw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3338556#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
yLg=
         "]]}, Annotation[#, "Charting`Private`Tag$3338556#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
RSfm53nQfO+d/aIOBvofHv3pSA==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3338556#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\)(\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"1/<1/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> \
(\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {493.6243591308594, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox[
     "\"1/<1/\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\)> versus intensity \
I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\\)]\\) \
at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\) and fixed gate \
voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", TraditionalForm], 
    PlotRange -> {{0., 0.9999999795918367}, {0, 5.4*^15}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.949719637438786*^9, 3.94972077331971*^9, 
  3.949722408259473*^9, 3.949757777429014*^9, 3.9497588292861767`*^9, 
  3.9499760867050123`*^9, 3.949976155490034*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"6e77f620-7956-4127-acba-4a34bc451686"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"0.1", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"0.3", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"0.5", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"0.7", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"0.9", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["j", "aec"], "[", 
      RowBox[{"1.1", ",", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.9V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=1.1V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
at varying gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\), fixed disorder \!\
\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) (\
\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.1", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.2", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.3", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.4", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.5", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.6", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "\[Delta]"], 
       RowBox[{
        SubscriptBox["j", "aec"], "[", 
        RowBox[{"0.7", ",", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"0", ",", "10"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.2\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.3\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.4\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.5\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.6\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.7\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\)/I ~ \!\(\*SubscriptBox[\(j\), \
\(aec\)]\)/\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
versus I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) at \
varying gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\) (V), fixed disorder \
\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1 (V)\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(j\), \
\(aec\)]\)/\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
(A/m*\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.9392263662892036`*^9, 3.939226383487747*^9}, {
   3.939252239774357*^9, 3.9392522793468*^9}, {3.939252407191277*^9, 
   3.939252432847385*^9}, {3.9392526440416107`*^9, 3.9392526446087914`*^9}, 
   3.939255027578772*^9, {3.939255383229516*^9, 3.939255417348769*^9}, {
   3.9392555830097227`*^9, 3.9392555940312223`*^9}, {3.939256215031674*^9, 
   3.939256222572248*^9}, {3.939262221690979*^9, 3.939262293263183*^9}, {
   3.939262567826777*^9, 3.939262598573628*^9}, {3.939266916455476*^9, 
   3.939266917040441*^9}, {3.939267170047944*^9, 3.9392671851888237`*^9}, {
   3.9392672224529533`*^9, 3.9392672625531197`*^9}, {3.939267311581017*^9, 
   3.939267358908862*^9}, {3.9392674895723753`*^9, 3.939267498356821*^9}, {
   3.939267543082219*^9, 3.93926759151717*^9}, {3.939267647230842*^9, 
   3.9392676489260473`*^9}, {3.940132887931909*^9, 3.940132906177369*^9}, {
   3.940133093692404*^9, 3.940133113866774*^9}, {3.940133213624579*^9, 
   3.940133221079467*^9}, {3.940133286590611*^9, 3.9401332883253107`*^9}, {
   3.9401810274697237`*^9, 3.940181047556683*^9}, {3.940181774790594*^9, 
   3.940181774916605*^9}, {3.940211036471054*^9, 3.940211043925737*^9}, {
   3.940215740425387*^9, 3.940215776879239*^9}, {3.940217621368278*^9, 
   3.940217651431168*^9}, {3.9410701409784317`*^9, 3.941070143576398*^9}, {
   3.941073286194363*^9, 3.9410733427267303`*^9}, {3.9410734473578453`*^9, 
   3.941073447441085*^9}, {3.941073479356862*^9, 3.9410734842380743`*^9}, {
   3.9410736919616613`*^9, 3.941073701143461*^9}, {3.941073825380744*^9, 
   3.941073838219317*^9}, 3.941073969105246*^9, {3.9410740781728973`*^9, 
   3.941074098537568*^9}, {3.941080135067607*^9, 3.941080152514288*^9}, {
   3.9410803204415417`*^9, 3.941080320815823*^9}, {3.942253948007147*^9, 
   3.942253957529216*^9}, {3.942253995511951*^9, 3.942254023962973*^9}, {
   3.942254086833707*^9, 
   3.9422541601497602`*^9}},ExpressionUUID->"c3ed1240-54dc-45c9-8c70-\
7a03ae1c4ee5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
g/Jg/Jm9fCfLr/+2vMyDfIIhYcT3/wFibu7J
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3711491#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
HU0i/T9w/9q4
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3711491#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3711491#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$3711491#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV0Hs41GkUB/DfjGHeUoRZmiIpKpFkkZY6b6VVZGOU4SGVkEvZkpJ2S9Oa
lgnNWhW5RMpmreu4bFJazZYsuQxhYybTuI/5yXVly87+cZ5zPs/z/ed7jPy/
ZQVSCYLwUM7/2zlwqPXZ8KEdytOO0hm2g7Z7xWkJ0xqIK2UBTrx98OXd1AwB
0xEIvMWuiOcNLk2dZZnMg0CMeyY3Xw8BdsDsk2RmABBLVOsckqKhd/OPuxOZ
kUCopQ9Z/BwP2V8cuMZjxgLxgzHLNDMNOEiwPp6ZAkT8ZCGrNB+8vHOKxz/c
B7y5nhM2VQ3qCxxfp1XFsGz+uaP+eiGYuCuGnl8vh+xo1Qs59Q0Q9XobpE49
AsSOXD22qBX0yrXEFEotBLe4lUkutUOldHdjs0MdpA6GuDk4d0FdaOZKb7kQ
gj1m0lczemB63XbNwlMvATez8g0LJECdK1i20qQBMhjNn4mWPrBdOFrpUdQI
fFeeV2/Je2iMtX79YmMz+EotZHb8fjDkj87lK1ogpaF9fVXOIIzOSsQdlm3Q
5bDFQCttGO6PPG7QSBLBhuiOt8F/joKGwS+kTNYOS3Q8BIzJMUgIqQjKNn4D
5008Aukq4zCDC2TBMZ2QLNtDdTL9AJFWwnLd512w/K96tsWuCZAUCa+3Gv0N
VrSNhS+jJ2E+tD3d9OJbeMO82HVCMAVmO+mfgx73gP5vnxhWkmlwumd0olRP
DBPnHDUCzWchyuDImj5fCbQRawx8wv4Bc/kh9U7XdxBxk2cUUzAHOprjSPjx
HWjv4/DpmvNAq00vXpvRBymV1A02/v9CmPXj7kUuUshbnKYw6/4EBfv8s5/O
SCGLfbnx9oEFmB5dsWzg1nuAmYc7L3sRuMLDSSXFUQaplqdFrkwKjtnLvVs+
IINst4gp4yYKNup17srl9oPvpra1fd9R8VdbY1OYVgPgUyut6rdRwb6rmuco
ogGIrHrabytWwdMNidLTnEEg9NyoTQk0nErzi2QZD8FPOE6Hu04V64gr7lGF
Q+B3OH3XRJkqVr3EObjtzDCo0ar1wneoYSLfr1iqPQLh6vZ7XgnUcMSd4kTt
uhFgyPyNy4zp+IlZHNIKH4UuuTQ/gEvHWs4R5lc15MA1VL2ZKaLjnk0touga
OVjnnNUM1Ue4JAuMZX5jIGSJ6+09ET5cbKtl8HkMaCdTUuKuIXyFm8Pp+VUB
Ie6M7IYyhJdG0Z2PFSrgqreJzzEBwneCT2kPFCtAYV9XOqu0wGVbLlmugDjD
DKu1FQgPaLUKqbUKiG0riz9XhbBLFoFMRQqo9DQX0msQ1q06knRuXgGOTktX
yoQIFw4ZpGvsJ6GJJ46J70A4LpN7VPwNCY5ulk16bxAOYI2ZFLmT4EVZVPJA
af2amhJXNgnINn7rs06EeTd8XiT4k9CT5+453o1wsG3ah8XRJJw83qu7XYzw
mljGXnoeCdXw5BFvAOHPdt8v7XyozPM79y8ZRLh77H1bXgGp/M/M5USl+WzB
4a9LSbDTD/ojaQjhhY2ss9waEqjlxMuEEYR7Wm9kqYhIeLjOjhGlQPj3a7PH
RR0kmJ+/8mhC6RT7I6a5XSTY3nKmhpPK/g8syneJSTiTeynm+DjC1ReaXnGG
SVgtV7N0nkD41iabG+5yEm6/VZurU/qMNOOgEUnC8unKE/aTCG/Yf1LybIqE
1CD7rWZTCNMo7ff5syTUO6Wl3lP6XYV96NGPJOiyq7OZ0wjXhOZutvyk7CuX
HuArfdtQfXphgYRkG3ae2gzC/wH+wHLu
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3711491#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwViXk41HkAh8fRjy4h0iRXS6dKmnV0+Hw3nrKklkZUKit3ti30yK5E0UHj
2EfFopwtickaPTmSlerZEsYQlYzGNcbwm2hYas3aPz7P+77Px8TnZzc/ZQaD
4TK3/+nkJ+bXD7vbzWnR5hf+dqr2K04LmSzMPUfdBxyw9U56VgXTYa5PZEYP
sOH8uvPPbCYbDO9F0bqDvvDwnXr8G9MXjMDucr+hcHzYfMWewwwHw9HNbrkk
Djm6+y8nMOPACE0xTaDTEKteseYaMw2MfcsDL80UwPNQLlf2qQBEf9H+S/JK
LFTEeu0x5CInxSyJ92M9zFzHxE8TeYiRuh/cVPUMEc22SP9cBe+BG7ny1FfQ
42n1KCk9gWaVpkx0rRUPRfZNLTsa0HvZlKXBEaAhOFv/kLQRsuipad61N5Cv
3rmk9KcXSImyZosPvYXydImmvtlL5Gjm1Bef6oaVwvvhgbImxEiMjJIOCtEU
x2p+vr4Fxuqm7hz9jzBKGZkuHmtF69akag+uCCNTwp4OizbYyLytt5j3o0BS
81IjSQDjg6uk2a8HoGHwB93f3w7jtIcJNiFDuB5U6Z9j+gZFVc3j7AkxJklJ
f+CFTvxge5Ek50gQbtnIW/a0C7KOvAQdKymEZY2JfJN3UD8rd6YmRvEluD1z
3S/v4Vn46DC3lMaG79Rm/Wu6saJt2zaqSIY9eSYB5Xo9CBTEnOnjfEKEwfFV
H72EaOfoKWICxmEudV/Y6dILqyCTmueYwNIlMvXGmV60mmdw+Bs/Q/VJJveb
rI9obf2rfv8SOU6yat7OdxbhfkhQ8RW1SZR875NTNylCb64730ExCfnICs3B
m334aimNMJFMofLAHpU0h37c6zo/s3b0H1xwjL/DG+xHQ999c5u+aZh8cOrK
jx9AlDBBLatrBtus49KYloO4/XjZ2WdDX+Bl2DKtJBjEyvc155KGv0L+kiM6
HTuE3sKIsVBqFumqx8LdTMW4WvK+/JmuAkt7KvOUG8XQ1TyVF6bNIPPOx7Jt
zwyDU9j25XQRgzCKj3FF2hJUNszu3mGtREJ/53K0GyQIqGN3Lu5QIo83XFXX
OjWCI5ExpTphykTLKdT8ooYUgi6Wz4b5KqR7Y6sgslaKuDbNipIyFfLgNkz7
j43Cgu+6+rqzKjnKtdIymB3FmEXGkV1DqiQmPje2+94YDtelpg+mziOlYoNM
jb00IvPD1CwtKXI1O967Zx8Np3kq5goWRXzdRs3KXGnU8l08m6wpsrK29oGL
B40tGcYv/HdSJCH5yPPrPjRGx79OZjpSJNAq49OCSBo3Q1SD1I5TZFWcjqPa
XRrZ9oZdvYkUmbWJWtxZRMMmUxhZlkSRt6N9bXdLaCx+4qkflUqRFI+Ko7vL
aYRG+3np3aKIYr1bWHwtDR2luBaXPIp085Nvqwho7BNr21U/osijy1MnBB00
3LacrLlSQ5G07cfX5XfRmDSxZLnXUcS5cBNvVw8NQ0wskz2lSPW513/HDtPI
XZCYYdZCkZsbv012ldII+DVPMs6nyBlRFtuEprHDa5xV306RtXtDhPWfaTS/
W8k7/I4iqkrtBSlTNG5UB4jXfKBIb+X2YO8ZGslJr3TkQorUBudvtviXRokK
w7ZBRJFbRgvlCgWNkPRadvIARf4DAu5bBQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3711491#6"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\) (\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {652.2210998535156, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[Delta]V\\), \\(g\\)], \\(2\\)]\\) at varying gate voltage \
\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\), fixed disorder \
\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.1V\"", TraditionalForm], 
    PlotRange -> {{0, 1}, {0., 3.1201298709262995`}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.1V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.3V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.5V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.9V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=1.1V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.939219008720942*^9, 3.939252353553158*^9, 
  3.93925247768958*^9, 3.939252667376614*^9, 3.93925544042422*^9, 
  3.9392556119982557`*^9, 3.93926233671656*^9, 3.939262619434816*^9, 
  3.9392676445707397`*^9, 3.939267699764078*^9, 3.940133017478779*^9, 
  3.940133143746972*^9, 3.940133246020772*^9, 3.940133308529504*^9, 
  3.940181257518235*^9, 3.940181793272093*^9, 3.940211070363617*^9, 
  3.940215802444243*^9, 3.940218556531996*^9, 3.941070165622047*^9, 
  3.941073523977078*^9, 3.941073722419586*^9, 3.941073860617807*^9, 
  3.9410739958848677`*^9, 3.941074143872308*^9, 3.941080188340746*^9, 
  3.941080349857031*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"2b77daff-37e9-47ab-83ba-6da6fc21270a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
+C8wmxLe
         "]]}, Annotation[#, "Charting`Private`Tag$3871532#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
qGz5nP9EmMLfawTnl5dphI5K1YyuovAPtoIuKA==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3871532#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$3871532#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
4N9Nwr/W1tjgkmrFMN3Mgf8BDtj94g==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3871532#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV1nk4VdsbB3DHcCmFDnubkiilEJUx6V0kpMEQIUPmRBKVNBpCyljJJRQN
MtxQKEL8TGfkEDKTk2Sqk0ou5+C37x/72c/nWeuvtd73+y4lzyBbH34+Pr5B
4vvvb+kz0VE/ab/P+MC8UsghMhLcL3duRFYbSLTw2dHDZLT7cXpWmawpXEm5
jGyPktGh1p7X2bJ2oP5TS1fbhowcvOdr78l6wwFqeOzScTIa0ry1P1H2ArxW
KZ147klGOZhV7B3ZaOgZcZG1ukJGkSJlW2/LpoLBKeOFtUVk5OiUW/Jj9hnk
7iW535aXRKIrkS7mG0qgyzPzLTdBEqnYfJ9ojC8H/RMFKcoCUuhSmwGk/66C
OiXXZMU4KSRdvm6YRKqDbRu8a+sFMOSSwLUbw+ug58eB8FYhDD3x/sJoUa8D
b5P44j5hDKljVVXxjnXwK8/c8ocohkxC3R9gpXVAil9UxaUwpJvlkJeqWQ8f
jGpETTZjyMMtzzV/uB7Qcz+ukCmG3rD3M1l7G8BrfmtbSgSGPlpEziaaN8CJ
4PssxygM/Sl+jx+2bQCUXRelGI0hvasGHtRTDUCV0pjNv4WhSknNP/X3GqD0
bendoiQMVZnKbXw90QAW34vnzmRhqCbvx/nU1EboD+fdpb7B0OCaHRm2jxvB
bus1c/dKDPFCAt5LFDZCnKWYyZ8qDBnBuEhiXSMcrrzy7/paDL3vGciOmWqE
kxpVIvaNGKoToVBCURO8MMrMO8PCUIN/trzTTBNMM3pAaRxDZZMBAW5/miAp
QPq511cMPfPbU+3F1wxxvUFbn01gKMa358RZqWaIGF0dpjiNIQvPdQ9v7m2G
Dk/fhWUOhlhOMTLFCc1wdDuN/+QChup7j/mVpTXDaFrOl8hFDJU6KFdW5jRD
mq175RMuhu7Z1zk0ljcDv2Sg8vASho7bLKT1DjbDn09N7wz5cTRoEYgJaLSA
oJP+3eTVOGqlGPqI6LVASqHUlhRRHL03W12x1rgFylnNN5LW4Oix6Qs7GfsW
uBrQdy5aDEeeaPS+xvUWEBi8v8aejKMJPXuyY2sLRC9eZMXK4qjvzSZP154W
qFxT7eEphyO6zs9XnqMtEKSekmgoj6Oi3ck2gXMtoH+k8MX4ehyd1aSlRClQ
oEs76JHiRhzNbTESfxlIgfyEER+5LTjaxzah3AmjwGn54AtDhGOzLcL9blLA
tfx+ZPZWHOFSdpxNGRSo9z8TL7UNR7qkANbDJgr8ik9dNayGoxs1526FsSig
TntbGaeOo5ZLoXC8nwLm0flHtTRw5PA9smTdDwoceXB2U+gOHIUNpCfHyVMh
bAhXGtTCUX3aI3PfLVTwebjmbeBOHInYPlvZv5MKQzK2CjzCGdSSoBUzKpS2
z1mJ78bRu4oWq9AQKog8FhIQ18ERfzBT2O46FZwG3rbHErZU/1C3M44KP7uf
OXEJDzwZ0vyWTYUrQtL3+3VxxEv+Le5No0LuitTJYH0cmR5apBh3UUFaWe1/
bYQT/uKLUByhgnHJLF3VAEcK10V/9P+mQo2WOfMDYV/9dfmVK1R4+sSkTnkP
jop/4e5pq2kwkEGxDiK8z1+53WYjDQI67pktE45VUY3TVKNBqcD1PGSIo7ZP
GmitLg0SkvSzwgnjWbv/nUI00N9boFJN2M3BoJR6iAbLK1XoF+E8MvjlHadB
sJTr9Na9OPrearox2oMGo6sSNjkRDje1ToFLNLAZStd+RZi6Ym+hEEWDodXJ
q3oJS1Q783ETaDDVZezNJewY6lHZ+zcNPKzaTeSNcJSz89S5N09oUKDv8VSP
8MTMGdXUlzRwEt4UbU1YKz/kU3AlDS7OH/rsQzjMKyzdqpEGb6Xl6i4Rrt9w
w1qjjQYVxzuxWMIi/TdFRPto8Cq5+UsKYesHt+snPtPA9W8zjXTC6dbJYS3f
aeBgUT6VSXhU9IHWswUaPE6+sD6L8HbKw4lIQTpUhc3V/7c/JCon56Q4HfIN
Xn68S/idUZ6jkRwdiq59sr1FmH+hSEJehQ4pG0lGlwnLt5r8Ak06fBV1/uJH
WDu3r9vbgA5Opw5E2RM+fPFc5e39dJBr2Dezj7DPQeHM4iN0KDbfo6NC+IbC
o+udDnQouKHiIkI4bVbb/V8POgx5/j45QZxfSTPDROEMHerP5ELzf+ed4ali
EkqH3HSNxUeERwMXhE9F0OFiYE7SRcKLxilT8XfoMCAgwrMgrD5VW9L9iA4a
vWJu48T9Hnhvd28xnw5k52nr0v/u/970BcUyOhzQ1ZO9RDh5j+ye0xQ6bJMd
3cIl6ilfrHR9Ugcdpttf+VcSrmebrbweoENrck9ECOGfdy408Th0iN9nqzRE
1KvoSdEXSot0sDe1LkwkvHn3k9tmggywvzXHb0j4+ADraIoMA5yPdm5MIOo/
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
/K0oOreywgEv612k+Gou/B+Fn0h+
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3871532#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
/D+yohaHHzLQf/MgN04=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$3871532#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
vIeb
         "]]}, Annotation[#, "Charting`Private`Tag$3871532#7"]& ]}, {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\) (\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\)/\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\) (A/m*\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {625.9477844238281, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\)/I ~ \
\\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\)/\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\) versus I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \
\\(g\\)], \\(2\\)]\\) at varying gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\) (V), fixed disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\)=0.1 (V)\"", TraditionalForm], 
    PlotRange -> {{0., 0.9999999795918367}, {0, 10}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.1\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.2\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.3\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.4\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.5\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.6\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.939219008720942*^9, 3.939252353553158*^9, 
  3.93925247768958*^9, 3.939252667376614*^9, 3.93925544042422*^9, 
  3.9392556119982557`*^9, 3.93926233671656*^9, 3.939262619434816*^9, 
  3.9392676445707397`*^9, 3.939267699764078*^9, 3.940133017478779*^9, 
  3.940133143746972*^9, 3.940133246020772*^9, 3.940133308529504*^9, 
  3.940181257518235*^9, 3.940181793272093*^9, 3.940211070363617*^9, 
  3.940215802444243*^9, 3.940218556531996*^9, 3.941070165622047*^9, 
  3.941073523977078*^9, 3.941073722419586*^9, 3.941073860617807*^9, 
  3.9410739958848677`*^9, 3.941074143872308*^9, 3.941080188340746*^9, 
  3.941080389882737*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"44f766ce-357f-4d75-9c3a-c54bf20411ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide6a", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"0.1", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"0.3", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"0.5", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"0.7", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"0.9", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"1.1", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "1", ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0", ",", "1", ",", "500"}], "]"}]}], "}"}]}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]Vg^2\>\"", ",", "\"\<Vg=0.1\>\"", ",", "\"\<Vg=0.3\>\"", 
        ",", "\"\<Vg=0.5\>\"", ",", "\"\<Vg=0.7\>\"", ",", "\"\<V=0.9\>\"", 
        ",", "\"\<V=1.1\>\""}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datSlide6b", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.1", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.2", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.3", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.4", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.5", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.6", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}], ",", 
           RowBox[{
            FractionBox["1", "\[Delta]"], 
            RowBox[{
             SubscriptBox["j", "aec"], "[", 
             RowBox[{"0.7", ",", 
              SuperscriptBox["\[Delta]", 
               RowBox[{"1", "/", "2"}]], ",", "Vd"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0.0001", ",", "1", ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0.0001", ",", "1", ",", "500"}], "]"}]}], "}"}]}], "]"}],
        "//", "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]Vg^2\>\"", ",", "\"\<Vg=0.1\>\"", ",", "\"\<Vg=0.2\>\"", 
        ",", "\"\<Vg=0.3\>\"", ",", "\"\<Vg=0.4\>\"", ",", "\"\<Vg=0.5\>\"", 
        ",", "\"\<Vg=0.6\>\"", ",", "\"\<Vg=0.7\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 6a) Acoustoelectric \
current j_aec (A m^-1) versus intensity I~\[Delta]Vg^2 (V^2) at varying gate \
voltage Vg (V), fixed disorder Vd=0.1V.txt\>\"", ",", "datSlide6a"}], 
  "]"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 6b) j_aec I^-1 ~ j_aec \
\[Delta]Vg^-2 (A m^-1 V^-2) versus intensity I~\[Delta]Vg^2 (V^2) at varying \
gate voltage Vg (V), fixed disorder Vd=0.1V.txt\>\"", ",", "datSlide6b"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.941080019358202*^9, 3.941080083666325*^9}, {
   3.941080615218432*^9, 3.941080647396435*^9}, {3.941080747484539*^9, 
   3.941080779745319*^9}, {3.94108089845973*^9, 3.941080961804798*^9}, {
   3.9410809960127077`*^9, 3.941081004890772*^9}, {3.941081049969925*^9, 
   3.941081096376107*^9}, {3.941081134856496*^9, 3.941081165918475*^9}, {
   3.941081226438225*^9, 3.941081271757719*^9}, {3.9410813126531267`*^9, 
   3.9410813805770817`*^9}, {3.94108144419982*^9, 3.941081667343235*^9}, {
   3.941081699407219*^9, 3.941081703590279*^9}, {3.941081751710535*^9, 
   3.941081758876318*^9}, {3.9410820195263023`*^9, 3.941082022918407*^9}, {
   3.9410824251948557`*^9, 3.941082426913816*^9}, {3.9410836515654907`*^9, 
   3.941083660853197*^9}, 3.9410841235228043`*^9},
 CellLabel->
  "In[147]:=",ExpressionUUID->"2b8ea758-93d2-4495-ba6f-0eaec2afd2e4"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 6a) \
Acoustoelectric current j_aec (A m^-1) versus intensity I~\[Delta]Vg^2 (V^2) \
at varying gate voltage Vg (V), fixed disorder Vd=0.1V.txt\"\>"], "Output",
 CellChangeTimes->{
  3.941080706766938*^9, 3.941080792360426*^9, {3.9410810798778343`*^9, 
   3.94108110292006*^9}, 3.9410811411633053`*^9, 3.941081175250126*^9, 
   3.9410817108973*^9, 3.94108177072604*^9, 3.9410841177770567`*^9, 
   3.9410844064492292`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"07e66170-2223-4b7c-b64b-9a32976d4fb0"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 6b) j_aec \
I^-1 ~ j_aec \[Delta]Vg^-2 (A m^-1 V^-2) versus intensity I~\[Delta]Vg^2 \
(V^2) at varying gate voltage Vg (V), fixed disorder Vd=0.1V.txt\"\>"], \
"Output",
 CellChangeTimes->{
  3.941080706766938*^9, 3.941080792360426*^9, {3.9410810798778343`*^9, 
   3.94108110292006*^9}, 3.9410811411633053`*^9, 3.941081175250126*^9, 
   3.9410817108973*^9, 3.94108177072604*^9, 3.9410841177770567`*^9, 
   3.941084406478846*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"31cd75d1-02d9-47bf-9d40-22cf225a01ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.05"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.10"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.15"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.20"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.25"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.30"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.35"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.05V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.15V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.20V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.25V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.30V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.35V\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\), fixed gate voltage \!\
\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.10"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["j", "aec"], "[", 
       RowBox[{"vg2", ",", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.10V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.12V\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.14V\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Acoustoelectric current \!\(\*SubscriptBox[\(j\), \(aec\)]\) versus \
intensity I~\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\), fixed gate voltage \!\
\(\*SubscriptBox[\(V\), \(g\)]\)=0.7V\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Delta]V\), \(g\)], \(2\)]\) \
(\!\(\*SuperscriptBox[\(V\), \(2\)]\))\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(j\), \(aec\)]\) (A/m)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.942254351346445*^9, 3.942254372092321*^9}, {
   3.942254454089519*^9, 3.942254522102982*^9}, {3.942254847767571*^9, 
   3.942254847894504*^9}, {3.942254927764761*^9, 3.9422549508672132`*^9}, {
   3.942255129822513*^9, 3.942255147132658*^9}, {3.942255262078947*^9, 
   3.9422553033119373`*^9}, {3.942273129555675*^9, 3.942273148715988*^9}, 
   3.943723335960442*^9},ExpressionUUID->"3b057b05-f7df-416b-9217-\
e9988434af67"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9950#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$9950#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 1]], 
         LineBox[CompressedData["
1:eJwVz3s0lHkYB/B3XtMSJ6W2yyhFy26iVJQKPT9xYtGFprWVy2xpal2K0qbL
HsbOKEpsbpO7st2m3GdO1kg7pM1SxoiscpmGJsb8TBlCmX33j+c83895/vie
x+LQCb8jJEEQO6n5f3sdUUofv9+3jYp3igaittHdTCN7GQ5AeIZ2h4ftAfsC
fm4lwx2IVRnHNGEs8G7prMhjMIF42MhZFxEJ/iETtdcYIdRd2dB0Ig7e2F10
S2ZEQ5zLTI7J6VQoXLg7IYnBBeQiul8dWwgcg8rvEhnpQPgmpAVklMGP+4tK
RzXFsIdroN117i8w0nECPJaXQqvUWmqPmsDKV62sv1wFj81xcj1PCmeebwH+
WDWkbviqruVoByyuMumh0eqAVf4W0uZ3g0ju1vzCWQL8yKjZQeZ9IAnNW7pf
1QD8alMXtxo5aL91mfsg4ilYBkW0uzgOADkpmLfUqgnuOOuWO028g006lmhv
STMo/VHX3fQhaOY6PG9c/QKIivWa4rUjsCJ1ePKuuhV8ovVUYvooDE/09rxc
1wZNqlH254MaKB6qaTK+KoMPLYnPAls/gLHZbaxQtMNHfxlP4DQGV34Wsgst
OyDMxiNJnqiFcSRQHIvthI9Xgy/tU41D9IaGqkX1r+Com63+U9tP0FvScFlq
8S9UZlUkZp6dhOnQ9hzrc90wnp1CHy2ZAhtX/Rl2zWvQbh8gBmqnweOGxdHy
xT3wpHi3v+T5ZzhjFryyP6AXalrJrdqHX8BWtc+oc2cf+NyrXvw5aQYWzB01
aJjqgwWOgrD1+3VAr8sp/Sa3H8rYZcQsPQKFOdR0zfaWg6XdT48KfiCQ4PtD
hY/G5WC8MSvfs4BA2mHTeYOZb6Gj7B9uSDeBhHs99NLdFVDTpp42XkhDsZ68
gqpBBTxaUhGQ6U5DFm+8Xt3kDYCoXqT8EEFDWx256YwNg8DKEB0QZNBQwPIX
kzTZIBRY/zJ2TkRD2qZkeSTnHcQ4myv0OmiITw+K9rNUQnqcgY/1KA0t6BHe
IBuUwOW3eZnqk2jWrxzmlqj3UOmgDg00IxFxN6hUPn8IbDgrFTo7Ep3MLk2e
LxkC3yAL3ertJKq1uWRgcnwYrrUL67b4kcjE66RtvLEKbO17L7YFk+j1mlbZ
WbEKBIz7LBRBorJ8sFQEjYCR63C4MIZEgaWbTMxmRiAyfNnxOb+RKI5XxHl9
Tw3uhyWH2ckkeqA0yzH2wVDUGfM3M5NEl/J4rJ5dGAyrDzicpxziN2JV4otB
z2o8rYjyMrG4bKc/hq76U2vVlJNSDjZeOYSh1QtJE7JIdGzTdY3hWQy3bktk
Qj6JVnK/9tS/haFEv/aTYQ6JZjZfmNN5B8PYSTulHeWukbdttwQYlIZWzUzK
qf6VgTvKMWRryqPyKetW+53iiTHsMpu2X59L/StNydeTYYiQxmcz80j0MGHi
sOwlhqlZ4+0xlNOdgq1vvsKAznvT8yh7/7G2ansPhvLwKtcByn/GtDzjvMcw
GG+++XQ+iTLXbEzxVWHYofYwvU45Sp7LtMAYfm+M1Ygpr/IJ7308hsE51TGW
XkAiOq29OHWC6uuXbFxFuU/oFMqawsA+cLrfm7I49Kbdui8YnpQw409Qzlph
pNXpMCy6wF6SRvk/A7JTYA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9950#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVz3s4VAkYBvBzpC1sMl3NlNBqN1F5SorUeza6udQSq4uwLsUs5Vap7WLs
TKlY82yjFJWMpUxjhrDKpcjWQ1OSSoWhMcvI5WjXJYrZs398z/v+/ns/88CD
niE6BEG4M/d/uoRoGh50e69naoJvR9R6XSdOZBvbFoR839btYT9g5fW0jDts
ZxCLq1yfhAXA9WlT4VW2F4isAdYoNxI+wSMVv7ODQfD31B+MiEfr8jNOyexY
EBxd4/BoITJnbz99js1H/I1Um6jjmeBNvfPdWbYIZvJLmUKhHDt33ZANfMwG
5W7ES42sgoGW57t5gQxCY+7l4MV1WOTRr3l4vghxVcKz/0Y04Mgze6QN3sUa
8PMC1r7G3CKWkiTv41NtDIdX+w4lKidFvWM1ElnE5KonbajmXp23q7cGcTEb
lX5BKgx9u266NOIxkv6U5DwqU0NnVGI0b1EdMrhHr9i5dsFOG1CyI1+B0vcD
pdYF3VDwbZ89WlIPPqRZTfq9MBX2jN7qf47SNDfzSlE/ekbalK9sXiAhJHlV
6+EBZH8oqzP8rRHhYV/X6ZV+hKFJLq1Wv8SxCM4W475/kBRWvC/T4jUOGUty
3b4axDAlUYeeakKemYO+6bIhxK6oKZrz8A1sTS8c+HHNMNrya843mL9D1ywb
VaXbCD5zX6ZbHmuGl4NFdfO2T7D6fsrEvrIWrHyS0T5z5Sg2Z5nvL5irRFBh
T5Lz/DEcMfFf+N63DUHNIYrdmjFY93obNLm348q4eOl18WfMnD4wtWasHWHG
LDoj4At076fLvsl4j9xcgVhXdxw/25a91XNVwSu1+K/TueOQbA3MrBxWYb0e
5TfsMIGhHo5R58UOiEzOLTl8dwLFOzZPEjmr4V7o2bl/tRantgiuF3WqobRX
m1mKtTBvdXkjFvyNFs5PXyx0CMphNV/EXtGJixMJZodWEJTvgvpRsrETRdaH
FdV7CGqoLlkVyevCiTM1RrV8gkrT9Yv1tNBgk/fsKFUuQc1UFmfp1GggJKZL
Uh4T1OQTPC/7qG5wPOocLboIirjlJ1PN+ICooPBs6JBU9BVZ8ozqD+BIS2+6
mJBUhVXiVNaBHhzaGZ1ZvIqkWC7R1gmGvXBEq3mNC0m1LH3eeLS8F6LuwZRO
f5KSX4OF2q8Pgc9Oji6PJqm9MjuWyUQfNOuOzOlIIKl4wQ1eS14/8v3t+6su
kJRUY5Ju6EZDNmnW2YNZJJV4VRCg3EZjXG+aOp9xsGffonwPGuedY6z7Gc8v
L5e7+9CYZ5AjCBeT1LmUPY+SAmlM1v9ld2g2SYXaXf6of5TGgZJEkW8OSS3k
z9oyJYfGyeTbJ1fnkdTEmuPTmm7S8PvcnRrL+G1fx4scCY29kl/TCxgLfe7s
3VRAw/G5JspKQlLaJZ4xgnIa0lBntwW3mX8bUq5NaqSxrvlMBZFPUqWnR4Ia
X9G4FKKpcGQsWutvKX5D44J0rjSOsesfy4o2KGkYiSd8Bhjfi3tay+umsfBm
YbtSRlIXl65K8eilYXXPfSdHTlJRqgwvc5rZm0JXejNe7Bbe9mCQxsDWoF0K
xrrky2zhCI35+k7JUwpIqr14LTdgjMZtp43yDYzLueLlNuM07Foiq08wvmRq
MKTV0rAsUTwsZfwfIsVOPg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9950#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.5, 1]], 
         LineBox[CompressedData["
1:eJwVz3tUzHkYBvDvKCt1pFgyRhLFRtIWVsLza5OurKmUUEYbJVpFO2QXjZo2
Cul02kIMpemmkglp2sicNnSR6b6ZqalN91/RRVSzs3+853k+z3+voe8J18Mz
CCE7Vfd/Oh3urn3es2ebqoa/eBOyTd12cbCcuR4kfLaQ57YblneSbj1ibgfJ
uX6o0Y0D56rGghSmO0iA/tQT92B4+o2XxDP9QIwnh+I9wvF+3R+2V5ihIKmH
d7vui4NgwU9Rl5mRCI8xqas4JABP49GqS8wEUJNHZdzgfOz1ups3NJwG84mg
DDubF9BS8g7YL82DIEYrUbPyFYzZg90vY0Q488mvlxjW4nS1FZJGihA3MJr6
TVk99ES6MgajFBwBy5bNasFjhW1lzZYymHsIl441yFAWmMLy6pcgruiQwKa0
HaMrt859EPQ3AqKqiz16OzBjIluHZfwaIn6bT4lNFzYqOY/dciuxJKXLxiqo
G5WR66vLV9fAlMXQt4/uhUFc30Tm4FvkNC/yZr3qR9+4XFZv/g5pIiNNjZZB
pPUWv9a+KsVkNHeWkD8EbX0h3dlZh9YwLfsV8cOIPVp4RGDUgCMCThKP/xFj
VHZnwIVGXJCnJuvwPyHUQiJa+LIJdyscHQ2OjUCeK4mpNWxBcFDz3jv7RvE1
sO6mydl/EBYhjzxhPYY1NrOmjxS34up51oIctXHY3zP0f6gnQ0Soanw3jtP6
B5e3H5Bj8+Vm8feXPsO0f49W4842yPJdGhwsJzB/7pCG5Esbjj5emZnQPgH1
0pt5K261o9KsLKrx7BccW1/cPNtZgd/sNPvV9L4i29FX8NeYAnszOSXC9K8Y
7Vus05XYATfW1lAvo0kUutmrJWzvxHIvSdectElccODfEXV1wonnbZ08fwqG
752aUvn/IqHwftaqs1PY/ENkAtOiC1UdTbt2KKZwYGnNBEPaBcuaX2sXb53G
6OsrimDeB8zUtBk2TJ5GkrpPqKtRN0x9i7jHeqYxX1Z4b4akGzfaP9MWlkrM
PMdztwrpgYtZhXzBeSVIpk+eYl4vwh0VxudKlTh5I+/KvLJekAyzDb2EUCVr
ojV0f+lDYkMVa78BoXSdTppe1O4HxyfpzbQVoVrXvpWGifsR293uyNpDqPzb
MOr0GcCJzFiR/DihvPM26upPDyBe6rKu/iKhwvl3ea1Zg/ChdCpskwn1oFv/
prYLjXMS9pLJHEJFp/A5sl00mpp10tgPCOXnOmCcy6ax5dSmhUKVl4jF+Ts9
aYzEvC9i5xLq8rX95bG+NMwpO+X9PEIFbEwe1gyjUcooiHYqINTyyG8dZqXT
WJZVXB7xhFDTm36f05hBw1O4KLNB5eaBjnfp2TTU3cVck6eEivN85L3jIQ2H
to/SapWVq11P8cU0ytGSuOiZ6t/aa7fVpDR6rLjbM8SEeho1/rO0nkZBgr9s
QuUE64MmqU00Jg20/JxLCOV830z0o4wGzyPCYlDlZ2eqXvF6aOxKH261KCVU
4toN19j9NLif19ZHqByiuOVuSNMQ72cX1an8nctx+fMRGno3/O24zwmlzqhL
ixunkXXdf6Bc5bZC60DOFxqu0gCe3gtCiQNT15lP0Uj6EMIIUPlPA61RpZJG
rvuloKcq/wfpi19F
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9950#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1:eJwVj3040wkAxzfp9KKFXJ4JZ66SlDwVRbXvFcVVKtKjIilvnV5O6hJPV+ZM
FKGQMqa8lBxbeXkqKg+jcr2YcRQ2rbWG8ZvCGPY798f3+Xw+f34ZR3/3Ctah
UCge0/uf24MVwtrefcxpXTp68TRT18U0XEJfC0ot92+R/h6s4WZxyumuoCw7
UjagH4Adb9sf5dC9QaH5NO+bFw6fIPWz6/QgUIKe1TFpMeheddklmX4WlAbL
ayYGqcj7cXf8FXocYqISb1QtyANrVrl1Ij0dljeLI9JM+dh/4A5PNVSAmL3O
T8611WIuyfJzs+BhD9MW8YavscRzUFF/tQLHlhK0g+nNiHznhKzhJ6AcuKVR
qVthUmEoplJfYL3CyCme9gFVUpc37zfWIcHvweq+yG7UheUsOqAUoKP8n3Vp
0h6MLN00v/TkSwwnM9rSJFLojJcYLFrSBA4j0Ho59QscyYCqvWVvMGlXEOuj
luNN3Np3jcvfY7/It17UqcBPqf3jxYPNaDZsWnhD0od+tUTcZt+C4RoL7rkq
JQr6qpto10Qw1m+rTbg/CJr5PUIma0WjY+BmnS0qJP1WGZK3+F+oVjw39qYP
YfSXEtmxS+2IadvFvDwxhLOrBRUL6ztgx79WHfPyGyRlgqtCxkeEesoFFznf
MRHWmm0T3Ym/Oh25XsHDsN2spw2p7oKVSGhlTx+B211G6EMTMYwuRFpSW0cQ
aX7Y6pOfBFEqC6u66FGsUO6b2+7RgwlfwUwLEzUWzFfNEmh6EGjT+FX2WA3d
F9m8nzmfIN3qwS50H8PxtdUfZu+QQrKmW/aqawwlvx7Nez4qhbmHdUF5yDhG
+k0N5Jmf4aDvIO/sGUflXrcZ6a4yVHxtcEvw1+CSO5tbIZfBsn5z6OO3GjC6
t3fks79guCW0yMlhAs7r4tLpq+UY0Lx7+IA7AT+L9+NUkRxh4sb51VMTGGlK
loazvqJlU2nxVv9JZOn6n/VarEDtD0p1RvkkFogr7+oIFMh81CondKYw80+W
t9PpXnBO8Y3Pe0+BUuzPkxr1QZSh4iRyphBxm5dsVNeHNGYXL0Y+hWe2CbMM
T/Xj/JwMg1W2Whhuj1gRS1MixHeQ+i1Ui66VzaKoGiXyTkitw4u04Odiscx/
AIOxl/pedWtxiOdoaK4dwMdbUS9CDEnEsO+wuh4MYubl5qTcbSRKFebZtJ0E
cs+4WLX8QSIhhx0g3kXA7faXp9xzJIK8BpaUeRIYizC1PhlJwqymhu/hQ6D6
9fFovSgSV1J8G5OOEpjtOj7P+QKJY463huZEEXhVvPB7ZiwJqzhjd70iAjM2
ndKzTyGhXX9hXvt9AvHCNTZj0/1h4HNLUQkBNUvHsjaVRKpP+aFtDwmU2vcm
7b5OglzudYZdQ0DbbxZ8IoNElzAld4aIgGO7GT03m8TjeHWgqI0AkypMDeSQ
SN9w2Ca/g0Bzg6t4WQ6JHYV2FVvEBISeWZpHuSSenn/7mtVLoNDO1rnhDonM
lQ4pnkoCzpMmRxLvkjgt5XgzCAI50Rb+Hvkklu08IakdJsA6WPixtYCELrW1
IFU9/d9s48GsQhI9lRvCAjQEbDzpfN8iEjVh+avspwiwLd27LO6RuPnT3BGS
JBDGF4k/Tfd/j+B8dQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9950#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 1, 0]], 
         LineBox[CompressedData["
1:eJwVkGs4lAkAhWekctmEqe0ZVmiRMFvamlLpFFkt0bo99ORWKVbJdNluW2ms
S8mllS25DtlK1CikIlSztjQSM0JpMCYNZnzEGLfPrP1xnve8P88x3RvpuV+N
QqG4zeZ/uuyXNtX2+WyerSz/IdZmdUcDVid9DSglfbyrtJ34MTc9q5S+DZTx
D2HetCC4NrQ+zKZ7zzo/cQMtEr4hymep9BBQDkWlMWlR+LQy3jGJfhwU967n
G2kp4CzeGZdAjwElQPq7KS0XbI3S5Zfoadhi/+GcpT4XfrvyuEPDBeDU1AhC
GbXQVrH9nZdywfJtsfCjvoK5x6D05eUylOyJvfu6oBEn39ohffQJWBXV0+OE
AEvK9ERUag2kWWwbaXUrHokd+Y2bXsCyjBF/WPgRL8KzDXfJeLhwfrE7/3Un
FBb2C+9F/AvOkhN17Y+6oTZRpGtoXo+uHeVnFLd7wFQFP/K6z4dEn1HKifwM
fsyat3VWjVivV/mq3vwLjK8MTBQOvkOBZnvK2JgUA8pOUcuqZvwSFzTWnNOP
gv7Kep1kAXTdfgvKCJRBx+g2IZEIcVY72kqiOYjEX8sPcMzeY9PT+EKNJAJj
W4okYVGt6C8ujTNKHcLx1byyb1+2oZc+8M0il2F03uddbjL9AIeL/YkVWl8x
FS7MXHHmI7Smg7TmP/8K663zZw5UdmB5JYOqtn8EzvmmoQ+WiGDoONJqozuK
k0ZBy7r9O/EkIlVXUDgKG5mPdqtbF87byOW1GxSgLRzS4E124WpWeUtpkwLq
NZnc77O6oWEhs37jN4aDayrbNV3FcDI+/0738xiKft7LqR4T49KkA6syTAnF
gIFu77UeZK6SzXUXKVHu5TwnbZsEFWeKDbf7jSNqe2xuWa8ER62Gi5f9Mw7T
Ty5tN2M/408/W6WH9QQ2rItJo6/uBd+1x8Hrrwn4L22coAp6QQ2Yd7dlZAKK
+iQxi/0FN2wPCh/6TCJdPfC4p5kUMSPtGaPFk6CJyvPVeFJMc2SihplJzD3H
9rY70ofF1fWCPK8pUAoDuWL9fhiwkz855E7haAY3Sf9FPyYdtyoT5FN4Zn1R
Q+/wADan2zA6mNPQczlqE60jQ0TCmwycmkYH453gdJUM6653izSqplGSAzNJ
oBzi3SGCS+PTCOAy9Yxm5FBE0luCbElciM1jd9wdxL7k4NgDh0jckxpl6uwg
0J/PdzLJI3ExOzZY5E6gqsH+8bx8EiGecvP7HgScTR6qZLP+XVVViZsvAfOS
+gVPCkgkpOyuS9xLINr21fKdd0iEMW8Ma50mYFfktfsYl8SymEXb598icNt2
/ZysZyRm1p9d0HqHADMm3vJcNYl2eU/zrSICdQ80zQJrSFzxLQ346QGBUG1+
tvFzEiorz2OxVQQindyzOTwSHU0pOXMEBNalHhZmvCHxOE65T9BCwI3psuc0
n0TaxqAVN9sIWF2Q83wbSLj+/UOZg4iAyTBXd1EjiaenGl6z+wj84WJRmdBM
4hpjbYqHjMARxlZVqIDEEXGWtylBIGdXhIGTkITljkOdtaMEjOyWvp9pIaFO
FRZcUc7usy8/8fE9ia7yjeHBkwS0baIHK1pJVIXfXLmKnP3TMtk+rY3EdWNt
hUpFYK2PeB+rncR/GDB9nQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9950#7"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \
\\(2\\)]\\) (\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \\(aec\
\\)]\\) versus intensity \
I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\\)]\\) \
at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\), fixed gate \
voltage \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 2.578263172367991}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.15V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.20V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.25V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.30V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.35V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.942254170602805*^9, 3.942254407137549*^9, 
  3.942254570338941*^9, 3.9422549723937073`*^9, 3.942255168098217*^9, 
  3.942255328996318*^9, 3.9422731753545017`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"5fcca4eb-e8f7-4e34-9ed2-00912bbc3e35"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
qu6JvAjsm8uFJ+fn8fNkz+aHYv8PCXlTtw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$203431#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$203431#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
APv/AHlC2ug=
         "]]}, Annotation[#, "Charting`Private`Tag$203431#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$203431#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$203431#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVzns8lXcABvBz3pdFySWVHaK05BJlZpq0nl9pjpAiMks6M910o/EJn6wY
kS5kR2kiuURZjnaOWgiLVVNCxKlOjk7ouL4uSRT27o/n8zzf/x7jgEOeOykO
h7ORzf/tslPZWNXtvYadAXmdIWtUHPWD5TxbcKS2wcH7NuOry2mXxLz14Egq
TEb3CeBa1/pnBs8LHCd5iu2BYPgEjt1N4QWC49KfWH/oOF6tiHc8wwsF58kf
9Odhyciat+lEIi8WRMtia82xLESriU1P8oSomoxpDk0txve+V0SDQ7kgAuvS
wsi/MWs62o9vJMKgpsbcc2trYeIxoKw+JUGWlSz3enwjjjyxR9q7O/hwrl6a
ur8FehKdNi63EsWfLeXEL3iJWwrHx/Wr70FteF21q0U77gVlGPj21cD5bLfM
qU6B0aXfat048ABHV8493ODVCWq8UNvApBZCV+9IE1Ml7KYFt7YUPYZwldkV
oawHj2Ntn9y3qMeiPOkbeWo/Fib3jl8baEDL1rB0gfsgesfkbc+sn2LAM9M2
sHIIuT1ltZpnm/B2v9+1fO8RaBrmMx0dzYhkfB31le9wem/JrqwlLdDoerQ8
asd7vCeFHXuOteKB99nRiOExhNrUSOZXS6ExyEsgAeOQF9WcajR+gev5eRnO
igl8DGpON498ibCLGtWb+Z+wbO2MqV1lMuQGO9U5/DIJfrbx7pt6bdAeSSAx
4ikcMdyx+LWfHJJFa377eHsaln3es1o3tuNISn2XqjuH6GoNqtVMtCPewNmy
qJRDVCrTRV9ceo1wz4eiwjlcss+27Lm6qwJHT9hqZAdySeGGgKyK9wrAVKw3
XcAlo7362l3n30AZlZ3nIeeSki18Wri+A7O1F6QIdChyzDnusqSrA+aNMrsZ
9hQxfuUizYnrxIUX59XdfqDIqpWxQp5NF/b6vpIsiqCIn1H9OLepC5KHZKzq
HEVGa88ogqPfIuHjg0PiAoqkqfiHei5RojEj1cGmjCK6bSXZVI0SI6oWI+qP
KKIaFe1lH9INVCj8572gCOeav0gxpwfdlS3lIV0UOfy76Mycez34MD/h5aZh
itxdlqCmc7AXcoHNqcJPFNFxOWwZo9mHQO87Uj9VmsisGpoiyvvQ3u28rXM2
TYozsaTDvx8zE8Mzls6jyXaRnY7hVD9cjLwLbhrQ5HjclWjZ9QGoT8VqYTFN
bigN0zXdGLRTyvm9pjRJyIgTtLkzcJkcPEmb0STQs9+kyINBQV7uqAHrBeXl
xRt9GHjpGd12Y52YtO3+6QAGFX6tihus99hdHJoZwYCv5/T6oDlNFsfOdZ5x
lcHq8bi0XguaTH1zdHZrAQP3A7vN6WU0ed7/5unVQga1z6LE+qyTfcTbnW4y
0B32FW9gPW3h+XNcOYPJ79YG5LOWNSZl0k0M/I19jv9oSZO/Toz91PSMgZnH
wavhrIUOO8xzpAzc7k/8k8TaNW+5ZF0bgy0Wvw7dZV0aXvdvdDcDYUvFBM+K
Juetvk7y6GPg2N7XZ806RHHJy5hh/14USfmszdz2y6veMQiz52aEsVbhNucm
jzHIrLkQdpp1e4lDkGCCQenTRn4O6/KgnBXWkwzWfynWLWV9YeGs0elpBr55
eN7A+j9It0c7
         "]]}, Annotation[#, "Charting`Private`Tag$203431#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV0Gs4lHkYBvB33uxm06qpttmpbKtQOrFIx+3+lzZSVOIatlFWyaFCbZty
VUw7OlEkK0U526xCoqtd0sFEySGNw8TMEIPB8GobhGLf/fBc9/37cH95DD0D
nLxoiqIc2Ps/7b3UNU+6XNaxNTet/fA6HZtZgc18K1APr0oCDmyHZWJcwn3+
RlA+/oHaAx7YUtmQd5PvDCrJ4qXloUAI9g09iubvA5XpHVMVEAqF2TmbS/yj
CA0OSJ75WxSSvtl29iJfDOI6uexpSBJEuvcXXODH4Emiluf/Ry5c3ZJz+t+n
geJpnCKCn0JvXCS0/S4HSW6NlZPWl8N4R5+6JDwf55fFuinO1iCoahXitH+j
P9V7ubdfPXj5XCWH8xiyKfr2+bwmPGi1qahe+wwn507vWGHcgmd+N2e7aSSw
OsYzyShpxYDJj1PuHirD7Q4L7pGN7aCHs6bONi6HsN3+YrGeGtbjHg92ZldA
LIiscsvrRoXYqqp0UTX6Z4glckEv5kb1DGf2vYZ1cIHnYsN+9Aw1K+vM30D2
O/JsRO+R1l1Yrn9ZCkfrCkUX9QH6Bn8yKlUtFPWqcNlxLSJ8C/YnGdVjaNC1
ZEw6gEGSpfIJacDa0++cXH4awlELSf7MEhlMfLpXUTEf0ZwtCa8xbISJ9yij
ZYYx6lcbbxrchNCPTROI5SgWr584tr9Qjopo30aZwyfYphh63+MpsTl9Tpm7
72cEGeyZ907YDM2IqeMvu8awROOi1+DQgkTl9UytxTimT+nXlYywf0o/redP
U0TncXzO/IR3+EGRUHjFjSIHrArffrWlFSOXNx0bu0ORrM2eScWDrejfvN00
W0uRgZ5ZUzti2+CVq4zeacYhBTttJ8RsVMFphevUwf0cEmIXlpjfocJxO+dE
xxgOMVTYy1LD2rEmZG+fsJBDVq8Qx/AtOlA/P2HBqRYOEX5XPcyRdkBiHM2V
j3HIQPml1kBRJ64+GB15MZsmcTq7jzoZqXHldERdlCVNpisLUmiJGje8PX1s
7WjyxSmR86rDXRA+FViuE9KEytyd0zqtGz9XngtsPEiTIzdyLk171o2GMGn2
4EmaPFp8Xpfr3wOjUAf7+eE04dofWXJGXwNVlUz77TWayJe+lp4o0qB81Dy4
JYUmubdgpNrdCw7knZ13aOKeY801GOvFmziLsn8LaBIaliyS/9WH55O6Xn0q
psldtUG8/lYGW5MNn78spcn5m2EeSkcGd5peO/ew3ufUa5y9g0FbS+3byWU0
mVNUlOsgYOC78kPJNtYXI3eVRngy+D7fjF/H2sf6+vtJJxh8Sq+uULygyTzx
DLuJGQyiLhiIOstpMrby5NcNtxmkp+aVTnxFk7e9bW8yshiYn3GmF7KOEtx3
33SPgfxy7S4f1uOLnH4NK2IgMN0Tp2Ytr4m8NUHKgIoXru2soMnDs0N7pXUM
govs27+spEnMmj2mqTIG0E0Qm7Dekr4sf4OSQZDVqQwv1v8cr3wp6mKg4FYG
tbGOXbo8coeG3ad719JVNDncmuBsyDCo2hC5YB7rhVsPNj/RMrhld+OeB2sd
Tm1a1BCDlPFz6hDWLQVr/DxGGHi482Ymsi7ySzUz/8wgNtRhdTHra3P1BsbH
GaSKzVwUrP8DjDRebw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$203431#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Delta]V\\), \\(g\\)], \\(2\
\\)]\\) (\\!\\(\\*SuperscriptBox[\\(V\\), \\(2\\)]\\))\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(j\\), \\(aec\\)]\\) (A/m)\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {788.605712890625, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Acoustoelectric current \\!\\(\\*SubscriptBox[\\(j\\), \
\\(aec\\)]\\) versus intensity I~\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[Delta]V\\), \\(g\\)], \\(2\\)]\\) at varying disorder \
\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\), fixed gate voltage \
\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.7V\"", TraditionalForm], 
    PlotRange -> {{0, 1}, {0., 2.7603401538419163`}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.12V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.14V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.942254170602805*^9, 3.942254407137549*^9, 
  3.942254570338941*^9, 3.9422549723937073`*^9, 3.942255168098217*^9, 
  3.942255328996318*^9, 3.942273211169589*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"2890db76-75b6-4718-baf6-b7e9740e3ac8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide14", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.02"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.04"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.06"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.08"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.10"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.12"}], "]"}], ",", 
           RowBox[{
            SubscriptBox["j", "aec"], "[", 
            RowBox[{"vg2", ",", 
             SuperscriptBox["\[Delta]", 
              RowBox[{"1", "/", "2"}]], ",", "0.14"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "1", ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0", ",", "1", ",", "500"}], "]"}]}], "}"}]}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]Vg^2\>\"", ",", "\"\<Vd=0.02\>\"", ",", "\"\<Vd=0.04\>\"",
         ",", "\"\<Vd=0.06\>\"", ",", "\"\<Vd=0.08\>\"", ",", 
        "\"\<Vd=0.10\>\"", ",", "\"\<Vd=0.12\>\"", ",", "\"\<Vd=0.12\>\""}], 
       "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 14) Acoustoelectric \
current j_aec (A m^-1) versus intensity I~\[Delta]Vg^2 (V^2) at varying \
disorder Vd (V), fixed gate voltage Vg=0.7V.txt\>\"", ",", "datSlide14"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.943723003380561*^9, 3.943723025259808*^9}, {
  3.943723074945258*^9, 3.943723075914568*^9}, {3.943723112883711*^9, 
  3.943723140816202*^9}, {3.9437232214694433`*^9, 3.943723329594648*^9}, {
  3.943723367571362*^9, 3.943723372001995*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"8766128a-5dbf-45b6-9f54-746ca6ebf846"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 14) \
Acoustoelectric current j_aec (A m^-1) versus intensity I~\[Delta]Vg^2 (V^2) \
at varying disorder Vd (V), fixed gate voltage Vg=0.7V.txt\"\>"], "Output",
 CellChangeTimes->{3.943723495034666*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"34d00304-6c6f-41d5-994f-6ef7c54edfce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.15"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.1", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.15", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.15V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.1V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.1V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.15V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Carrier number density difference \!\(\*SubscriptBox[\(n\), \(-\)]\) \
versus position x/\[Lambda] (\[Lambda]=10\[Mu]m) at varying gate voltage \!\(\
\*SubscriptBox[\(V\), \(g\)]\) and fixed \!\(\*SubscriptBox[\(\[Delta]V\), \
\(g\)]\)=0.1V, disorder \!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(-\)]\) (\!\(\*SuperscriptBox[\(m\), \
\(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"1fe5a867-1790-4892-9466-abf189b1f58a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
sGBPl7Tw/3/f+h/aX/XS
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4803106#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV2Xc41V8YAHBbWRn3ykpRiswiQvUK2SGjJEmShkQS0jBC2bOJUH5ChYRU
QudY4brXJiPJTm5SoqHf8dd9Ps/7nvOe7/d71vNcGVcvm+NsLCwshawsLMu/
ZscnWqsn7XclVXKVhThyYg4DCe8P4hpw/qezL89xTqyecSftubghnOzdqJbs
xYnNad3F6eJ2YOpZczM7jBMfcPv5JkncDeYFvFrrCjjxgOp1g1hxX+h+bd3M
xc6FM6lWEVHiYeA3ZjXk+pgLh6x4vilSPAWWJPdq/PnFjR0OZhV+nc0GVkGl
z5sbeDDvvxAnY+lC+HX4UdVTK34st29mAkeXQOnj8yY1j1dh/xZtuPP9JXgY
axzl4xbCq0uEBllZq6BayotLlkcYlw0bNNN3ICgorFNSYBPBXSYhs7HGCNqb
Nux/yimC5wsqRS1sEBx+fEpZdaUI1rqkfbThBIK0vLcfFQVFcLmI6nx1EoKa
22FGK6VF8EtDiXXFEwi8Ek0UbLVFcEXO1/MpKRhMOvvfSJ0Vweh0uuTB6Rpw
TDiSY8cQwc8nPTyc52sgR1GEwtsugrNP6rw+xlILDgcVzKs6RXC4e7fjWUot
XGUbEpbpE8EmrkL3ru2ohepyo/l3oyKYfjBcrCCmFiSy4UrRLxHcb+JJZVeu
gzaPyM3NshRMq9c9vkKrDkzfR0TpyFFwpRFPKf/uOvBW48jM2UTBGYaP7MTs
66ByaeOkvxIFu+p9TFa+UgdZm+s/LW2j4Akte2EHGjGb6K90Ewr+sXHnqqee
9fBx7nKt1BkK3jWsXx8VUA/+rAN9Z89ScES6SdDJa/WQ3dKgWOlNwaIUO+b6
u/VQH/Hwgt0FCtZk9aDfq6mHjja1jCNXKTig7078DckGsHTJfMWMp+A/8d9X
ub1rgLj2IzXfiijY0PxX/e6OBrizurBzqpiCY7hYgtd+aIAxTQH+oRIKXnOF
9+v77w1w8Tz6/LacjOe0LGPfunfQ55B+8Fg1BQcZWieA/zuYjk67KkWnYLbF
x4KSco1wM6TIzm2KgiVp+nOg2gipa94MjHymYI2s3k437UZozQ7ud/1CwcdN
uVML9jYCu3ax9oGvFNxw11VO368RrstFn5SZp+B4HXGdU/WN0CwUZqLLSsW5
AkVSca2NcJD9N2syGxVXDxv9K+5rBMWdkYoT7FT8Lcq35g+zEcpa7tKiuKh4
fx/dMkGsCdCkj+EzXiqWuhxx7MWpJtDldCgLpVLxNus1Rv3nmyCeg9X8mSgV
W24okWe92gTfjGvMBlZTcVDzxy9mSU3woMQ7SlmCioeldgYMvmqC7FfubIXS
VJz3Zi6Gk68ZrLlX3d62iYpRYpTXZtFm8NcYfa0jT8Xvj8vYWK1rhneXLxvv
VKBiPgGr1Xc1mmH+1kyijiIVezvnZykdbgaHm1xfqKpUrPnPpcy2oBkuSO+7
bqVJxRZ7q0P3lDeDumNX0UYtKj6WutZKCzXDNPfFA7+JE7QGxyW6miEjy0Iy
XZuKJ70OiQ//bQaBonp/tIOKWSpfjbZz06BUmR4WvpOKRfkkimuFaFAR7MVv
tIuK9XN7zPLkaOBRgROqgIrThuwve++lwYaKPscUfSouVik1cT1AA+2ROjAw
oOKGyxSq3VEa+OZO32cS/xBrf6p1gQYfbAyb9PaQ97fP+sNSGg3Sfjd11xhT
MSsy04+dpsFAlG+GrQUViwnmCwTN02D+grjoe2IV55V93iwt8JeziMN5LxU7
/qo/b0dpgfAZDVNnSyou2brnP8kdLVCZaXtGz5qKG4Ozz/EbtcBtba2MYuKh
FvZd/6xaQLNfxlR2HxXze6Cu4WMtcPL0A9ZfxO4PYUV+dAuEFceyRdtS8eXZ
+x2pN1tgx4nhqQniZFjKjM1ogQfqgaaGdmQ+9VVon3veAvq3pU7NEXcpSHEd
e0Pan/+rYGxPxdP+l9rs6lsgapbmcodYnKLjsb2vBRDHrKr6fipWc72rtXmU
jKdMuuEysVHRArsUswV+7f7WiYl9LF6k/WOjQ9w7YxuzA1R8457oqVk+Ori/
zKuOJM6YuLDtkygd8j3OZdcRN4dptNRtpkNd7kLTdgcq1lnVxJa4jQ53F0sC
fIhz7x7VOqRHh/0qRpvyiEU3LHjImdOB52tadz/xtYK4TKY9HUor8yP5D1Lx
1+1ynS9d6GA5e3SnLrEzfr0yzIMOqLT023FinZ4JH7EQOiwMsrsWE+e6Bj0a
jqZDatuEZAex6Bdq/5NbdPh4Abq/EYf5PxH0z6JDq8K/ZAFHKp5lNdiz+wkd
Ajeus9lE7BzTe5H3BR1+BaYK7SRuFvUu6HxLh2B+jzYrYp0srk8ZzXQwT41M
OUKcq5i++nQ3HZ6Vfztwhli0TN1CY5gOEq0PpPyIw/Qag5em6cC+6fbwZeJv
jS6lDT/pwNVBywsmLsr/7WvKyoDGhj0+IcTjTKP4Ai4GUGhLukHE0tuS8kT4
GFAdtMgVSGwXOIADhIj3a7WfI46ukh8cEGWARMarTHdixOG7oC/FgNnLEV4O
xAumVcK5Mgzw/3wfjIlV43mU+TcxYL5ihZA6sXuHvbGPEgPq7r37JEmcLp51
tHsLAw5yTrxgJe5wnr60Q4sB8nYesSPk/fFma93K2sGAN6WH3GqI9SdDi7j0
GfBYFe3IIr6o0tLoYcyAxPu5opeIi86LjzIsGLCqTPzbPuLxcrd/22wYQGeR
ocsRSy8ViqceYMD5ocan8+T72xv8Vmc5zIDU2A1xNcQxN4wsj7sy4NPqHd7x
xIvCA6Gqngz4qfFRW4pYzUE+PcWH1BePlxkk8889/fyLRX8GGAbp8qYTd2zi
mcahDGh70jsiRFy0Q8ve4Q4DFAqOPO8m62E8JNTrTToDQrpUn4YQS9fTImUf
MsBUMDdPnjhmn1vl9FMGYO8f+Z5kfZ10T9wUghmwa3Sutd2GzP/H/bvHGhjw
9eXMp+PEXV83OZm3MIB1wHvxO1nPhpcqE6i9DMi8E6XKQ7w24fNi3gwDBFKq
mgStqLjyaFBe8Rx5PxoJK1PI/uGsLnLw9QIDbKZfFlCI07p0ypvZWuH485uq
AmS/EVsT5ccUbQXLS38Fhs2o+MXMmo0Lkq3gZSETbU28v/pZJ4tMKwQ15XpV
mFLxzWO9GsKKrSC9ydcnxoSKhfPl5zSgFUoExI/xG1Hxs0sVD3YatkLvPZ+N
J8h+aL3X2sbItBV8ma62lYZUHP/V/9kBWxIPfTrlRvZPPq16r8ATrSD3KEUk
WY+KOWuOT1fFt4JL2Sq/8zpUnH1zMbUhpRUUbKPHH5L93fBErHnr3Va4o3Kl
tnU7FYfylOYPP2wFFJNYL0fOgyVrjlOc5a3wX8zuqQJ1Ml8HHoyaDbVCbPBc
7x4lKv7888Ngp1obaA2oct6QpOKyE/HITLMNBtYacFuS8y24e1dOlW4bjK88
xiskTtbfi3TPPKM2OBm7TTKOnI/6fof+XHZqg7EzlsfchKj43vcu8Q032mDm
/YnJEHLemszS7Hw+tIGfOf3etRkKFjl6Zfv4SBtcPWGSMTVNwYMMJSmnqTb4
kt1RbEnuA75F0Z/2/GiDAg2WlQIT5L7kZeojztsO9Gd1V099pOD5LzXx1Zrt
wCoz/Tu5nYKzp143CsS1w95qz/pXpRR89rbV+tPJ7VDp2NZDe07BWoafLtXe
aYfseOcNg88ouDGdR/nyw3bQmBM+M/+UgmetD8ZPlrcDzxMJGmcOuc+8mLet
+dQOI+8z9mXepODea1sGLmp3wA6H7WcafChYYM0j5shIBxiul0vnJvc7vf3X
Bj5NdoDkEc6Be+T+5xN/pGl4pgN8LM52Ka6j4C5WsUdDCx0waLB1wUiSgu+P
3XDu5+uEDX4rV7gKUbBK0Wlau0YnsFV9H1T8K4L3Gqg8RmGdUOS/vkyY3E9j
TpW6Z27oAu1N+sr7AkTwlN7TG7ybuyBIbGbX6gsi2Fjsv3w/1S5Q0QjteH9O
BLPVp8xY6HQBbR9/vKOHCL64wddv0aoL+HSCDu1wFsHuH7ZG2Fzqgg/RabJR
BiJ4t33RfxxtXfCk9QjFno/cv/Uej5wM6oa85leUoVvC2HdrTYko7oGXt513
imYL4Q8FNdGtMu+hR3Lkyuargvj36Y5UhcA+MA2WSmqKEMCKu7mX3F/3w53E
wyzuonzY+IHMiWerB6F20Kt6m91K7L/miOxHpw9w9+F4z64iLqw0bc/bvXcI
ekKXPtlTOLDIqq8ran4NAUP4fGTyHlbMUZVauD7tI9QyZvOMz/5FHhqve1ea
D8PvsUcCPGsX0GNT18zK+WEYWedc/VB3Dv34LCE4dusT/MfzWSdXZAaV2hqz
pxiOQMBcxvz49Ci6YV4eLmU8AluVdJXCGKPIyUBhxX+mI/BTlUVarWQUsanz
8pdZjkBMFJ/Ni0ujyFKYLtrjMAIC7n5V13hH0QRj/2YpzxEYWDFVIaEygiQs
3fdl3xwBSfXGfu+gYRRkEp5RMjYCPmN6FxxzB1Gb80kntckR8LP39WkJGEQb
LpiLP/k8AgmLqS3HTAdRY5ZQ8sOvI1Cs1sP4NjWAKL/TI5J+jcAO7peaD1UH
UO7TMk9vgVGIuRute6CqDzGEJ3SVNEfB2khb2mGhB8kqNC082j4KK+JtNflp
PegCFJSu1x2F3NoYrtGsHiRxxldVUm8UHD47L/wx70FutSzrecxG4Yxp/S56
Vjda8BfnmThM4teS5LjsupDMgFnPw/BRMBM4I8nW3o6ikG6h/Y1RaBPqk+vI
bUffHilFcEePQs4kZyjjajtCPgIaHgmjUGIQ72yi2I7cVrTFb00dBSPO3plt
EW0oV/2g8duiURi67RsgbNiKVKJOlA32jYLgxkNau6pp6JaXQ2zC4ChoLFQF
PfCjoX92pm76H0eBL3Ja2VmZhhhrFYVzxkbBNzyevz+1GZ0rnfH0nB0FvVR9
4e+Xm1DJ0AW5P1xjkPn944Mcq3dIRyssRXzrGKzIzTiUplWLulzFNdM1xqAk
YqlR728NOh9X0L1Oawwm7rcfUcc16Mloj4T8jjGQN3Xbym5dg6RTlLM0jcbA
bm0cm5UnRmyzXU9tHcegP+Kt+cOyt6gpX6E+NpTUW5piaqx8g052VZ4UCh8D
wcjtYrq5FYiDzY7n5vUxYIHrjUPGFWjXwat702LGwOXTl828ka9REXd7e/6t
Mah2rHEdFH6FUtwuD9Xnj4FeQK1nkuEL5CRNX2RtJ/mCsSN164qRgLhP6evO
MSjyK5YLpD1Db0Wo5y70jEEw0+Hf58BnaOPKQxMTA8sOe8/bU4SYc2Nd9Ikx
GEKMc1c0C1Hou6Xn6Usk7nRz78rofKRRk+V1gHUcgrt5JR3+5KHxSkNFIY5x
yJxueL/RKw9ZlEQ9CFtJ4oEn2gwP5iJqhmiiB2UcWIIPzEVADsr1VTmrvXkc
hp4FS+6xe4AcvVoV5pTGQW+0RvC/gSzEf9p39IkqsXuW+fWTWcjnyCunddvG
weXu4Or20Eyka2Zkzq03DtXKDzVWJ6ejGcNJrrf6pP+DMffZKtNQJsSgwD2k
/htKyvfPqYhjW5v2jBnJf1Un9MX6HmpZ6yzfaU/cF1iqCbdRsATrSJwDyffW
HnIKvYXUqdkZJodI/bjEI9ENN9EdninRChfiWn41NucU5PrjAudDD5LvceO5
09NE9KMxdtg7hNhBNXLwdSTq5+08+ecaGU85a1pd6Q2ELKSY1yNIXIcr6W/J
dZTQkv/7fjSJ99E3HsThaHNbPYV2k8Q9zR/S1oYiQZFVqQ53ltv33VA3DEE/
bffLjNwj8a9+ylOewaimc0T5dwaJn14pdPPBFeTcy2qskE8sqS/+qtAfGUqY
0kqeEPN/+Z621w8pHkqw1SskPh7otGHeFy30S7scKCGOerRe9oQPGlzjPjZc
RlzfvfGu6jlU6/z0zNmXxOt5/5ayeaOkId2L4ZXEvq/u1CR6oACZa/8E3xIL
xj0a8T+Fjrg2hqdh4uHkmzbnTyClEYek5w3L33uQXyL/GBKWyxSDJmK1zVG+
o0fR4vHx+4004urSd9KaLqhu/MLjj23EK2QDGlQc0RP5N1s8O4mt886wWB9A
yac4yhe6iTuCOPtS7VBgvvmusPfL+ZeZDsI2yOVzUs2qAeKA9Ls/3K2QkdJ7
s9QPxBOcp0OXzJCyp0zrxmHidb9PHfxshCgFJw8UjyzX/5V+SdkA/ZopHNg5
vvw8Z6baIwENqf489m6SWE822eyYNqr33jVlN008ZFTlNK6OCp6Few/NELv0
31utpIJSvjXPe8wux9d/ejYohy6pU678nFtur99Boa1Brr6H2K/NE7O8eL/n
ujAyKX0QKbC47Gi7uW52pDo/uere72V/M0nuZb4V1dpyS25p2d4uW+/Xvf3j
HyD1jGWCuNpkUevu20/lVQ92sC87WFRF7+PbxkUuhQbOZW8rOhX++22RjmWh
7Yplc8ediuJDty/d3PaBZ9nGv5NsxdDViv7Xp/mJ1/3T146QRW5/1+vPr1qO
f5Wa0NqMzHZ5NIQIE2fSVp3O2IK2BBVb8lOJq3+GXaFpIrHqxY47q5fdJquc
swMtsew+tEGCOIDx8nXKbjSy+8bHQilisXCPp4p7UFMo/YTuWmITgbdTq03R
HQ5nX5sNxP3pirIL1mjp2OptrRuJOQpDzhy1RW6Y8cNKgbhjW2nxnD1SCzXw
36tCvJ2xVS35ELr18Y9WsxrxDdf17pnO6I9e2YKZOrGmRobZZxfU8E8+0GQ7
cY3l1BdnN6RyZFinXof4JL09QMsdpVSm/t6zk1jQKf/qhpPI5YrAFQN9YjMH
vUXdM+jnr7mgXRbEkZ7f9xb5ICfHp3pvLJefR1gyYOY8Qi/dWXfsI1YVvzeg
eQHFBfSGau8nNkg8dnDMH22crwzXcCGeDZziqb6CYuwDjJ67Eq958ZjLOgh9
K9nCvfU48XH28DUXglHl+ewbqqcnIPhS84oc6VC0fzYyerMvibumz7MWhqMK
awOLPD9i+YvZ/RkRSLboD5/8RZLvXva99eZ1NHPWK07uKonvWYjjTYxE4dN2
ietuECsGTjyviUVT5gI2GVEkX6iL6TQYh6wf1wtLxxLzcmRI/41HUqd1UiST
JqBaYZP3jw2JqGR87W3RtAnQE9SMtUpIRhLGvQdu3if9xTs1hm5JQcE5SWKU
LJLPx6K1uzMFWRznvCeUQ/qbmGY5suEWGhmeSuMrIvGJiyPiH+8gkcHSB2w1
y9+H3/ZEx30Ux3flyos6EhfWyvcqzEA8uoYOZ94Rv7rv99IoE7HdaePvapmA
obKMdA2FLPRtHzMgr5eMR9pyjovlIWLUyltZM0m9mgSJpe85yOI7U4Hz2wS4
RHzjNgt8hBpkX3C8+k76221mIMSai6qC9rxa/2sC1jVu4RUSyUMF2q5yPzkm
IfhsW2qryWMU8zT1d7rEJGTyye9W/12IVvS7dtmsmQQXYZscQYsiFMaz+Rn3
uklY5xOy0jC1CF06Ue5+To60/3k97oPuM3RaprPVUI04aVBkPLwYmdwUyP28
ZxIElyZc1+8sRZxXQuy0z02CdZ/gXKbWa1QyO71YdX4SGAuvVmbfeo3c3B0y
jPwmwVte19Nk/jWqsVKdsr00CUWPAyt8X1SgMNmBoLPhk5BgdeGDw+5KxNGw
/fHDu5OgZo4m0l5WIzaRr6wCiNRz25Jov6kGFV8/9CilZhKyS1Fmu0sNcv1T
ZyFZPwm5f2XKM+/VIDSaflu+eRL0Th2o3bSqFoWWmysbdE3CguPLuvHftYjV
+ZFDwNQkUC7lxcmO1COWPOfCYeEpWHcuMlKM2YTqprvPZlCnwCm9K3VJqxnF
qO1TcRKbgj/X5LQhpBmtLjd42rlmCvQEeKrpFBpSqZd/3CA/BQHf2HIV9VqQ
0+i3nIJdU+DLvjg5YMtAL2Wu3w88TfJtH8zR+9uQz73CWGE0BY7+UH3vXA96
8efedVQzBYLleSIbM3vQH+eIEJ/6KdiaflTqfUsPur7+8IW25ilwY38sXqHU
i9Ke8BxO6ib5A1V27lO9qLbyuJLwlylgTPSpmXj2IbFPkk1CYp/BZqnKfjhh
EL1RvLFC6OxneO7xxF8hZxgJmfkohQpMQ7UdRd3j2STqV2a0X6yYhhBOA+lr
SrOo6D5sGHH+AulqOQOrMn+gw4WaQmuWvsDn2bEPYZa/UHB4Vkh//gzwjQTQ
pnL/oacTa1IFLJjQKx8ncu40G76RHu4yaMmEXL3KHGk/Nuxm80WuYB8TFtOT
JWkhbFiqoqJo7wEmmNl8TVW6y4aj4g/VxbgygW1LcfKPejZ8UvPuLM9FJpyV
idV7IseOZcMoJtw5TMgoeBWb/JEdL22/zN+dywTDCG2P/V/Yce+XT205j5lQ
s8BWLr7IjhMOPD9s9IwJZYnSiVmCHPjfZpvz4RVMqO1ZNVAKHLi/Nf4+ezsT
tuhvL/+SzoHLI34ea+9kwu3tzL7SPA6contE4WEPE3T6rm+7WsqBzf9TKdEf
ZELRLMvlVTQO/CqA9i5kkgnxH0Jn1f9w4FvK2+L3TTPhu3L5kb/cnPjccJqd
DJPU9xYZrxPhxPIWZz5Uf2fCwvaBrY6KnJiDtSM74ScTPh6V+rpeixMPleqe
dvnFBOsG2fIv+py44vRDVbW/TEh67nD9hSUnvr2W98e/f0yoOrnRcfn/rf8B
eVNlXg==
         "]]}, Annotation[#, "Charting`Private`Tag$4803106#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV2Xc8ld8fAHCrZdyLkF2ayGjY5KNDyIiM0JCsRKmkUpTMJEWFyixaVEYU
xZd6HiHj3munrHCHeY17RYnf8/vL6/2Hc85zPut4UfI86+DDx8PDU8jLw/P/
n1Y+rJbPI87GoSNzQxGHuZiAqey5fhktMDny0uPBWS62O/tRRomMGWxbr/v9
WTQXs27uepcp4wQs86DcugIu5uL9+7/7Mt6wL75OVph/DuvVvGl6RyYYVgzH
iya8nsOeSNrFxstEA9K/pWe2+BuLWF2y7ZZMMjg9ixq4lP4Hc3V7Wjg1/QzU
azdsG5XlwYWWI45aKBbCVomMv6dz+PAtBydZ+O1S+HXCLzpqSQC/TNGHR5yP
ILDv2FKXxyp8XalYHy9vNeSzWy35T67BPwyaNlGNMLglGZki5iKEd1pGTN+x
wKDd1pgl4y6EzxVUSdk4YMAQrk9V8BHCdUP1T9SfxMBrTciy1AUhvHyt5tzn
+xiU0P/Vt9wVwj+ayW54x8JAqDvmrs9XIbzyxdSF5GQcKjwKyuY1hHHMP1PO
bbwGfnWWxPnNCuMlIwEB7nM1ECIi590xL4w/8zOo8OL5Cn1+Fq17loTxGN+u
w4ESX2FrRekJ3jUiuKWnWFqU0VfI2xap7KgoglPdYqQLEr7C8aULOhssRfAe
yzOS/Oq1QLuz6p7LIxG8uc7QZ7VuLVT78x3UyhTBq8wF34vsrQWhdf9ChXNE
8Gyzl07SzrXwvASRCl+L4J4mvx6oX6uFQKEo/v+qRHCWrrO4a3MtnK7YsOPv
kAjO3bqH/PZMHbAzJ2vnVUm48SCqiw+pA5mPBbMZmiQ8NtMy3C+qDoIdYx8Y
apFwKQkn9qbHdVCOG27z20PCdXgDqGk1ddB65NDV63YkPOTno8Q4uXqov6Rd
nBVEwhcTOWTvb/Vgcay05lkpCTez/lO3t70ejtEdmMnlJDxhJc+N9f31MLdJ
7FB4JQlXuCY09YNTD/KZV9aa1hDn8d9IO7jhG/w6qcmOaSPh4Wb2SXD5G/BQ
1PXnp0g438JrUbktDeD80Zl+cxsZl2tGs6DZAB7Tgb/jVMm41tPuDm/9Bmhe
5nKi1cm4z/5V6QW2DaCp7FZ4ZjcZr3/suQVdagADXiERPiDjiQYyBqfqGgDr
XmzSdibjr0hF8ndbGqCvchToLmT886D58rufDRC5Y9WDxMNkfCY+uGaR3QAP
HZW72o+T8UM/qQeSpBvh7a0fNUr+ZFw+LNar7FQj5H5+9qrmGhnXtlcw77nQ
CNbVcy1KN8j4gc2lyrzXG2Gt+bWWK5FkPLzp14TV/Ua4sL7TXvYmGR+U3xPS
96kRLm3HTBSSyHjef7MJK4SbgFIj7q/6lIxj9+LPqko1gez66hKtXDL+w0fJ
wW5DE1QWTjToPyfjwiS7dY+1mkB6uOW4Vh4ZP+ee/1TtWBP8GOCVGisi4zrL
Hh8cC5pg7WyqlXs1Gbex/Ry5r7wJEv2fZgp/IeNe6evtdLEmWFHLGH2PkfEk
3T6mbGcTnF64E7TwlYyPnD0iM/ivCfZJRW83ayLjPFWf6G2rmiFZ7MG+hmYy
LiUs++6rWDO8KGs7ZE0l4+jVd6u8Lc3Aqxl2zLiVjGcMOIeds22GYI0308wu
Mv5O472lp0szPLkeWbGvm4hPmISk04lmkFxFuZL1g4xzpdve6l5shtEj11pN
eon7O2jfv5TRDCfeJoxZDpJxXswK3RlvBkZj71XfMTIuLZpPCp9rhnU52/wu
jJNxDfc1P8/xUGAL5rQvdIKMH/5Td8FJggLaD9wpoWwyXrpr33M5Iwq8+p0u
YTJLxhtuPDsvYk6BwypeVzdzyPgAhd942Y4CaYF6FH4uGRcJwDoHvSiwGK8P
JXNk3DcXVuffJtaTE93bsUDGw6az2tNTKJAb/VHs3h8y/gCWntzJpkCgwgjF
4i+RTz8r9c+XUKB4WJ30YpGMd6rIr/T6jwK7MtmJtv/I+Pjl0FanOgoYP076
xyYsI2EQoPeTAoXVnelblsn4Ds/Huqp0CjzcuKupnLB50Ty/PJsCYpnjFzbx
iOJBNmUZy3xUeL4ZTeURjkuTOjUtTIXrEs/cRwhnsy5qD0lR4XNtANrKK4o3
RWtRalWp0Ms/e+oRYQNyI989bSoUOhVKtRJ+9fiE7hETKpy5ZfJ1NZ8oLrV5
PmCLNRU2WD+8aEQ4quDuE7YzFRplnm87Q3hKb0vHRw8q+Ngc/ZlG2B2vWBMd
QIVu0aKkr4QNvrOCpCOoIGKwtCzGT6zvGf5y8Daxn/rQx92EpSYke96kUoFL
07/oQDj68hvRy0+pwIhe2BlIeJrXdN/eN1RIipCdiiXsntB9RaiMCqKdKYUZ
hJukzhV0fKFCqp/PuULCBk9XDmU3UeHEXNSu6v/vtz1znX8XFerWTnAb/7/f
h902WoNU2KmW+anj//uZNNxYGqeCbOS9Gz2EZxo83tf/poK8Zr3FAOGi/L/B
+3lp8GuTiegvwky2eWLBShqoKC909xFW1L6ft1aYBp0/Zp91E3a62ouHiNGg
o3jn+RbCt6uV+3qlaLDzT6lxLWFMIHgeydNg9fcbIuWE5/dXi79SokGC+ePe
F4Q1EwXVRbbRQEiav/A+Yd92Z4sgNRr0cvGIUMKZMk9PdO2kwXmPQecThNvd
x0ONdGmwp9BnuxlhoWe6qU+NaNAmeohvM2E0Elm0EtHgS3zlDx7CVzQoDQEW
NHixkFP6g4hP0QUZOs2GBlvFJJKKCTPLvZe1HWgwfETuTAxhxaVCmXQXGsQZ
frU+RNjZ9O9unmM0KGYpqm0mnBBnfsDHkwYLQTokNpE/C+K9kZpnaCCS9LMr
lPAOV+XM5CBi/+Bb1XsI+2ZeKFu4TAPXH9p5i0R+tm8THMcjacBa1R55nnCR
ka6z6yMaXBcvzQlcIuPMiMiz/2US9+3llIoR9aFY13xrYy4N/us0SxQlnHDQ
u2r8LQ3ePey/l0bUm5/vvW0ROA1e3ujp950n49mve/Yy6mkgrNrKf/s3UX9T
245aU2igfq5TI4+oZ7PQqiTJbhqcZq5JbyPqf33S2ELeJA32911oG5gi41Un
wvPezdLAUlHSjkn0D/fda90q5mlAu+v3mDVJ9LdOg/Imvhbgym9I/0n0H2mF
+EtsqRaof8N2i2KR8bJJha3zci2w2k7XwYNJzI/PxR08Si2gYmsup8cg4yle
3Vri21vAV6B3w/chMi6erzyrBS1wv20r348+Ml4cWpmzx6wFfo51x90h+qG9
rb2D+f4WkEr5NGjYQ8yzqcvFLo4t0FthJ3aL6KfCunVnr55sgSABRS96Gxlf
UeMzXp3YApMbJZRf1JHxZykL6fXJLRB2VEhoVS3x/SfvWLc8boFja9m1njVk
PFLwff5gbgsUUdc1ChLzYcle4NSK8ha4TL0sqvCJjM/35tCtBlrAvOwn2+o1
GR/73d/XsaMV0s85mVNvkfEPJxMxK51WYHCvWh0h5tuNLuMX1Yat8PfbJ4df
0cS8KMs8k2dOmHY86Gc4MS8uHVkMO9oKvxPv8cVdJONpnE6ZzXGtsPI08Tgg
5q3ldLNTUH8ryNg+OF+rScbXnrimxxxuhe0xMVeT1ch4H01N/uhoK6zgyXp6
VIWMBxfdHtrHbYXY9VzbnxuJ+J/dHyQj1Eb0q0j9+5JkfG6iJvGzThuozTft
Zi6Q8GejFQ2ku21Qq0Nr0Koi4YEP7Tb5P2iD/IDHE4c/kXBds6HQr4/aILij
ODr0AwlvyBRUD8ttg5QMWYk3BSR82t4tcaS8DYxJqp0NWcR7pmzOsWaoDWYD
tPqXr5Hw7qidvVf02+Glr4+EvR4JJym8ZA8Pt0PpovElSoYIbnIoqndopB28
gokHzEMRPCjxeOPgZDuQ7VpYUg9E8E5e6ZcD8+0wssdNzfaWCJ7FiHPvEe6A
oJxVNlEXRXCNIv/mNq0O2KXVtyBlK4Lbmmq8xqI74M5zw1fDxPs04dR73yeb
O+GJwJXUE6bC+KjJ2zgh1U5QZtI+ThgJ4xbSz/MvaXZCvOLCcLCOMM5Xlzxp
Y9AJmBv5cLCKMH5lc/ClBbtOMFWdndElC+O+/btiHUI7YaRZPaKtWwjf61z0
XKC1E6LcSr1PBRDvb5PXw37hXRBu5+8TfkMQD95VUyqFf4csevGHsbTVeH9B
ze0WpR/QO1GpK2G3Ev/r356ucvUnhOiIUeK7+fHte1ct+Vb0AGbhYLTlFC9u
kaN0snhdHwyqfJsfsf2HXVY4vvHX0X6ILylXWVwxj6mNOwt12Q7A6iAGqFJm
sLXkqdU1fwZgelO2pPWJUUygOr1wU8Yv0L36wTRh2wAWoFXRvcZ6EB6lxWuZ
ba7FXu/3fFI1NwjKqfieybnPiDsmK8pIHQJX/ej896gbvXe04E82G4bvu+/I
yNUPozjr8hh5i2FQ+Ds9dH14GB01VVn9fP8wHP6tNtPKQ0d8u4VEPhwYhpqM
DVXW+nR0QJwq9d11GEy/fLAPz6MjFu2QqvyZYbioaOrIimUg2QO+B5+lDIMO
x3P3fW0WCreMyS5lDMO60oSODo8x1Orud3THyDCkLM50poeMoc0XrWXejA1D
nGq/8sGkMdTwVOxB7tQwzJO+vLxVPYYk/mbG3v8zDCW5tOCdCuPo1dsPZ86R
6HD78Mkgl45xRBNnGarp0EElWpS3S28SbVRpnH+pR4eG4/wXww5MootQ8H6T
IR2u1zASRL0nkezpYE05EzrkFv97IJA4iby/8mwStKJDWuS3c3LDk2j+sowg
6xgdntO9/i3Hs5FSr9X33Bg6SCUZ8n7xmULxmGGhcxwdtKjZ123OTaGZl2qx
q27TAWRSTjZfnUJYEEkrIIkOFVjQucLEKeS9ujVxVzodDjl4CHPKp9Cr3W4W
X4roUHRmYSRszTTSiD/5oe8nHRga279cyZlGqWdd7yT1EedLVtR7+3oaLTvt
90a/6HCTzw3rKJ1GtPXbxV8w6PAnx3vlyrppdP795Jkz03QwMaGsGBqdRqUD
F7csrmSApPOnkoQdM8hANzpZZhcDXmXlLN4pmUGdnjI6mVoMaMU+BHZ/mkEX
7hZ0bdBlQON6eXk5bAa9oX+XVTZiQJRgg1IEbQYpJqs/1TFnQBW15mXX+Azi
m+5863iYARTPLMW3m2ZRY75K3Z1IBnweWqc/eWsW+XVW+YnFMEBK6EHnv8RZ
JMDnJJhykwHl6wND+VNnkbHbdduMBAZceH+yY+rpLCpa1daWn8qARdvRp44f
Z1Gyd9hAXT4DNhsZnNBjzKKjitQF3jYG5GDNMhf1OIgkE/S+ooMBRqcr6Hl7
OOjLWsnzF78zoEhAqb4VcdDWNUdYrF4GFJoFNvDYchB7ltFJZTHgvkhcRrMH
B0V+WyrJXGJADStvj0osB2nVPD3rwsuEcS3juqx4DmJWmW0XE2CCmY3JwdWJ
HGRTGp8TvYYJ7S5RJ8oecpBkttS9AAkmvOoKtY95xUGvgjUC9VWZIHvX4Hh/
HQcdPtuiMqvGhOunk44nN3KQiH8w/Y0mE0LiPtruoXJQ0PFPRzdoM6Evy4Xt
38lBhlbm1qtMmDC90my79jAHTZqNrPyCiP09M67dYnLQE0jAru5jwjuT2vct
oxwkoN2qP2nFhKoQatueaQ6irHdX7nBmgt4rk7fR/zjohizv8F1XJjDepkiE
8HDRbsln2ZZHmHDO9tHh4/xc9EhwVKrSgwnJRw+Fr1nDRZ7ciytyA5jw57yl
ZNNaLuI23Bk8F8GEOS2BxjXbuKhHqMNvMYpYP6nvj6QKF2E28uybsUzYdXMm
Yd12Lkqi5P/Nus2Emdn6jj8aXKTaWifRnMIEyiJ1fK8OF4muJae7PiJ+v0dA
aUGXi347HlIaTmNC/fOKkuf6XFTTMaz+N5sJxvErZvuMuMi9m9dCJZ8Jdw/+
a25BXGQmu7+59A0TMl4oje0246LtR5IcTQqZgGQ+ed3ex0XzPYoeLqVMUByf
8ZG15KI+BV/G4AcmDFawJw/u56Kv7m9PB35kQmycTOt1Ky66P2B4JaaKCYE6
Dc/LbbgoRClqWfQLE540YSlfbbnouGdDTAbOhLJvjX11B7hIbdj1fkk9E/yf
kUPf2HOR+JYn0tDIhMTrLc13D3LRgg8zq6GZ+J7y4hBfBy6qZV58/auVCVtv
z3dwHbnojfJ/O890MMHp1N+bb5246MEpgfL5LiKeu53vHXbmoqv51sbRP5jw
svTH9CJhj7H7NeReJswf98pLPsRF5mo/rNL7mTDq8K1MyYWL1M8otWwdJPLD
aUT+GWGJAj+Xd8NMsGvP+S7nykV/Jgt79zCJ+I93jcYRHtD87fVthAnRJ844
jhGuO2c86jTOBMNsK3FTNy4qKI45NzDJhLpKt21JhJNnmuYCppkQd/Xm/VbC
obslrv2eJe4H4Y6Ch4l8CT7CHzXHhCblZX9dwpbvc26RFoh8GtX87kZYc26E
nPaXCTvYNunnCUvp7kzdssSERxb2pdcJL14OkS/mYUFsgc6mCMJD5dU5Rvws
8ItbZoYQblhYqVK/ggXBQ2/4fAkXGRwodFzNgrTLphcsCT8MTdHuF2RBwosG
/Q2Er1f2VPiLsKAg1ObQBHFe73+b0ByZBcpvOuoLCVsZB9RHiLOAlnrx3knC
O8PfHRCRZIG6mXGRBGHpzwvtj9axIMzXbEsZcT9LPHuPbJYl9nPLnjpAeHhv
3K9CeRas3HRKvIe478ZI6knD9SzoO18V7074kYB7sMNmFux4czvclIjXktc6
7ZatLGBsm1PLI+LpjdO4dios2Gl+Kl2A8I5I08u2GsT6/WsqM4j8SP21qNu0
g1i/4k5gN5E/iyYf5q12E9+3UDsoRLh+WfmqpR4LzE8riTkQ+adxfNCgzoAF
nNdvGn3siHhVpf/dt4cFOT5fLM8S+epxjXTNFLEg6uSl215Efv/+MxtubMMC
pa0bDVosuOjo4bcm/x1gEX9//iU/MCfq+aMvr9FBFly5GpZvRdTT3ZDuSP1D
LPDhK9FIJ+pv61xVjJYHC8ql1a59IeozwTnEvMSTBXd7/CN2GnLRTOnOVbt8
WNCbIGz7kKjnqgvP4jT9WVD0R8DIjKj/Q9O3bqsGE/fhqhK9SZOLKu1NbfIu
scDlaTNlrzoXbSxaFFa+woIfW9WHnYl+Mhl49u6W6yxQzJ0/d5zoPzHjTvc2
xLHAIXvfhnlFLhq1JjlkxxP5w9Sh1Mhzkf3rOnHFOyy4d/u71U1ZLpL3N0iW
u88Cvt/O7yYkuaiUuf6hVAYLTlb82m8izEWyFt0uKVksOK00EVZB9L8bL+5L
SzxlwaUHBlFqq7jIxmdFmtgLFggMiAtP8RLxHxzNEC5iwYo30Rv+zXHQ2r73
OXw1RD65N4xq9nPQXeFr18pqWXCs7Mw3/CcHCRqauZ7+xoLWzBOV1t85iO9R
q0gnhQVTKSpDui0cNHOQHZLXzYIPG8PsIzAOon1VtrNnsyBaBD3sziHmDYet
smKGOM9yp25hFgfVbywT+MQh8mXv4r+QNA6qDt/3adMfFrit+G+ZdY+DCvQ9
t/wWGAEtHr2/Bjc4KOFt+t9M2RFAjiKTLw9z0Ooez04HhRGICiq+9tmZg6IF
VYtXbRiB2LDrFs32HBR6stz3/JYR0JDQSMTNOchfqaPFbMcI3Mj/LrVpFwdZ
ppBeje0bgVp+1sHClRy04lqEk/75EeDE0ENWvZxFpdPjC9UXRkBu+KrFOmKe
e/u6ZptfGoGNvxCvQvosqrHTHHUMHYFx1gEjQeI9EL2xNzwwZgQKjNf/CbhE
vA/q9V7nPh6BvVZLo7ams4hv7RQvCRuBrSenOlI7ZtC7m0deJteMwKzR0tqT
lBnkuVhrI1dH7O8ofl69bgZh9MyHyk3EeV8EJGaUz6DIcmt1084RsPKDRIH0
GcTr/tI1ZHQEzL336vw7NoN48twLB8VHIdqHfimrZxrVjncFZkuOwmJ1emlE
2zRK2HFQ46j0KCgPTT9xa5hG68pN33YojMLAQckkZhnxXqtTfl2vPAqu2lJr
w+5Po6P0mRcFxqPQ5PBIJH7fNPqodDPrqv8ofF9Sv22bO4WC0grviGOjkBsg
UqQdNonKFtNuYjWjsN/adeUU8R5ddI+NCKobhXLXRd5U20l0c9Oxi61No5D9
3IX/ueIkyngjeOx+1yg06DXTqdUT6GuVj5r4xCiM7Kr+7b40jqSH5BrFpMdA
VdmWfu/0GPpve9xqscAxyKy48aibxEJiVkFqkaRxSGqV7n3I/wv1qNParlSO
Q4begZcLZTRUlAWbh90n4LMR0yvF6x52rFBHTGFpAkSv7D0uQmvDbsQ8jejJ
n4TGJzXxrRnD2FuWQjrJhg3SYULGXziTWFxmjEffATY4/GyMv7yJjXk7TGwp
OMiGB/ZK7jsd2Jh8ZWWRrQsb2pWSjxcWsrH4xCO1CZ5sOEqxzT6lPYX56Tye
FrzCht2F/AudU1PYxmgJy1Uv2JD6zf3Bc78ZbEkvTKTrFRv6Q44e2H5jBuue
GGp98ZoNfcfYzOKHM1iSS8kx82I21CRuTftSO4MtqzpciKlkw6DCml2jm2ex
npbELP42NnyacmO5/ZrFymN/e7V1sCG2t05zdH4WSzY8rpL7nQ1NGxcGr4py
MOvnGqWojw3ldmNnM4GDfQpp/hYxwobg7ezDjEwOlqqunXhwnA3G9W66V95z
sPODGU5KbDbU2oqaCzdzMGWb0/2fOWyw6Mvt3bXIwQR4258l/Sbua8dG19q1
XGzgvaG/xx82/FnUYLlt52KV/rmaO/6xIawtLXYCcbGH64W4y8tsaNujo/b/
/2/9DwBtsKI=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4803106#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4803106#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
D5pHjWY=
         "]]}, Annotation[#, "Charting`Private`Tag$4803106#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
ny79v/U/tjueow==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4803106#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV2Wk4lU8bAHBbG7Jv50FFlKTlX0SUWzNStoqQIiQkUpK0KLuSlBIqS1JK
yZaQSioRCedY25BszyE6VOfYeef95Pp9MDPPvc1c11FxPWbtLsDHx5fHz8f3
/79m7uyGt/22hqZfFcR/CkpgIUz5/mBoQ/6Zr84bp8Xx+rRbKc8YxlB6UzIj
/484Nq/7XJDKsIHvgv6Gae3ieI/b6Os4hhusdf0ocP6ZOG5fcxFfYfjDziJ6
3mZncXxXdueFaEYE5Eaz/3YWi+HQ+c+WX2LEw3LbX2nbDi3E9nvT84ZHMmDp
AdF+hSRhLDIb6rhtUR5oSl+XSZSaj9WtfrPfXy4E38qKy8HFc/Cp+o1w698L
sOxiSq60EcTyhZId/Pxv4KHuvqpZS35c3IVrmZvKIXapHbfr1Qxq3R46cmVb
OUwWtO9szJlBvNwyOQvrcmjVrvlTkzaDdAM3Hqg+VA6fDbxUvoTPoBLpNby3
ceWgH+501dViBr0wppYUsMvhUsoOQYMf06j04fCJ+Pj3oHllOl9GdBqVe6Uq
7h2sgI67f8R0wifRs35vbydeBWSvV7N3OD2JMjz1Xx3kq4Tuc58Co30mUaTH
531HZSrB+suwo6D9JNruKpkUvqkSzGZtmc6rJhFzb6RCbkwl9Fj5Pav8OoHa
tvvICq76ALPrzGfsNk6guioD9/m6H0D1jG1Q6poJVGYiXLRwyweIXuKiMaQ+
gdKMM20UbD+ADd0s+EhqArka/byx6vwHqNC1YcQMjiO2rq2Ufd0HqPys8Fb8
3jjiLtssnuNTBW+lzsfJyIwjwy5UFX26CnzbpvRqhcfRhdTtwZ7hVfA803L8
Kv84kpOx4Sy9XQWrqroadDhjaAO/NzOpogomE3NWLvg0hk5/vxUbpVgN0gc4
r6sjxtBU7D9xt4/VIBk/kljKN4aMzSeqtjRXQ394oVXb2CiKmcsXsvhHNRTM
1fOfNzKKlM+LDH/7Vw2HZA6NB/8cRYZeqiyrJR+hM2hyy0T5KAo23nUNTn2E
lIKZHNmoUSQw/kRCUb0GRr/n2vKoUaRYh/7Cmhro8D733z+ZUaSd/rXFbWMN
zNl5dMOU2ChyN52XnGtZA5tnMt9pCo6i6tuu6iigBrQsjOcKDPJQrD5D/3BV
DSgnu1xIesNDj8Tyla421EB3c8Rdg5c89LbLZLbgew0kD5lP9BXy0J9o/4op
Tg34Zi7wc8ziIbvvzB3XFD4BMniQWJ7AQ0rnLhx8fvgT7KuTYJ47ykM6u5RN
2k58AmHWkXPlh3loh1qhBn/QJwgqdz4v5c5DwbU/h8ziPsFL8dygBgce6lLa
fLrj5ScoHm2588mUhx6//hszR7QW5lZqWzxdzkPl16OPacrVwlGJtpKUpTz0
zV3FeueSWlDhBEXHLeYhUbGd8re1a8H3QrFLqjwP+TplpWvtr4W+GLt/a+bz
0IZZl+LdubUQ4Kl12fQXF1lYvg3bWlILQWfkewdpLjqYvHinbnktJJbHmCX1
cNE13Q6aaq2FGgdDA+kOLuo/5sDomq4FSVXrj+cbuIiv7GVv07w6OL1SO+F4
PRfJiVIFlZJ1YP2jwO/YJy5Cj76YPVavgzvDB9wvVXJRSqftOV/LOigZ4d+8
4SUXFawu2u66pw4OWNk+Pvuci6rPycjaHKiDk0ZlWh8LuYir0JSje7IO6hOd
AyPyuGiH1a4fMyl18O2vkan/Ay7iLzdDVwbroLX4jubGG1ykIJElFsyrA19h
kV2Lr3PRaqcF33356sG+Jj9BPJaL9k1UnbCRqYd1GqnhYpe5qHDd1geKm+rB
2ll1NDKci2pCMo4vNKkHzuSNla9DuaizXtBwdmc9HDneHz4TzEULvctbuw7W
Q5YenZ52jos87sP8rMv1oKOgf8chgIvOjdxpTk6oB8et9FS3PxfdgJm7V9Lq
oVw6KizgBBe9/V668fizejCKnBF86ctFrSuU5h58XQ+bZAL5vI9x0eCpwEab
qnpYprRRfdlRLmLI6Hvrfa8HzMxmv/TmorWut3U1e+vBbwHvYrwXF5nkjwkq
cerB5VvmrtOHucjP4nnKrAATJEqtnJ0OcVFUktzhEVEmZE99fODiwUVp7JM6
3XJMuLP+iZyPOxfVRmjXf9Bkwmq4ejrjIBfpi38SuK7DhL7JlMrXrlz06PYB
XQcjJoxo2It0HyD5VRvzVjdngrLqtKkMcXju1bscWyb40pWhVi5cNKyn3vLC
hQliyv0FSc5c5PT+1YIIbyaASFI7x4ms/4XtpxDKBE+PA0vK9pP1XYMzuy4z
oetmnZ4usdyQbFt2IhMqhU+YlzpyUcSpbIlT6UyYa+Bvb0k8wo+3bslmgtP2
YecBB7J+zNczIs+Z4MITcL1BXCvnm9vyjglm2RVO24n10+d2p9UyQemkmd0C
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
5mIR7uwsB9YJLdj8/9+3/ge3Vg5W
         "]]}, 
       Annotation[#, "Charting`Private`Tag$4803106#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox["\"x/\[Lambda]\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\) (\\!\\(\\*SuperscriptBox[\
\\(m\\), \\(-2\\)]\\))\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {829.2420959472656, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Carrier number density difference \
\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\) versus position x/\[Lambda] (\
\[Lambda]=10\[Mu]m) at varying gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\) and fixed \\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \
\\(g\\)]\\)=0.1V, disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.1V\"",
       TraditionalForm], 
    PlotRange -> {{0, 1}, {-1.8782770620568128`*^15, 
      1.8782770477833785`*^15}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.15V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.1V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.1V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.15V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.941081889929788*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"83d5aaae-5769-4c9c-b385-fa0d1b3910ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide8", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.15"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], 
           ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.1"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], 
           ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.05"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], 
           ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], 
           ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], 
           ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.1", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], 
           ",", 
           RowBox[{"nm", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.15", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}]}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1", ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0", ",", "1", ",", "500"}], "]"}]}], "}"}]}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x/\[Lambda]\>\"", ",", "\"\<Vg=-0.15\>\"", ",", "\"\<Vg=-0.1\>\"",
         ",", "\"\<Vg=-0.05\>\"", ",", "\"\<Vg=0\>\"", ",", "\"\<Vg=0.05\>\"",
         ",", "\"\<Vg=0.1\>\"", ",", "\"\<Vg=0.15\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 8) Carrier number \
density difference n- (m^-2) versus position x \[Lambda]^-1 \
(\[Lambda]=10\[Mu]m) at varying gate voltage Vg (V) and fixed \
\[Delta]Vg=0.1V, disorder Vd=0.1V.txt\>\"", ",", "datSlide8"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9410819728726683`*^9, 3.941082049498356*^9}, {
  3.941082085458444*^9, 3.9410821239781218`*^9}, {3.941082197351829*^9, 
  3.94108228202866*^9}, {3.941082392620492*^9, 3.9410824053058567`*^9}, {
  3.941082630530816*^9, 3.941082631530751*^9}, {3.941082875715905*^9, 
  3.9410828786417227`*^9}, {3.941083678916686*^9, 3.941083683420542*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"105fdfc8-2dbc-4526-9dfd-29a43911e8fd"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 8) Carrier \
number density difference n- (m^-2) versus position x \[Lambda]^-1 \
(\[Lambda]=10\[Mu]m) at varying gate voltage Vg (V) and fixed \
\[Delta]Vg=0.1V, disorder Vd=0.1V.txt\"\>"], "Output",
 CellChangeTimes->{3.941082290090632*^9, 3.941084527599228*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"cba80325-698f-428e-8c1a-8868881df864"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.001"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.005"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.01"}], "]"}], ",", 
     
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.02"}], "]"}], ",", 
     
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.03"}], "]"}], ",", 
     
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.04"}], "]"}], ",", 
     
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.05"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.001V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.005V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.03V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.05V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Electron number density n versus position x/\[Lambda] (\[Lambda]=10\
\[Mu]m) at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) and fixed \!\(\
\*SubscriptBox[\(V\), \(g\)]\)=0.05V, \!\(\*SubscriptBox[\(\[Delta]V\), \
\(g\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<n (\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.001"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.005"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.01"}], "]"}], ",", 
     
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.02"}], "]"}], ",", 
     
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.03"}], "]"}], ",", 
     
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.04"}], "]"}], ",", 
     
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.05"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.001V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.005V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.03V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.05V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Hole number density p versus position x/\[Lambda] \
(\[Lambda]=10\[Mu]m) at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) \
and fixed \!\(\*SubscriptBox[\(V\), \(g\)]\)=0.05V, \!\(\*SubscriptBox[\(\
\[Delta]V\), \(g\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<p (\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[130]:=",ExpressionUUID->"bcf26058-b42b-4595-9c3c-b798f361094b"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1249.3582998794839`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 130, 54, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.941082619919248*^9},
 CellLabel->
  "During evaluation of \
In[130]:=",ExpressionUUID->"4f55ead0-8032-4381-8e68-fe839ed67670"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
T3dzL21tMeAuffnb//6//h8DqwzX
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1: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
2ba3BpH81m6cz7kL1Fl/q8U870c6Xticxr27gEHmoMqrnB5kymWTziGwC8Jk
B68nH+hCtrCYb08iumD7xsEewbftCAeXUG9BfBeE8p1kSwhoRcS/1eaTUrug
6quc1UZkM6JeZxy7ld0Fs67yyttdjYhl7HevY8VdANWo/Kh0A+JtH2ymVtsF
hklXXF6H1iJPlXiUbrV3wf4795JZv1ch2awFvNGDXXCDJsD0ZHQF0jCtsVv0
ac+P7tvk4ltlyEjZ+BRlrgvOPWlfkPMtQX5GeLXsLO/F3m3/lZYUIUzXmd4J
bO2dN7KWLD9SiJySzgjXoO0Grm2zjNva+YgKnaKzE2s3LLTSn8Hf5SGmn/p1
Y7i74eS/oJSrkIu45dufKz3RDfRep/O/sGYjYSF/OUbFuyFyMpouky0LSTOL
X/8n1w3bV9KH++ENUikmNnIS64ZigzunhZMykKHdxmpNrW7wstH1Hzycjnwj
mKe6mHTD6L/OzUzH18i+7OXA2Ovd0MxSxcLyJRnh9Q+9UX6rGzRyn3+WfvUS
kdXn0xi73Q2tFnf0toKSEN1TJcLUAd3Q1Vmo35CQgNhvXGISDOuGI2f0jMxI
8ciDnqkfl2L3+HjMf6wrxiFJab4DbsndoCdrXyrV+Awp8DpYHJ/VDW+3g4VW
HWKQaV4V34mqbvg8rvtw51Aksr1CuLKvtRuYyWm9czvhCGero4pw/x5eet3Y
iCMMOfOC+rjOSDd0u2ZW+RqEIhouSTSeM91gu0Bzeqb4IXIdOzuX8KMbpB7T
ZLrLhyC+h9vaq/90w7O0o06aI0FITu2vyP3MPbBAuhPp/ikAaXoW4SbK1QNv
J19LZ5T7I6N2AoZ6x3tgxvngjEndPeSXYoWMl2gPaAYMtv397osws+r990Km
B87sylVYqPggp6fnNmuRHuAy+VkdkH8HQcr8x6Y1e2DcIUypCLwQd8vcdPFr
PaDNncCZX+CBhEthDw0cekDKvemPeJQ7knFg2N7bowdIYm8r5f+5IlWjrhdf
+e3pc/SyimBwQQgf94s3POqBqs3Wh2cVnZDF4GTWuac9UEFjStGMuIXQmkmv
MrzsAQ1VIxq5LQdEbteqzOhjD5gWHhk8dsYO0dZpCFav6IGgoPd526s3kBuv
junJN/WAp2ZuoHmPDXLva8BRkZ4eOCFVO/CyyhqJkZ/4coTcAyX7l8U0q62Q
rEcqJcyfe6De5Ug1/cvrSA0hOfDf1x74jJvU8I1fQ766XeWZ/tsDhw5uPmOv
vIJQ1VXNEeh6QTCOlW9c5zLCxXykqPVQL1j4i11i3zJDxK/cDSg/2gvNT4/F
0tWYInj28KWc071wr5rlonSsCWK+Lv/fq7O9cONu9A8RP2PETS1xJlKxF3ZQ
pPjVHSMk+bOJv7tOL8wIZ36UeGmAFEmUatqY9YJ79JcnQk36SIc/52Fj616g
bxN5EL2kh0x03Z5Sd+oF6ZK3A8YeushvbsIH+Tu9gPRIfNph1EGYHaTuiTzo
heSjF69QVWkhJ0qfaRwN38uncjf8t/8lRNdAf/Jfci+QYjKRp4qaiO3r/Pcr
Wb0QUERM+yR5AfH7weo7XdAL7y88JNrJayDZ4b1sbS29QM4UT7dyVUPqKOLj
5X290PSq8RZ7iipCPB2ZkzPcCx1hnMQgCo5QN13CoxZ7YSEq9nqtM4Zws+Wy
Pljvheyw4CKlNhSRsGT45E7VB4nIQVmyMIpc2Wq/bczZB7Ln61ODWBHEXVMI
1eDvA5mWjE1BWhXkcUIos4JwH8Reothy0p9HSqTU3x493wceUd2mj+SVkK7A
Nx4sGn1Ax/2BO8JaEfnctw/Z1esD86Z7dygJCgiLUxN5+kYfpI34GA0el0dO
VQpkEl36gNtR4+QVLzlEiS7Irc2nDxZNE1umB2QR+0ygz33SB+dzN61YM2UQ
/9VU4qvnfdAZffP00H8ySBz8S4t63QfPnSUukOOkkYZPNYoexX1g+KgpTSxN
CiGL8B64UdsHI18SogbPSiGLPn5Dxu194P3OLNCq9RzCw6nkpPCpD9R+rTYc
pT6HSNq8kBed64Pah+TAlixJRKNgYx/vch9s0tEl6xpIIp7a5cm7NP3AX73l
anbzLBL2kuvWKnM/aFJ1kKSHJZDXC3dkZ7j64e1noR+IvgTS81Cmr020H/5T
HGqMNTuDKB3spnkm2w9+Fzlf/xoTR7JfWMtfRftBoCZQINRRHOE6teF0Wqsf
ljzZTmzuiiEhH6PTlk36AfvAVU2dIoasKJwmVVr1g/jWwuoVTAyxbK5meOjU
Dx07fxxaF0WRHh1DRNe7H2TixtjpXosiSsMLntxB/XC7bWHrm5kokm3z4N30
k37484G8i/4ninD9ODyWl9APz9MVM8fHRJCHPnlsPun9cNHl+vCLbBFklVpV
HcvrB5MdsxHDeyKIZeTIXabyfqg9PU31zUAE6eFy/0hq7IeP1LQ5amdFEKX0
AzOve/pB5y4vqza7CJItlvKfI6Uf5hNwuR9bwghXmbS2zHQ/kHp7x7i/CiMP
0a7Af4v9EF68YN08Joz87LIq7fjTDwofDtfNkoSRgtxtr4vUA7DAE3fXlyiM
fFnWePrxwMDeuy323f1hYYRfNjaHg3kAZpUV59anhBHje+PNvocG4GWyu8W3
FWHkSb3wxDjXXix7v8t6vwjSROu1gfMOwE7U7QjHYyLIxsV69myBATBRi808
DCLI2aeMZ1iEBmD39otPPrYiiD3R5IKn+B7eQKk356kIksKTbk05NwDT/g00
HQ0iCNFy0e+8/ACE0PId/vVHBGF6I5+Qfn4ADhUF9evJiiL41+CCA/gA2Pk1
mdHdFUXuSvR1OV0YgAMyVVcvNIsiBbd55ga09/z1/lHFOcWQLxW2u7KGA3Ds
A7XzWWcxhP9fPs8rs73zpEdWWt1iiInqtjTVtQHwv0w5OXxOHIkM09C1sxmA
IeLJu3xp4sgm+3jwWZcBOPIpP+3g8zOIpLlwSrznAGRYcXQ58Uog9im3yzd9
BqCgHKX+nCeBpEzXDVreH4AXOKsaWeMsQhRiXGwOHoC3Pat1Dd/OIkwuJgdE
wgbgaNkzsShtSQQvSjseHTUANEZWadI5kkjBeXkT86QBUE3ZEjjodQ75EhTs
VpsyAEab8znT0+cQ/vbe8BOZA7Df2feFi7kUEmlgW7f4YQBIFrrZYpelkeaE
/GGD4gEQu8bw6dycNLL1aetnWcUA9EneKU64K4PctH8mFNQ8AFqCu7YBtbLI
6/dj2HzHAPzeOBxyxFUOIa8IWWj1DUB3ILXpRRF5hEXutncBYQBy5ukvFC/L
I2p+dTGHRwagEPHwZWlSQPwaGN7fmxgAqe4HXUfSFZGi/SatkzN7+6kpf/Ki
lJBjMd83c5YGgNkzw2kj9jxSZ/0gp+jXAFT/S6qSf6mCWEpzXK7eGIDWwDLp
lAIESSYrVfTQDIL57wkR68coopzd50CiG4TG7HsHDcUxZPSuzX8TzIOQuJyR
vTm6d//yRXgvcw3CEznhzP3mqkj5Ep/gxtFBSI0WJ5GE1BDThkISlcAgrFjO
OMrRqiPrz9QfMQgOQhOXTwz1kjry/MaIDLvYILwcv3bixLwGIiPrMntEchDc
GaZYn/+4gBAPUMeflB0EQy0uiuP+iwh7rvAvGRiEGvUJ8qKjFlLoV5OhojYI
6QZLzmLV2oi+jr6hxsVBGG11+/D7uC6ywj9Lrac7CH1/LYtHUvSQpys+hWZG
g/DfRmBj0wt9RKKJydrKfBB0BqzmZz0MkL6412y3rg0CB+dHX11zQ4RZvt3t
nsMg9K8wftc2Nkbe0189FuI8CAMOp/dpOJsgl0aX+p54DALDz3Aeo0RT5Ov7
4IB470FwZD+f/pVshoTd55JI8RsEi+Ipp1Txy4iQXu7428BBwKb/BAi/vIK0
HUeiPj4aBAPV9xK2AhbI/ha7xfqne3rdi3clH11H3jzffNURPwj/5rqHRIut
EDWHKK3BF3v6dulbz5RaIzMKAtsjqYOgycE1wdBlgwQzluZOZ+7xaThcufDr
BiIwpnnle/YgKLErCz2TskMaPowxrH0YhKnwONGKcHvknz7trf0Vg/D134pO
6eNbSMqJJG7W2kEoPljlzCLthJxfE+vgahqEe+4JK3q7zshYa73PsfZB6NEx
Sb647Ir4JRoJCfcMwq0rN6JoQ9yRI7e+kCUH9+bF8G6lZ6YHUqXkF6pI3tPb
6RfXNOqJbIxnzF36vKdv7e9+6YQ7SGK+3HOjuUFAZtouzvP7IHJBXWoW3wYh
2Fw4J7fdFyEbWq7ZLg8Cd1v00rW4e8idUz8zXdYGwe6MsNGpR/4I5/ojI+/N
QWB68TTHLS0AKWnn2ffg3958vDPMCvEKRH46YjYx9ENA/jN2JIohBHl2nnTo
BcsQ0HN6TR168BCRZL3VmM4+BG2aX73InKFI/+SOe+5/QyC5kxv+ufcx4loY
c7yYdwiqLlXKh3wIR1hCTg1UCwzBoDCfoEP5EyTPuOJBi+AQJCXGpcQtRyHa
gtpne8WGgOlHiO75MzHI9z+TEyTJITj4YvDA/YBnSJnD06ZLckOg6v2w4wVr
HBJIQbLqlYcgACmStmiLR7QuLIXLYENwr6ticjcnAeEqT3HJ0RgCma1zCsp1
SciUoI4Bv/YQvIk0P65L/wrJS9iRiTPYy8+ZdZM9OgXxOZDHTW82BFN5HiJ0
YmkI7n11x99iCFzLfUpaitMRlnnGz6vWQxDWRtg0sMtEhk2qmu0dhsApbKpE
Qe0tktl6690n5yFQThLme2LyDnGV5Xmi7zkE6RU0RWupOYji2w7XVp8hwBJW
xHsF8xDaw76GSveHoHv+3cyZtY9I/0MhufzgPfx+z/WHdIXIyzUyz6mwITBQ
lyk+1VCE2NmG/k2KGgLH64STa9kliCRRdoolbgi0HmenRLaXIduqcy3BSUPA
8TTqkdyJSqStOD77T8oQ7Ht2InW3vhp5dlIt0jlzCIwXRjSJ2XWIRdwvt6ns
IVDRv8XW97MBEdyXaWT6cQhoNIOkzjQ0IauehvLdxXv1WJu8KtLUgtRMUx9F
K4dglmJqz7PbhoQaFv4rqRsCxoufR44HdCIGTVbTIi1DoLRxp+XShR6EV4qt
LbVzCDQaQC77Rj/yJb0+h6N/CNTPK3hWug4iRYfcosKIQ9C7+0P1iBUBuR/E
7/F3ZAj4U2cG7kaSEM3VXmPPyb1+KjHISm9TEA7r+wpfZvfqc5vtRkLJKDIx
IM5r8W0I1hZFTjE0jSM56NjuwPIQvDurY8aV+BnxKngyo/57CIpFnqo8DJ5G
4Lhye9XWEJz9S4nky51FGGO+5Z6lIoDOfxdWkw5/QYi7L6Lf7CdArI8PWtL7
FXntdtGTh4kAc1G8teZji4jj5IZJNBsBrBSXwEZwBZHRy1bcx0UAqp7E6bHD
P5HdOjM+36ME4GnWCxhVXUO6JOiofxwnwJF0I63nFevI89SyWWtBApRUSI3a
399ErFjtO8hiBOA8TftwJXkHEQs4nKd1jgBT1wdH3hyigvUfLU8b5Agg2UXy
PHKQBhqved2WPU+A7X7Vsx91aSGy96RZLkYAdQ5sQmvkAJipEJSOXSDA0xL9
Mb5KBjjxIZg/XpsAFotafVWbzPCDV4qGwZAAujw/mc4Ys0FF5NTcfbO9eDCG
nt6RHYJ3Yjp/WhAgN5A9jqGdE3Sc0Q8ONgS4pYGl7L/zH3CPLceMORDgbKW9
m9yDIzCt9drLwIUAplLq7B4/+eBDta55mycBopT3dRYsHQdfsX/Kyr4E2JyO
FbwpfBJUX304VnCfANSBh0Y28k8DK9O1fadDCPD8C9s+6xhhGLnH/OVFGAFs
l80fy5PF4M236i7WaAJ8ik6fWnh6FlwT9U46xhHAZVg5znHsHMirzfi1JhHg
YoQN6bWiDFCtehOPpxIgiOqcMeGrHHSlMJ7xzyRAmbyaX/2GIsRfSn1EySYA
ab3txNBtFbD8c25C6uMev1JnrFwpCsJvWuWiiwnwJUDXkvsPDqv6l59+rSDA
Db7LMdnh6lD1d/GLWh0B7Kx7Ev19NeFhbiCa1rzXr6wqpokBLdA143yx3UEA
4aWtM8wZesBNm71q2keAmPyEyuZ/BjBdoHypiEAA61QfvRI/Y3h/rT+DZYQA
gQ3f02yMzMCL8cb2zQkCeJePUA7FXQGkfN2oZYYAArIBzlSXLIHeNiLv2FcC
1L4WKB1Vs4YhNv79fksEaOSnJ4sX34Dk2sJr5F8EEOEu9X3qZw92jupl5zYJ
cCVa6P7V97dA4r8R1qh/BFgL1klaMnCBjWZnh4V9RJAeULl9v8EdmtypGlQZ
iIA5XvLxELwNkXzx3K9ZiaA4K0kXO38HTLuEPLY4iJCWWNpzk/UuHPOp7jTh
IcJYZHv2sw/+sHBS70QhPxF44m/GHXAKhKKB6XvMp4jg9VBnQ68vGPzvexMc
RIjQM7aTmxb5CDREGcWbJYjwczMmu7c4DNgoKQ/5ZYhQtJ3WOU9yrh8JOTd+
V5EIfR4GLByNZvUZkq2yJIQIAnYPeqgsdcF53DxaUo0ICyxV5sVrLiAXsTj/
5CIRiLezzAxNH9VTyQfCF10iCJsx+95u8KvvmuFIwo2JkFksp24ja1cfF/Nu
JeUyEQqqIt7rKtqAhYryxU1LInBelv7j1P0ABL/1pRvbEoHyn9LNnXqH+pUE
m638W0Tw86OztTDzhCrVdUMmNyIo33LzDb3sXv9wJfy9vRcRpl7G3MemfUAn
hY+26S4RXp4x1GjqkQSuS4UWfA+IsMw+NDTX71z/eV2t1PchEUahZI6+6THk
Zg6zEMOJwDRpSw6M9qz30ne2P/uUCC4thbjZhEE98ne3LiKeCPcq/VG5dG+g
y437b/4FEU6ePMjqp6VdP2Aq5I69JgJ+ai0vj+dm/ct91R3Jb4jQAtz7r2sz
1tsW6Aps5BDhRknAPfVnQSBxbfquUT4RvAv+skr/ug8bDN5DH0uIMMl/br+C
QiQ0ljGIMVYRQaTtRvhDzgiIuJESYldPBLXiR0wnNH3AmO3cWEMLEWqGA06U
rz8C/toWGd4uIvxzOIqf8XoCC7fMo3z6iZB+7EjOoZsxUMS1ODdEJAKt+knt
d1Ze4Nf8AJEYJYJg+Ou6QZUYUHPnSAyfJIJ+lGaet3I8sPK9W56dJYJKXaHs
lNVzQE1Dxme+EmElni3jflMmeD693j29tOc/p7iELe8tvOlQrpz6RQT/H9Ur
LwUzgUzN/e7zxl6cIbaD3X8H9Mpr8ZN/iXDgVObblP0fQclrIHiChgQ1LLQ/
95sWgvOHPPdxOhKoRgs4TO4rhNT5MMsxZhIIrHzr/0YogYFjdtqfDpEgm23u
3J/qYqC5jCmNcpFAxtlLbtClEmRi+YRHjpLAT+WHjdFSLdh3bx4ePk6CY4nJ
76yoGiGJlryPcpoEy+15jbHPmqFLpWiVJEoCe6Mnos6kVtjxjp4kniVBulY5
2xePbpAocOwlyJCAl+AyMfemD6y+alQPKZKgo2tVM0JoEGJPnMwZREjw8JTu
xCQtCVqu7iYMqJLgz2r3tUo5CqzHf3rYr0mCNtlMMsnrEwj3lXv26ZCgmvCm
/xPrZ7hCF2/Va0iCI7bMleP80xCJuuv2mJGg8XNqpHPvLNTd1T7fbbHnN+Tu
z0LPBVgpEhbtsiZB+K/ZzJH173BikZa7054EFZZK62ftVsD49NT+DicS6JfH
yZcN/YRQy9pfbe4kuDokuSNW9xsqEl9Mtd4hQdw7O4mLfJvwbeBOf8s9Ekz+
t5vfIv4XeBkNa5sf7NVDXr1RbZ4K1VGVeN/0kASC6vRjauH70AB/xheN4Xt8
90KG04sOoAWl86EN0SS4951/+74sIzq91ORVH0cCX/tdutc6rCin8GubuiQS
/KPbqWWLPoRqWPvp16aQACW36M3pc6K+L82QmgwSRC5eLIj0/w/NJUiLV7/b
02MTrj+pdBQdY2Y7UpVHAg150xMjEcdQVo1FuspCEtR56VK7YydQ9EHH7/Iy
Evj86Hq8Jn4a9ax4M1NWTYINloxgx1Bh9M1q4GBpAwkiyhrFImzFUbLotfqS
VhLIKV02n/OQROltFT8Ud+3pezzWKHpQGlVKOfyqqJ8E30cKGws55FBn8mpY
IZEE8yMTb1riFNHUg33eBSMk8NRqFb2ZroIOaOba5k+QwClB4t9FYQylCQ41
/DhDgqgvKT1F06qoTLUN+mGBBIYWm1KhDBdQ+zVEIu/H3nx5OU02519Ck84c
5X3/kwQDYznXG77pol32fxhy/5DgmuboVsqCAbrzmvAne4cEQd/fOUTVG6MS
I/lz76jJUHmLGJzCaI5asUcSsg6QofpstTLv6FU0Vutm41smMiQo0mT+EbBC
Wx6q5b9hIwPXSplabIENul57PCXzMBnuqLpO1mfZocJ/diIyjpCBTm4xv4jz
FnpFcsQ3/RgZJK5Lq0SyuKCRt0rt006RoeEyn00YwR39hn4IYxIlw/b47Ma7
6tvoBe63ud5n9/Dej8/sP+WDvllO7pmSIcOD/dMzhSf8UJr2+CVtJTJIn2lN
Zht8gFqlRrJVABlEdVQaP2cFo3V3HkqdVCeDLh91Zev4I5RXx984+hIZarwL
Dp3KCEfvnvLy3tQjQ/TYqwoCUzRK3nZKsjUhw7vzrFdDXj1DZQg3qvqvkOGH
w34394x4NDb36piSFRmAX2Bu/kwSuhJk9O+tHRlC91nU3zNORnUvax0/5ESG
uhqaLLmkNPS9pCru706Gt83VQ5rumSg9vbLtlztk+LpcyHijJQu1n5QKNfQj
A4+k2gHPnFy0pUw0uzaQDOKbj9X+yuejJ6JPdAmHkkH5BY+SqkYRGmh3ZDHu
CRkC6TJG5WxL0fHz7Ky7MWTYTOc6oMZQiSpxMko6JpABd3/+gEu7Fk36Tm1I
ekWGYnnxosiTjeh60+ZtNJ0M5J5uvUjmFtT45erz91l79de/f2Dbsx0t8vha
zpW3Fye/vNbo1I0evDg1ElRIht9rPrEv6AZQ5+Mj24tlZDC9k/KRUDOEdv0Z
4DOvIYPww0Yx5nkSKtzfAc2NZLh5N97OM2EEDc1qsJZoJ4NcyKVQk9lxdPZ+
RciLHjI8K+CxJ3hNoZhJwVvaITJc/hO7pGEzi6aKZ7e7UciQkSS+wdDzBd3Z
l/Z1dIwM11SvKnq3fUevfEpk0pgmg7rEobXnMitoRdHTM4VfyLDT93O8+8tP
lCvisR7vDzJMolPn25jX0dvWDzwe/ySDmMLCh83STXRAwSfu5x8yeOWxcvVs
/EUl2NxKr/0lQ6rFF8b9PtRY5Bd7SgcNBe73BQzIX6bFvtVZbkrTU6ApsYuY
XkyHaSaYHn3NQoGd6DDh0BdM2FsXXRVGDgpcd3vnm8jGhtGoa1y/w02BAwGr
tlJF7JgVLxL0mY8CFrd5h/waDmN1v2QztU5SYKjIluajNg/G232mtUyYAqoC
vZIFjnzYvYzTXwQkKGDFxrZVxy2AUe7yMURJU+CR+rJT//hJTMbgsNiGAgWO
ljidoHAIYbHCLDo3EApkPV5U9e8RxVZ2ad36VCnw+8qVfi7es5guZSdG8SIF
pNwc3jGxSGF5H9eK3uhS4Fvqf2x1KzIYQ+gi8aAxBSh8G33vNRUw+2uz6/cu
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 1]], 
         LineBox[CompressedData["
1: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
n7eS/v//zf8B2nTWsw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.5, 1]], 
         LineBox[CompressedData["
1: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
ilWjzruoZfQ/mEArQA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
/8P8D7P1Jf0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 1, 0]], 
         LineBox[CompressedData["
1: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
/z/kf5HDviE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803712#7"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"n (\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Electron number density n versus position x/\[Lambda] (\
\[Lambda]=10\[Mu]m) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\) and fixed \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V, \
\\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-0.010661151276543825`, 1.1271097448475112`*^15}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.001V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.005V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.03V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.05V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.941082620142622*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"71de1db7-c886-48e8-a000-67c86a0e41a0"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1249.3582998794839`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 131, 55, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9410826201974154`*^9},
 CellLabel->
  "During evaluation of \
In[130]:=",ExpressionUUID->"e4796414-2138-4c69-aab8-fb38a26b8833"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
qf/+bft/AKHeYYA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803836#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1: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
Rg==
          "]]}, Annotation[#, "Charting`Private`Tag$4803836#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 1]], 
         LineBox[CompressedData["
1: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
PTE0IrKNaP8HTSQHAQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803836#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
QE8=
          "]]}, Annotation[#, "Charting`Private`Tag$4803836#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.5, 1]], 
         LineBox[CompressedData["
1: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
q7URlID/BxqNFmM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803836#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803836#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 1, 0]], 
         LineBox[CompressedData["
1:eJwVl3k4VV0XwClJiEJCVJRQSEUkWdcyz0OmIpVQUaZ4USQhQqWSEEmkiIxp
UOZ5vGZlHu81y3CF8J3vn3Oe37PPWfNae29Baycj2010dHRlxOP/by1balPR
mIli55OIDwIeP5BBmc+5j1cahAslFYrTfuCJ+KjYHF4V6PAXDfs8+AO16zuy
43iNIX0k6tpT/Z9oZrP08xmvDaTyrkgLSBRgz9Eg5Ue8bpD4J4nl51Ihvtml
/yCENwDorIQ6bUaL8U79yzLT7wHg7eHdepexBE0D+zcdsAiEhDdSc2WHSpB1
0cU3P/YB1EZWrLZdLUHP1gjPyX0PYf1dy362yRI0fP7bXu/QY9iv+Pz95L9S
9GPKEXnIGwG8QU2KDEoVeFj9aXC2cwQ4XT+3RGdfgc2BTmNdlRFA46Drln5e
gQc3i3+U/O8FmG7vu4+jFVixliTZ2hwJY3y+r5ceVyLrfKTMvrBoOOvapPN7
vAqjem4rf15/DalXVDPn6mpRif9cUq9JPNy5kn5p6V8tjp+X3cKUHg9sJ8r3
y0jU4d5JryvpEm/g3b7ecYvHdeh0/aQwXfcb4KMbUDE7W48cNhkf3sm9hZko
9jNM1AY0P5eQMfsnCT64JPSJ7G3CmS5j5rd872BfsU0lRbYJH1gx2Z5Vfgf9
o8KeRYZNmHPFiS8v4h0w3IwU+hHYhGyOZwLvyCbD4Un/Hd3TTVh+/9d5Rp/3
MC60TPpW3ozH03Yy8jOlAuO2qLLcwFZk2fCzVN+bAZr8CpZndTpR2HCaWhqa
CxvpJuf3G/ejR8MpiFr4BluHys7424zg7tydvfT0hbCD/y7lqfk45g0q1zUq
lMBYi5Do+usZLLGP23Nusgx+1rAbph6dw5wxBwcrWhlE5y2WT8vOYdI1+fwr
dOVwR8pGUpI0h4F2HecducpBc1NDQZzBHGpY74zxVygHv+oOQXCZw8ZzgTyf
wsqBO+aCcGDWHHZr3Ny1WaICxIz0Of5IzGN95WlbJtkK6F36YRwkM48Fasyf
tytVALuNYcHuM/MYr/LemMekApgU2GYO6cyjNWnguYRPBaxK7xNcvz6PVFkT
DvP6CvBQ58gISZrHxUNn2NNvVsItfstNi1wLqDiIlSGelTAu5kwx41/AB3Ea
vtf8K6FtfYg358ACcnMZzxyIrgSb4QQdo+MLeJLeoTGmrBKYLzieOKG/gJ5d
UU+C91TBIw//W15BC/jvyQK7TXUV5GxWWZ/8s4Aq2iuVSq1VoDnt5qP7dwHD
GOnu7eurAibX1uB36wso4MMy+3uhCswk9SUVWBZR0V6IbLi/Gt6b3hLYfHAR
fVUMwsGjGux678zPnV3ETcsfd+wRroE9CisBsumLuKce5+FoDYyqme84lL2I
0gm/2mxO1UDAzaxc1i+LaKu59dUn3RpIO3dAvqRoEauirYXxvxqQO87bXt+y
iE/keeWvV9aA65fL5jZ/F/EDWyb/46YaoJaKdzT/W8SiQbWN7K4aeFYkdOoU
PQ3nQtzK/s3UgJXZRvTUNhqadjXqhfPUwvT8vOcCHw35vR9c+XK9FsIWC1g9
T9NQxkBArftWLSypZhldARrqHcwVpb9bC3qtXjpqyjT0rRuY0npWC40i0Qbz
WjQc5D/j2fu9Fs5frdAfO0fDlJ/zYVtY64AsYz+M/9Gw5GmI02HuOhApVBf/
4EXD37aCRvr76yDiJMsGgw8NWdn0d0dL1wHJZeT0O38aOlulJohfqIMK4exm
33Aanty4lHf2EyHvZHzQqw801NEtuq/6tQ74yuf32H+k4ZVX+/RlS+qglFvD
UeoTDcNleyl87XWwyPxCNSmHhmNOFryDa3WQvxwQJlpAw9h+E29n3XqIqM34
l9BEw2zJzxrWZvXQ907mzUQLDau8uXYZX66H218oo+LtNFzkaUmXda8HL7Mh
s8jfRDwMDfrWY+vhxrOVeIYhGtKXaOGjyXrodDGO1p2jIc+OVDZfWj2If3la
vWOBhpJW27qc6Rqgdm9nUO0iDc+vVN4y5mqAB1ZrKSLLNMw9rvpuj0IDXCEZ
2N3eoGHNvSSX7WoN4FJgQl2mW8L+hs2KG/oN0Fo1O+O8aQm3O5S0D15pALMH
PGGqW5bQLhGYUkMbgH+5sDeYeQm9/7xuffWiAdi7um6VsSzhc1h/8yi+AboO
+AUtsS5hUdePUy45DbCqpSOiwr6E7WL8jFd+NsCg6VzWhR1LOOlxp9m4sgGK
Dwh9ddy5hLxc8g5yXYT9PZbSHpxLKGUdLXt4hPg/iyvFkWsJ1TL/buafaQA9
rszIC7uW0FXnS+zGpkY4XiT6W3D3EgbHcF//w9oIRrF9kksEx1PdZYa4G4H+
iMRKKc8S1gVIN1QcboTBQe85Zb4llGev3fRUphEepWUtbNmzhB+iL8takBrB
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803836#7"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"p (\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hole number density p versus position x/\[Lambda] \
(\[Lambda]=10\[Mu]m) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\) and fixed \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V, \
\\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-0.022940406401186688`, 4.0695326271608394`*^14}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.001V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.005V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.03V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.05V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9410826204640207`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"1eed6cfd-5640-41d2-93fd-6a9e97480f36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vd2", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.15"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.10", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.15", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.15V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.00V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.15V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Electron number density n versus position x/\[Lambda] (\[Lambda]=10\
\[Mu]m) at varying gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\) and fixed \
\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V, \!\(\*SubscriptBox[\(\[Delta]V\), \
\(g\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<n (\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.15"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.10", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], ",", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.15", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.15V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=-0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.00V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.05V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.10V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.15V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Hole number density p versus position x/\[Lambda] \
(\[Lambda]=10\[Mu]m) at varying gate voltage \!\(\*SubscriptBox[\(V\), \(g\)]\
\) and fixed \!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V, \!\(\*SubscriptBox[\(\
\[Delta]V\), \(g\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<p (\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9421842407498913`*^9, 3.942184251370431*^9}, {
   3.942184382182591*^9, 3.942184411469686*^9}, {3.942184442806924*^9, 
   3.942184456643202*^9}, {3.942244202614929*^9, 3.9422442309635477`*^9}, {
   3.942244271365223*^9, 3.942244331032032*^9}, {3.942253862686747*^9, 
   3.94225386330389*^9}, {3.9422555125711946`*^9, 3.942255653326333*^9}, 
   3.9422557269156837`*^9, {3.942268458940201*^9, 3.942268459658445*^9}, {
   3.9422686368075047`*^9, 3.9422686596148863`*^9}, {3.942268797652883*^9, 
   3.942268809114278*^9}, {3.9422689332512617`*^9, 3.942268933768836*^9}, {
   3.9422689787841043`*^9, 3.942268981743103*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7b9b5613-05ad-4932-ac27-2aa6ee1887a2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwUV3c8V/8XJsqoCKXIiErIiMj83HMviqyIyAwhIdmJ7Bl9JXtvJZGsMjKS
kMrMLMVnGJ9BJIXi9/n9dV/nde895znP85zzvlfE4fZlp10MDAxHmRkY/n/V
dVoY6li8gtj9ZnzadThdmVmT3/M7nwJcZXk8ppSQpHy2IDO3jk8LUKlrR9K6
4pT1Po3X5vGZwvcko3sjTUHK5o6/W5P5HGFoMVywQc9eeVo2VvM/Pl8QfPqz
M8NPUrnw0KWYeL4ouEIJyW9efa0Uzlp36j5fKmxHCwZb/Zw6d9WiqPrHSik0
Dr59WPT8i8LenXBrbaFq4Og4tKKNp8ifNF5aeJtQD0YfTNXiXzPI3elXgcy1
Jnjyn56hTfmqzOF6rm+MjO1waSeom9lFSPolXvPjgHoniEWGNQ04XTzd6Zp3
1ILaBdc9A39GvGqQ+CWG46y61QNBZS+Gf/53T3zXxrMDR0/2AZFpKoEfCTh1
bsfupcnzj+DbdWQxc3BS7GOUQn+35ACMFAtTCa+TxYSTKBtPlwbBPpRPh6eo
TIzy+/u30TPD0Bi68l7bivtUKbmljyNxBITObG5fUCWd4hB8skwkfob72xN2
aUX7JB7cbHAuPDEGeubB8gxj1yXX0WdEl9BxwC9sFb09wSvlK99Vz/t2AiT/
vnJ/kDYh/f15V8KQyBQcFj01EMSDl91y/ZwjEfgFzturvcg+vyp3GmPZdm75
CvyNYW7K92fOaheL3Kg5/A1yaxsIdWmLincEr4nOWn+HSleHjl9yTUpS1Ct7
xw1mgNi4lC7mbK/Cw/mDtWtzBnQYVb10TXapMbfnVB/PnYXfXUuLYoiV+pS6
ls73/FlQx3TmfmP26tXN1JnsolkwLyXeUZ9yUrd8iePmfjIL2ZwEBeNgL/Wa
qu++DLWzcHbm8e8ALEY95nTc/tf1szAwMzkkwf1A3frpmcd3Xs2Cg6s2i13N
I3XWsvDxpdez4NbAImXHlatum3tcdbpnFvicbx+/EV+jrsD/cTizbxZov+0u
G+15qc6W6etm+mkWsrDBtpqSFvVvhwSZDwzOgjMhU07jyhv1+pR3uR+GZ2Hd
vIAm1/xOPZ7LQzF2dBaOfavavKH8Qd3uIW+/xsQspMyFaOeyD6mf29/uvD01
C1xDh9humIyq7024sdM0TccrkrR8uHJKfYb1QKbfzCz8qdWfT3w2o/4ypvGM
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
mJY4P6A+a+OlRRfp+ZMEZDeO96LKysaOtvpk0BvYO7b2vhvdDuo7fvQSGT4M
RShEhL9D45lai1NNyVDyczJOTPQtaqR9zsHYnAzmzInq3WydKG9CtQiHJRm0
a7+/ZWB4gxZzFxfGXiPD1QOk7tOn21AXs6N2Wg5kePjH0cHsxmtUJjtVmNGJ
DKz3gKm0pRltEonND3QlQ8U0zeVI+Ss0xInBVukWGSr/DgrxIy9Rrad3Bddu
k6HOQredPF+PDp5xz73lR4bt2F5maZ9aNN2XZCUZQIapWdyD3ss1qHWj7dH5
QDIkftg2eKTxAl0A42y7MDIgX8Qf/smvRJ9H9lkIRpLBiIfTQXisAvXt0eSb
iibD5FqHc/ypp6jq3taJ9Dgy/HJgmBh59ATdMTyXaZJA5+u/9zJNPI/RruRq
8wOJZDDz+8Oy+awUjR8TP/wpiR7zVxy9ZlGC8toeTb+QToabnuWlasuF6Nei
1CtMWWQwCfHeJfysAC0m7T/UkUOG/YpGZa1ZeaiLROzne/lk+Bpv4WZVnoNK
32JIVSmiP4/Gb9qOZqGrL+6arJeQwcpJP4IklIk2rq1y1z0mg87jcIW7kemo
1j3SI6lKMjBtCl8sy0hB2TtsjRefk4Gv++FmuFYyOsg0ceBxDRkMoj/n5e15
hKZrGw861JMh6sfVcVLTQ9Qqoe+h8CsyONjyqCg9+A89NqB56WsTGdZ1Jl6Y
RiSgc9ytHFmvydAnjTRpZ99HvbOr/+PuJMOMhO70ilgM+upvdmxnFxmetXXU
HS+IQv/axoR795AhuWmCyeNMJKrxxitItI8MKv4yIWuT4WjscRu/4Y9k2Pv6
/eXcrDD0Y7TO7YgBMty9EsZx/2sIyr1w9qb8MBlCL4taxVfdQ3Mr2W2Sx8kg
7f9xtPV1ADrLsW6mMUUGZqNab9l1f1TMa9Zo9SsZjv4Imswz9EPdRj7qFn8n
w3yutLj9Wx/0hWKj1mU8GVo6jhjqmnijvzJKkF0kMuySzv2m9tcTVd1MVK6d
J0PwgfCD2oG30XdtTlLcNLr/Gw6vndl2RdlFjMU6l8kwln5evuWvC2oUqX7M
e5UM+l+nsL1CN9A00il+0V9kUFc7i4raO6FT2jwHh3+T4alfiwFj13VUuGJ7
f8QmGS7795QInHdAHfeRWeT/0fWMNBZ2mLFDlwY7th7togDFw6fYv9saPXu2
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
/+8/4izfW/wXljjfsELs
         "]]}, 
       Annotation[#, "Charting`Private`Tag$7237#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$7237#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
eVkrK5Q+5l4Gd5EV9j+LIwQM
         "]]}, 
       Annotation[#, "Charting`Private`Tag$7237#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
+GP0Fv0PnDx4kg==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$7237#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwVm3c81d8fx2kg60oSopBKESolq7dzriR7RoVshSgjVL5GkUIkGdkjCdkr
e++9twj3klVRRul3f3/dx/NxPud13u/XOe/3Of9cPlN7LYtdVFRUMbupqP7/
q2RB7q6a173MNkkv5nVzHe8hct2f5BSH2q26PPsr6/h8XER0Hqc82C+myRiJ
rWPl9sHcGE4dCAcvB2madaxn/rs8hNMcJr4x7fzKWcPjos+JgZxOkMhex+qy
bw3HH1T3fcn5DBzC1kUqi39gL7q8ky84Q+EyfU/ka85VrH8jIWv1ezK4R7tN
3Nw9i1dGdegTud7DQMr+3DsjM9jXiM5Cm/ge1n6r7HjkzOA8M3uuwtD30HeT
l9R6ewYz28n6PJZIAZfusNTJsq+43nv4Jo37B0geOe18zm0an8vYT8NNlwY8
QhVbUZuTuFmk3rhdLA3YmF1YIX0SG+e4lv53Iw1q/xkpMhhO4sDCyftTaWlw
3SmG9lj1BCZXfRpNUU2He4MvP9n6j+PY/ms5Z99kQORcR4bRqVHM8M/L4OqR
LBAm6copvxnAEXf1jIQVssCIyWV/geoAFugTNt5vlwUSTh8f2tIN4MsfB81G
y7Pgz57Fm83/9ePPH8MKikSy4WzoQTCx78NL2otlyh3ZsKA4TyVh0oPF9w3K
Xp7OBrBt1jrM14MfVVRXiP3Khrbm9XemU92Y9lR41cEjObAeb3jxqFk35ttB
dZP3cuCmryiDk00X1k0Nb3VkyoVWpbq+i3ztONrQW8WSLxfOXTsy+yyzDU+z
3mvXv5ALeTkOURUybdjeHXfKGuaCMukS9d9brfiF1lIP7adcKGZw3hl534zL
/+CRKJU8YBA62Bh2pwHvyT1z65UxhfsGmx32NmAlK44xT6c8YDYOXtFOqseD
3UvjFtF5kFbg03hqug5/T4mYEl3Mg8PoUpaMbS0+rrlMrvXPh/W/TFkvc6sw
l8dVKauEfOD6PRbJc6MKs3yK96cvyocXPyduL1FV4S06bRHN6XzQqFV18kmt
wF1VRY4Tlwrgafmdc44HynD9Mku9l1oBbLp4smo5leISbmv24+YFYC6+Wy9x
sAS/d+X+bBNUAMs01keD3n/Gj8S8djZmC2D/lZVXekZF2N5oRD16uwCCPu8b
8OwpxOYB5xNgfyE434hrp7lWiNXJs0RfmUKQuv12/2HZAiwQr/TiwJtCWM5W
Ct+Wy8MdBDY2Ebki2Iw6dCvFKgvXyt6z6NYtggD3kx/ywjNxsU1DoZNNEYha
q/AutH7CSY2uN0rDiuBQgvn4e7kM7OoxHqu4VAQfBiI5Dt78iO99urj6bVcx
GO97/eVUWio2HQ1CQRzF8KesY2bfzgesKoFn+omUcdfCuc3sFMy/knLK7F0x
WOqG9UrgZHyIh+oxTXYxeJ48f/9KVhJmVL7R9rG+GD5lFJsWH03Cv1MY7FdX
Kd8PBOx7R5+I24zu57tf/QyrTFVzYzTxuCageS+f4WdQOmgkp3I4DheV8OvV
OXyG++z+1wZFYnEie/8mfexneH30C5+dVTR26ZCEiLXPMFdS1VR7OBIzixTM
NtOVwM3evFh5swicHCgWsM1dAjats1pXssJxt8rJYaMrJcDtOJ7hqBOGhVrZ
HI+HlQCKKM5X7H6Da04Hc+qllQCTz5ZqgNQbrP+SocqvogQaJnJ3ZX4IwT7X
djEtzpVAAq9uv2zgazzZuJKSK1EK6mMXfq/QBOGHJ21UZ5RLIW+TU17wwCvM
+Hzu50HjUkh2EVxfPh6IJRXG5dz8SkEhqlEhwsgfv6lrGYHhUviqLOvtx+GH
TwsoeD1YKoUCyclRI93nuOpp9ckk6jJIyBnPzg73xUu42InmdBmIpJ47oCDs
g69Wv2duf1QGszevarS/9sYTvHwFO6/KYLvzSe/+317YyTP6llhSGRgkpXeP
GXvhBHiT+qa1DLx9O5dCkSe+FMesXj9ZBifOPhR/e98Dd+y8WP/1swzSXxSU
iVr+h7fLPfFN7nIYvXBS7ujdJziE5w/ZX6wcilNuHmJ6+BgLursElcuXw77W
C323Xj7CujJ2Y7z3yoFTqQH0m1xxVsmth6TycpD2v+P3IdQZK3ANcnP2lEOt
O73b/UEnPOamVas0Vw6NMldEhHid8D7JayyZzBVAv4+uqbPGAcdH1BVO8lcA
zY2cgTvcDvjiBhjul6iAdZXnm5qPH2CzootpTrcrgG2o1OKJ4n28xZ6rkeJY
ARnDX1+QbO1x8MMzvwefVwAzo2O5mpYdLr8gIC+dXQHSJfL8Dy7Z4kP5+yeo
qSshV+YhbYv1HWwQsK0zw14JTAeM9PpcrXCi+Wxrg3Al8Hi47ooJssTCBz9/
9tevhCeT+SKKA+bYYSlRzM6uElZFCv/E7jXHRfUBHzSeVYIZ4+FP0TJmGD80
fnswuxL8kgQEX1aZYD81JcaN+kq4Idov+ZfRBLefEH86MloJ/FbqH3mMjXHG
t6fFnburoD7KaIzqvBG+GK2XEipaBZ0qTc/L39/AN/zapnykquAxf5/C0xh9
/MQJ8bhcqYLJjM1Wozg9XK0iFHrjVhV8mDHRWq7UxTOX4juVLKvgxqrp5Nq4
DqY5fpBB5kEVFF6WP1m4Rwer/N3xOvK8CirKNkWEbLSw3bxjOSGkCp70hBsp
pGni1/3kDaqYKqhZTKL9tqqBBz712H/NrYIzBX3fHU+qYxOjFMPUiSpo6bso
Ea6hhJ8pHY6MnK8Cl4zdW38vXcMpF4P7Xq5Vgc7huMkAYUW8yPxI+R59NfBY
20+5nVfAzNvLvkYHq0GAsceOUeEKPksyq1HnrYYqqZRWUVN5/LBSVfLcxWr4
wbFsWFSAcWR6jdMxVA2loRnt1osIl4VLZLOpVIOjM5eGqhDC1Pf5Tv42qYY+
T2W3Ck/AAbzrbGWB1ZClSB3D6yGFMxmtNT5FVMPViVeq1LclcffGhH9sUjXY
ifE4tShdwuzdTbu8PlcDJ73W10vyF7Fkuexlh7pqMMeGj7c0LmCDj7luZp3V
cNajcGLMShwneEWvXpmtBuVE//y7uedw3b39whKr1bC+fsxfY/YsnrvhayW4
XQ3bwvZ5XbxnsfC5+xP0+2uA1b2Y85GxKC6cJrZ1ytQA0WS2+7P6aTyg6PU9
8GoN+MXHBCmeO4V/ZVawq2jVQJVWlmI5ryCWeCxp0mRVA0K/Cx49OHoC6089
9PV1qAF+G9HNJpHj2PVqfrq8ew3kzPCfvqgogIsPiP6qCqmB6OhFrZxwfjzk
ZnvYI6YGEhiNRDfb+PDG5Ec52dQacHQKkW2h58OXMgT8P5fXQNjjmMprskfx
Z3ku3lxyDfirvYh4IcOFR9L0rtz/WQMZq8R5Px5OvMXy1lpkpwZKhryfF9Fz
YKlxQkHagVrY2xbzLZ6WHd8kqo7cOVILD7RE4qzYD+JHH1/+O3GqFiJO9HI4
i7LhEue9SkmXa+EKC6tb9n+seGQU25tcq4Uqspo5IX8/3kKeoUd1auGGGXMz
+w8WLM28PRF1txYMvE443WIiYAOnS3tuOtUC+1/Yy/2ZCT8ZcT7F4VELflzj
s/aOjLgsZdUxNLQWmmhf9xnvp8djjCKRWnG14Nwt4N7/kw7/cbCpYEmrBRWn
pVMB07RYFuboAitroZFGvCFrei82en9MRLmlFgbN3a35f+7B/zGYaO/rp7Dg
SeZppj24YnA0xmehFvZ8uLDb33gXnpDlrCWuU9azOCeVEE6Nd5Kuk6mp6oA/
YG3McJAKX77ffe6/g3XgG9N3MWViBxkNMOvL8NZBZUdYWV7gX/SfjIr71uk6
SDG6zKag/AdV0jU2PpSrgzGVz/peK5voi92eJXHlOuBymFzc6dtAVP2I9adu
HZxYGmZPa/iN5BLKDOxt6uBSyNkq57Z1ZEy75XXmYR0k/30Q/G5yDXnek/jw
zbMOcnsZ+Nf//ERVkrnfrcLqIPzkz38BOj/Ql7gV9hMJdSA9eGTyV+B3REVz
RmYmvQ6kBurkVjpXEer54GtcXQc0e19cPTW0jEwvzaYfaauDr+/MbvL6LyHv
WP7usYE6cFT4SLqnsohqrGMO31isg+J8wdvhv+dR3ryNjdGvOjgfVS/x6QcZ
Jd+RKjWjqgdXcZeDlzdIyMdy8KYdWz28FWOJ4OebQw9n36c5HqmH4JabUx+J
s8jS3GnLVbAepNVk+Q7YzyBF0/3vnsrUw/azl0lHJqeR5NTkvJ9CPXDM3Io/
cGwanTbOlHylUQ/lNtQVQXZTiNFIeTjCvB7Sys+zkrm+oM4bPhyZAfXgQ35G
ivYeRVVD2nfywurhxMrBnfOOIyhbj7+4OL4eFHWWVaPshlGIbqVebX49LL74
FnXk2SB62hf4oamiHm4H6/ZaxQwgJ22D3+1N9eB1VfDmaGU/uq65GTY0Vg/f
yv5qNx/pQ1e7GufG5+qBdGfvtdc3e9El9bCLX1cp8bydx0diexCn6vmBpT0N
8Pn68RlF6W40pnjv4O4zDfA6w2a82L8dtTdKW9BJNIDehQGSkX0bqlCgL2BC
DfBW9FP+WaNWFCf/QYdDtwEMM7xF3t5qRsG1zsk8txtA+LivhOrdJsqNL7/G
f7cB2n5X3vT0bESmclNvzrg3ALOJVkB/cz3Srsz6eu55AyCLgbNy23VI/vJ/
5y+9bgDZDa2OQvE6dFzmcC9+3wBKmvHNnhU1iCyhy6rf3gBv9JX7lI5XoeHC
Y6aGgxT9qclGd55K1HLhR47pVAOsmIjmUf8pR+nngzTvrTcANee3StqRUhSd
a5jg8K8BZlRWjqUPlaCAs8LfXfY1gmD8lrPw1GdkJ9oc7M3TCNV35ZylmYvR
7czwL89PNkLTt6j7jOeKkMYZS7HAs41QGBGeiIwK0Tmh3V3hVxqBmcl//nlH
Plo/IUv4dK8Rrh3po6GjyUWXp3HjS9dGGFtuO0avl4N8YxQ97jxthMjxu+nC
WdmInU1n5VhkI/ztzn0iR8pERp03PlAnN0KMG6trVcUnlPLy9u3JzEZ4mkZ+
LJOYgS5S23S+q2uEbymORif909B/Zfefu3Y2QllQ95OkoI+oweUhXB+h6Jmm
vb8Qm4r0lr2y9q82AkfKGaflwRTkOhoR5He4CXz4hhhWcpNQVVjsVcsTTeAf
Zjwh/jcR0Wkl/yOebYJjJqdXk9USUWRTlv0/hSZItronPLA3AU0/LTg5rtkE
LrRxoXQ28eg0lE6WGDTBxG6ZiVcZcaikoEH9oUMTlPH6zo88jkG7HrTR6rg3
QerprJzPjtFISbin8qxfE/ANRDd3O0eh0cRx0aWYJmBTGWHfGx6J/gStEcyb
m0Ca1ZauC4cheeWtRtTXBKB/6mWm11sUQEPleXSyCRYl2S9NNYYiHneG1ZG1
JrjI37XMfvcNsry0P7X4XxOIdWTX+NeGoMyf7MZh9M1wplCR9ZJACLpszd+l
ydsMX0+HPZH6HYx8jwv6iQo1g5SI7AjH3WDU8eWMHNPFZkhOfLLjXhWEjPQk
s5uUm8FDd8ntcGkg8pDXCAaXZuhQqysu5HmJmv7pKvJ4N4NS/2I8l/ILxFJ6
i2o7oBl0nQW4j3v6ofizVvcLE5uhuVXpzc4/X0RetBUM/dQMHM2ThbJKvkgs
1eHLg+JmWDj8wm13lA+qOvKfxpkOyrgRmz+/+jNEN/KUjmG4Gey4zSV25T5F
Gm9fVJG/NsNLobQ9zlxP0RTDW7HkzWboos07JL3thXZtprMcPt4CZQltM8lL
HuhwO/4Joi3gXEg9us7igcQThvvNJVvg+dKt4zbS/yGLa7RRmaotEKST0FGb
/AT9xxPr3qvXAuIyB9LOfH2Mwr6LG2+YtEAl3fWkppOPUVOk6XH8sAUkI+MO
FNW4oal7m7RWni1AFZYhnMjhhrZQ8IL/yxZ41WvlseToioQXyrP6Y1vgR2d+
PlnSBQVJcUrdbWyBjuB/h9J3nFAqczb3q+4W8Hl5+nXdIydUNa3wL3e0BdCv
IvrVLUf046VT3Z+VFjjSLPviO40jYrjN8IFvqwVqo7a2noU4IIHziS8U9rTC
3LTkmfd8Duj6aKdaMEcrZPZeCjig9ADZZ1meLeBvhbslSlcFv95Hfk//HhgR
boWr5ndbr3vcR5+FhIaPoVbgybqacM7LHnE/8TUrutsKbatCdUebbNEFDR6F
McdWYF9fmXp1whapCeQLUv/XCqKs705XvrBBHm1TS0ohrcCtqlvXaGiNprll
XSdKWqFAUDvy6aU7aHu19+bu+lbwMGA6+afYCrHVW8sKdlLikx8R45W1Qgr3
InY5fG0Fq0+NA+vqluhj+c+AvYxt8G5A/tVYtDmqef3S/jR7GyTt/eKYKWGO
Riz4tNR524BujCP3Zr8ZYmRWPxQp3gab53VW5jnM0H2jtARhwzZI1V9NTKww
QS/OoWeaVm2gwvG0lcrOBCXSDFk+fNAGBbvIrFFHTVBv5l7hKp82aMkh06IX
xujiP+NC7cw2WM0TEZOcN0IqqlXeV4rb4A1NXFattREyizqqLlHTBrJrA6p5
K4YoWGKCxDVAiVfdpthktyGat7/FOf23Dbi7Ysefqd9CVBUls7207UDDzr63
bP4mYmfkyq3f3w5zdZ8PpPveRDh1SOnj8XZwfBjGaNV0A0V/0X1yX7UdzK82
izjc1Ue5IgWKpnrt8MjvV6fHIX3U9ITtoI5JO9jENqCqRj20ztH7ScK5HSRO
D7TFi+ghNU2NyZ1oij6dKLMt23VkHpeVvprSDplHRbQjenTR4yVm1+nsdmD9
8pXxdYguSn3RztJQ1w6cz1/Ilh3SRdQ1SjhwsR2yw4ssRi/oIA6WNGaPX+3g
K3MmUIlaB4kY7Ru9T9UBjUVzIRId2ujmVqOjDlsHfM5JrLlrq43uK56UUzjS
AV7pObOxstroeZgv4yXBDgi4c7jnLIs2yj935f1hmQ7QSLUb0/6shVo8kx8w
KXSAPv3c374gLfSlY/flf+odcPtK/I9wKy3EZFMzMG3WAS0fO5abubSQZRLQ
pfl3wKaZRcilIE305HtsX9TbDsCRfLR89proDezEB8Z1wJMXfzd5NDRR1WiZ
5IO8DjArsrLBBzXRwCluGrPyDni9eX3OeFMDLbo87tFp7IDqOttOrwkNxMkm
ZXNptANOaGY2lKRrIDHTSInTsx0gdELneOsbDaSQvbGbe6UD4kuc3nY80UAO
KkXR/3Z1ggffQ+oETQ3k94797nfGToj3znxxV1YDxZGdL3xl74TTkSWXOE5r
oLZn4h0Npzuhc6Uvj5tGA0kRWne9vtAJqenlDznI6ig10kTillwn5AQeGtmu
V0fsAhs2x5U7ARcupo2/V0dPM1/Fr+h2Au++UaPi5+po9dLx/s/GneAYqFLp
a6OOjGpL9z2z6YSH3NvrRE11JDVEduDw6oSVk27n3Pgp+qYeH6b9O0ErvFV8
nomiv3RwLCOsE06pwd5L22romUsGi0tCJ7w7dtzRdEENfacmXkEZnbDqfCjG
YlQNGQUMuzEUdcKCreTG5Q411MZ+P7O/mqJnEHttsUYNSSXQfI1r6wRz1/4E
m89qKFUo5pD1YCdkiUVYl+aoIfbC8yri053wpG9SeSSdsp5ci+fOYifEXmpR
bfyghn60GBc0/e6EmyqilV7v1VB22rbTNeouCExPlt5HYdKKQlAmTRdoDktl
GqaooSMXQj4eYOwCM/efGh4f1ZDOo/Fa1/1dkNWukGmXqYb8KwUnxtm7QPg5
wzvhAjVUs8dpA3N3QQgfj0RJuRrauFbJmsrXBYIed/9wNKkh0SD6M0wnu+B8
sMVHpT41ZNmne9VBuAviqJT1NKfVUAxngsng2S5Qnas0Ef2hhvqMFh/LSHRB
m6P2E9JudcSQLBGWINMFNVcfZD05pI7wvHc2De6C7XtDOj+E1ZGbSEeLzdUu
0CNEH1CRV0fZjpyzXSpd0A2my4GG6ohUbP7vglYXuHUFXSxzVUdHdrI4o/Qo
+T7nDB99q450idvnqQy7gP9DBuf3fHUU4KegZmHaBYkKMuy7BtTRJuu4t+i9
Lphfq51gJ1DOr75gTKhDF2QwyLum8WsgyxjHok2XLlhrp7quKKGB+k7SL9Z6
U9ZPoX+cY6aBGO7p0pzy6wKWbabAZ481EM6N530V2AV/S5YePwjVQNkyErr6
EV3QpW1Sk9asgUhe3vblMV1AR60cSDWngY40tr/gT+qCkpef+J7u1kQBmuYV
i5+6QP5V/M4xrIlqw7KGNPO6gGHW97WqmSbaGt36UVjcBYtuVZ4lPprojuXr
k161FP8j3lS5dGiiuPQxNNfUBfTtjmb9a5T6XT1poNzRBSpvzGlfc2sh+ccV
wQeHu2BKpmWv3H0tdDT42+bH5S54lKQaa3hKG1WYeHzM/dkFxpd2F/LpayOj
8wdulG50AVVPToWGnzaKHpAqbtvVDQXvDwmwLGkjDp6XD1fYu2Ew4iwnXbMO
KlrmObFxuBv448eKD+7RRdercvqp+LphjXtIYFBOF701GxZnFeoGma0jtPGV
uog1TfCnOGU3WVK/6b3ovY5yHpclysp3Q9r7VBMHHj2koaqhpXCtG8iRV4Lt
7uqhoFWXHD3tbvhPLYdpiFYfMUo02j+y6obIDRp1FuMbKJ3u1tGntt3w5fMr
RbGyG0hpZLnD/wFFf8Oge5LrJvJzZxeJedwNTz97il/8chPtrbNYrAzqhpmd
ROYvAQYo+e1mVFNoN4TQhRtF/DNA8laByt2R3SBiYfLO29kQedMXpE0ndcOj
Ut8SZRsjtKOx5+7e4m44YOD8qVTOGMXwR3Awl3fDM0NzDTk/YySzJtTEXtMN
0h3l+5u6jdHjcO2Tgm3doLdwi/WojQnaGE+cVfrSDe4x8t/Lik1ReNbFt9qz
3bA0z7wlyGqGLnq1yBssdAOxN8H0mJ0Zchb4kXRvrRs8C1f/sYmYox/WyDSY
rgcCdB891eiyQK9l+vdHMvVAGEfhnmA5SyTGfLc6gbUHIu/TXj2Yb4nscoJ5
87h7IOjr/imD91bo2+/JiX6xHhhwOxdPn38XFVoF1Shd7AERsuxMlqo18hy8
nFIp3QOP94csqi5aI/aimHsfFXqgneGmgZCkLZo6oap5RKUH8lYi+ltItigj
7I/4G80esPZWNTgWfQ/hh7f+PDHogTPfCtT62e0R0xz9l+8mPdAyYrMaO26P
hnRLai2teuBVafJhL937yO4Cp7+GQw9o+Uq0XT3zAL1bG+AU8OuByXynhoP0
jsjC3PdvRGAP3OY+Kxfg74jE+i5MMb3pgd8esaW2+51QQ15o6u8Yyvi1CtFD
Qs7o9TH5ANukHni2/E5JutIZGbz5aT+V2gMPFt/1uOs/RN8dtCRa83qA6pm0
48koF1Q2TX1Y7nMPPMwqs9iQd0W+Wjk7+RU9oFxISildc0Xc51gaYpt7wGu3
a/Zeq0dI8Xu7jsNkD/yrPEWVGeOODpi4XyLNUPSMA4Xo/vsPTXQJcxss9ID8
zn0xR0sP5JTt//XKeg9MS/Num6R6IuCVbizZ6gGjBh+59FNeiD54IU2UqhcY
fr2d+ZjlheLsrzlwMvRCutwGya/FG1lPbui+YumFzx0ixM7bT5G4eqrkbvZe
2N3nfyx86ylqEaGlXuLtBS79GxeCkQ/6tVQXVHWxF6KdOLx/HfZD1YZOjhdk
eiHs0MR7uhk/FNB+TC8N9YLpNyrO9LwXiP+T95FQlV6gXejWn7L2R0vc53bt
0+qFSdujnEe0A1BxwNSsu14viLPpmMjKByJVW7lPVqa9IJQ8YxmHgxDH2Erw
mBUl/jOjcrqCwWhaOc5J814v0DteiA/ND0auQjvS0q694Hzk++XE8dcoeaG0
hflVL1z2X1HJdQ1FduHqx6zf9AKr6InZOuG3SEL+6+P6iF54bVeU3E96i1pi
6M88SeoF+QjW/444haNQpVifwdReyGnoVlq/EoGMfp+dOJfZC+p1Jt9peSPR
d40bQfPFveB4hKPzyvI7VPJ3kSRfQYlH45Dxma9R6Fmap1x8bS/87D8+0jwV
jTj2pH6/3tELrziiPJv/xqLLRb+06772wkZR2HzdRAKiM3+ZcXS+F4bfk2c1
fBNRD8uRvY+Xe2E1etM7QTwJWVhfKTy72Qta0v8Uy1KSkcihYebAnV6Icvv4
QcDmPdqotbUi7+4D9H7N+JVECgrgCeWIY+6DotHSoJb5D+h6y8kHWwf6QGTO
3+hGVyo66lLarMvZB7H5TyJMqz6i3K7pR4wCfXBsPZc7sCIdDT89O+4m2QfG
P2l6No9mo0Sx+gv9l/uAr8ahwKkyG9mO678Sk+8DpyfqXJEWOYhKwhNIan3w
dniPLGNjLmr5eiAC6/RB381uxy3vPPQm+MNqzA2Kvq+xXbdCPjqx0JGgY94H
YSML1QmkArQaZrqVdbcP9p0wN75RX4hKiL+0GOz74GzxocyHGUVINYZnT41b
H0gGibIFR3xGThq2lqJBlHzurR3mWC9Hl//+q3gZ2gdqFtXbxacrEW3am0Nz
kX1wsUYpsOdiFXq3u7QpOrkPuMIjyVOvqpF5thrfxsc+eFB3+DiPQg0SMZx2
087qg6ivZeJ4by2qLtwnRF/SBxa7Z+uKouvQS7OYpxaVfSD+bvBzs3M90mE5
O1ZVRxm/capdUb8Bke/qB7p0Uvzv+/WSKN2EmHk+rMzM9MFQXeA1Od82JHf9
6fjX+T5Iumnmk5PYjhyCbrdOL1O+vyPFVNXSgQaoOT582eiD0yLcegNxXYhO
ei108m8fsIZG7G1R6EZSTl3eE7v6YYZJbejtWjeKnfMzGmPsh6nIezKTFr2o
66iFyuj+fiiXXTLdPNWHdt1AUiPs/dB+KID7+K8+ZNm6eXCItx/2efBdYUkd
QCLZ1u294v1wsCie6v2TEWQ8r1DaI9kP/JZHfyb5j6IQ/mMfuy/3Q+HJcP7R
92PoV+jos07FflhNE2Mf/TuBBDuKHDpU+8H37maC1pEv6CZtqHG7Vj8sqqS7
6tZ9QRVuKjKtBv1wqyK6Vuf4NFrNFTzdYtIP9Jb7Gea/TCP+xT0czZb94KXE
sqWU/BX5GpX/bLjfD69YNWdaibNIlSiSXvOsH7LFj26NrZDRf0/oI6tf9EMd
x8tdX3/Oo+yCOd+qV/3AIaDkUrvrG2ITjDOtiOiHTKlB5kW8hBRMHmuUx/TD
3YXrXcLOy8j1nd7lssR+WKj/mSSZv4LGGFm4SjL6QfJ89vKDM98Rs8Ii7eec
fjigoELdO/UdyXk0rRcV9sNZV0nOypgfKPm7Z3dBVT803Bmv9TizhmwHvvvl
9PXDFamthZuFv1EsoeNh9nA/mHmahBZmb6AuxTTzrIl+2Hia6+JfsInES03l
PpH74VAwdYjFl21kuXZZJGOpH9ymk9r1af+iiDOHudN/9IOyxmZ6gtQO+hPX
+zv1Tz/wVX5bO2ZOhUWGs2Y/UA9AV57x7Yn91NiYNaA3hWYAQppHro42UOO6
Z/JZySwD8Ej/l3Pf1d044G6BZbzAAOjdnhPdlUWDF+Q++TGcHoDXi8k/u/Np
8VWO92kPRQfgbNRQ3JMGOryrMXRZRWoAcrxNpPwIDNg4NoClGAagboJxi16R
EVc4Pzt37MoACBRK1Ge8YsJuAk4PN9UHQOnSor2tAAse2LaJMNcdAOLowWvj
EyxYvNespPPmALzjNdEtSNiPV720d95bDAATdUkANz6A1W4o8+63GYClRdqx
h7xsOF2MiJ/cHwD2Ham/HXQHseXkOV+txwNwpT3KWG6THdcVnk4t9xyA3zXf
467t4sD8r/hbBH0HwF2XlnD2ECcel2Fl/hc8AGNNoZfyLQ9jKTZ6Meswil+3
+nfbJHLjiG/UWv1RA8D5dzrk4iIP1nn3/W16ygDwL45X4eu8OPfBfBF7xgAc
JK0dEmLlw4RrU8NeOQOQKLJqbDPAh1t+d/Holw0AlXy62h23YxjpZr/f0zMA
tg5VybfFT+JY4dRG+8EBuPZbU2JbVhD/2R0/PzJGiS/tfC7WPoWLc4PO5JAG
4M90QFp/ohBmf/lcnXtpAM4xiouJTAhjRxOPB89/DMBT2X0E1ZMiWITFvsDw
7wBctzIwfucghgNIloNNuwbhoofV96gzZ/FChdHmebpBOPAzXbx09Sx+f09N
lv7AICTTaAhkB5/H3K1n6gsFB0Fx0fJYHZLAjxKPk/hEBgGllS4tXb2EB914
9gWeH4Rjqwy2ajckcYggk6rZ5UE4X6Pzyj9OGq/+22PfQRyEktPPbt/ul8Fq
g3+CJa8NwovPXS/1OS7jfb6LfQSdQXBt1u5cNpPDloYzvx7dGASe3e8aa7kQ
rhMf45gzoszXKou9Noyw59dWg7K7gyBF7fg+yY6If8mlz9zxoMQv4HJ1cPdV
XJb8Lcrl2SB42nOtia5exd50wtq+Lwbh77Wq0fhZRczclVGd9GYQpt8HZfMs
KeG+80uuuRGDUHNLKX34nzJ+F35GrDpmEMTa9PiZeVTxiduZsRMfBoGsj4OM
XdXxYs2y7lIGJZ66hxxJtzRw7glRpj85g3B51ycSJ7Umvryc9ZizbBB6Yzu/
LBpp4evuOfo6XYPwr3D48CNbXcw99Z1g1j8IBDv6aG18HU/Ln2t8MELx7/v5
/v28etiOMe9C0MwgVCmd+qCxpo/F7/9cjJkfBIHbwq7G327grd7zyRnLg7A+
bPTS8dtN7BuVz9qyQcn34ok7w7SGWOXfWvPQ30HQyxyuaxMwwqxmF7xIu4ag
wPt5zB6V2zj2dOHKHqYhqNj+i9TGjXHB56I24BuCiSOzeyVfm+FHPBtP1U4M
gYuEHXWlqjmW87okbShEmW94Nn2axQK3KX7++OjCENRaBMwOp1vikIxN4xdS
Q7DTy2LD/cwK67NIcUTAEES9E3o7YnYHzwyW+BZcG4KznCptRVLWOE16W7ZO
bQjKBjojNM/Z4Ptx0us92pT11lnfGpyzxX8sy8xWDYfgjYx0fpuKHWb7VS4n
5DAE+2sMCepuD/DIjZ3fki5DEF5KDInjcsDx5ZezFJ8MgUMdb7h8tQMW9qnk
sfQdgt3XB2VOH3XCP8j/+pz8h4CMmY+WDTjhYhW5gKfBQ5BWlU1/JdQZy7NV
b8W/G4KZilo7Mp8Lpnelzs2KG4JnBodtb/1wwV2j6G5F8hCsDkZ5Pmx2xQZJ
NYOjmUNwVY5VzjjgEXY6V5fPXjsEpLMdodet/8OW4rzxr5uGgMPHQp42wAPr
X3ziz9gxBI+5k0NzbnliaSlx013DQ7AnvM2WM8wLC8sEq7pPDMG7c8VvuKS9
8ZHLi5c2vg5Bb9HCoMesN96FkwnLyxS+t/6eUfkZXiNSbd9ZG4K+6mP9njQ+
ePaKwdzXzSGwiRaz+dHog5uusZUP7xmGh/5tdnaGz3GQ5jPreq5hOHjX74D2
4Evsqf1FV453GDzlGqgkGv2xg64MKj0+DN1PRL2sKwLw9Rtrh3LEhiEkPUXV
ufYV5jYxr49WGAY/HVv98LDXmNmsKvuQyjDopHMXqouEYCoL7ugQzWFgkRu+
Z9sSgr/e6XPwMxiG81FnNC+yhOK0+/K8Tg7DIEsz1dnVF4ajHeIZVlyGIfJP
BKN9SDgOdPrz6677MEw/jr50WTcC33fNb7/tNwyO+Yu6wwuRWMJT4LFy7DA0
HF60XNWPwYLenpYNScMQ5sD3dhcxFnM9G9NEH4chIvv2N+7zcXjneaigRP4w
jElxp30Licd1QXsG+FuGIaj3c4hYRiIufG1cHdM5DFX9LwnDUkk49U1ZBkf/
MASk6pJ/tCVh/3Cnp8xfhuEUz+3J7O1krBU3I7a1TpmP+0van33A8gly3M7b
lPwJB067iaXiC0nRtKtUI2Cxqm9N9SUVc3zQmZhlGAFxl+vp/UppeDKzzr+b
bwR2Wb+8uKXxCXct7Vk8d3IEBCLzJ45xZuIq4SsqocIjkJbT7mY+m4nj0+oZ
9SRG4H7E9eXTV7KxaUpD4JjKCBwJsjV7tTsXa83SLMtqjYB99xvj1665mChw
VS1ObwQMwk9fbVrJxQKJjcympiMw8Xh/9teZPDwX0xREchmBGPZsboWFAjww
Rreq6D4CHhdF3YweFOLGw9c00rxH4E6edlbLViFOjWxmuRc4Aj8rLr9PZyvG
1m9bXv9IHIGzD09RT5mX4KWAtjd/20cgJflMBINbJZ5oZVwz6qXEK3NXUv5A
Fe6gV9WpGhoBPyqpP9I2VTjTr53t6dcRuEjrvTl4pBrff9bxlm5zBA6M37lX
GVqD1x53hR8QGIU3fzXuzJTU45kSlg2nU6NwjWTawHK8AfdvaugPiIxCm451
oW1wAy506eaIlBwFqRghx0/WjdjVsSfyiPoovFfOvC1wphlvW/dFnXo0CvkP
HV6JkduwzkXD1yIeo2DVPZ/AadCOM6jnfM8/G4UjpVl4uasdG0X8fiD7ahR+
lpdZaZZ34Op6LkXNxFGYfRVRdFujCz/nNVlzbRmF/9pleJgVe/CBgSWVJq4x
qFJ4pHbFYwALIdody9IxCHf+PW1cM4mvJvJZ5RyaAM0nljr5HQvYhec2/5TB
JKQOByParB9YeFGXYVD1Cwz73ukamvuNDxBW6eq2vsBCmKGP4bO/eE9lVNax
6Ck4vC7oEqtBTbQRLx3epzwN/+bb5WU3dhPTr5nGV/yaBob2Hzard2mI69+4
WObCvkIvl5XskDcdsUD76u5Q+RmI++Km5hdAT/RTLvbhvjoD91kPoIQ39EQD
4im699dmwKM7Qb7wHT1x13kGpkK1GRguiXXpS6UnqrF2sg/pz8AWUd5gqo6e
SO66fpr73gwo3CJFS/+hJ3KpWWomv52BQo0VtjkrBqKHok9c/twMfKpy+1t4
jpHYY3THQGx+Bjq0et1TLzESBZyVOTO+zYCSkVrP28uMxJaE/W+SVmfAcpDm
h5kSI5FtO8Y3ZGsGwsqUZttNGImpnwrv3WeeBSXrbPPBIEZiFytZWvjiLOTk
31QsIjMS+U+1bny4NAtRNnrveZcZic6QWXBMehaa5DXSfX4yErlsnUQPy80C
CxX7J7zDSDSvpzpGrzQL6muK5n4HmIgbLpz0ZMNZ2B9o/xzJMhH5xpWGknxm
Ie9WPp1pIBPxZY10lq7fLBAfWzZ+CGEi/vgg7EvrPwuKvFPS5HAmYo0Ds7hN
8CzQrqvL3UhkIprT9QSdi5qF/jKFV9uFTMTU8zeuVmfPgqfSgb8wyUQUeWlV
ODE6C4eFMu5UCDETw+z1A4MnZmFr/LiAvhgz8Z/ONXM8NQvf2Ih3F8WZiV1H
hVhT5mbhxKyi/57LzMQHBcv37n2n5Jf3l/6nOjMx/4vz8T80c3Cu4udUowMz
UUriWSjnuTnKe9DKVzGfmThgynkxRnwO9q8/gOUiZqLjq8xBXok5eJUkwB5U
ykzMmB3iEpSZg/mIbY6aGmbikdAzCRcV5uD59satpS5m4q7vA5+0b84Bod7i
kP4iM7E17VRjoPcc+PkkJrseJRDvDFTc2e8zB+Kcxo6e/ATinl069G+fz8Gz
pPYrT48TiJdv/KcaHTAHxnYtP9yECMRs2t7etLA5SClhuCEkQSCGmj/50pg2
ByU5ecUxqgSiwZHOTereOdhw+stW9pBAZOZ0KCjtn4OGa2uPrrsRiNUHDj5w
HpqDfwdPLi48JhBP7LtFJo/PAVWh6hK1F4G48nNuoJM8Bw/e3bxOfkkgejfv
5MXszAGD37cTYTEEonhdgr0eNQmOZhZ864ojEEkV8kL795Cg5XNh9t5EAlEl
/2Xis30kCIGhS4YpBOLBOPbXNmwkcPfQEavLJBBTnUTsJE+ToHAkT+JBBYF4
07771E9hEsw3TxQpVxGITNZOsxmiJJjR+ynCW0MgOtwuMeC9QAJ2s5p/hfUE
orSSgjKtHAn4w4t5otsIxGX5eZpqTILmuhkFhQ4CMR4Cah5dIcGu/E3ThU6K
nxd6JJeVSECrsfOAt5dA7DhqJNivS4J6UuEEcZhA9OSinnmlT4Ioa5OQ8hEC
8fzB5DjFWyQwLjG9cHaMQIygX2AvMybB9+rqqzSTBKLpuvPeJBsSvG8rCbGa
IRDXWwKn73uRQCAz4h7NMoE4xtB/589TEtSN+vgwrhCINSrcK899SUAcDFJj
WiUQgzvStmP9SZDAtP1j5zuBeLqnka39LQmYQ/77L3GdQGQ5QIjSj6DERx3J
8d8vAvG39nW+mXck8LdcM9H5TSDW9c+c2Y4jQaN+JPX3DQLRaJj66qk0EtjJ
HLRf2CYQ5bmutednkGDd8oN71B8CUehWsLZcFgmU439KXv1LIG6MHTHWyydB
0T6W0lc7BOIEj+XcdCEJIh+88jj9j0CsN/pka/eZBAt6x75XUTjki7SbTwUJ
7Afdl+yoWIiufE//sVST4M+fx6dyKXzbtMUnupYEWKai9AeFhWf0Q/KaSLB8
rnPahpqFyHo8ngNaSeD60cMlmcKbFqTYlnYS0BRLmI5QuIHknD7VQ4JY2xeS
l3exEDMEy8/e6yfBKQH6E7YUfnN3T/HGIAmqw4zvhFP4UZry5WcjJPj7y4uq
isLG30LqCOMk6OEzX56lsILwiFLUJAmCYv+e3bebhXjmHl/3iWkSzMZeaT1F
YbbMO3q5MyQg75wvuUrhreWscVkSxf8r1TumFP4i+tuseZ4EFxLnIh5TuPH+
5QWdRRIkfY/xe03hzByf+1+WKfF/nmpPpnDoj7ZfNt9J4CL46U4BhR+fZ3P/
/ZMET7j+6NdS2NTp1u6nvyjnj601toPCigWJL5g3KX7IH5IapLDor3nCu20S
xPtMnB6nMLvE2bDjOyQouXX0wRcK/3Fx5c6hIoPz+hDjFIW/Flcmyuwmw7IQ
w84EhVs2aU417SVDjneh/AiFs6XUsrTpyFB6cuxLD4XDH7+9MElPBpef7j1N
FP6vbKzUmokMlXdiOcsobP73GP5FIMNEvlxhBoWVLts0ebGSwS/rTuo7Cp/1
yFVjOkiGyRGuVR8Kc1Rt9kUcIoOjmUGgHYV3qNAtAS4ySPGe99Sh8Azym8ri
JsPbkPdNEhRu9e60kj5KBpW5EksOCkfsMXLSEiDDF/HlpG7Kfu2YHbrQfYIM
Hb2KhHQKm9d2raufIoNx1OyCF4XFvIkuqiJkKKlm+nmSwmFTfyTaxCj6xZlH
f1POzx+5wg2l82SQoCsvq6Vw0z/BR4qXyDCbrK2oS2GR29NSjVJk6Hb6dZGL
wqEVUdtXZMkgkyQdNkY5r8buzO5ETIaCr+SUGxT+vfXT47IKGYpSTh63ptSH
wc1PcuVqZLivw8bSSqmfms+W1DKaFP0unfETFH7lOuwteZ0MI2z3j3ZS6u/E
rwofcWMy7I3PUJim1GeArqtCnikZVqjbFLko/CP/LO05CzIcGokWUaXUc4Vj
sp+oNRl27edMSaLU//XvL/xPO5GBS05I6cAPArFMg6jy8SEZtM3d7fkp/YI/
+w+joBsZDp4880iY0k+W7exfHf+Pkv9siNxZSv/xWdR5zetHBk0zyYi/8wTi
gjKzVtxLMtjSnlv5SiYQNdIbWY8EksFh2PtMPYlA5LaWCj0cQoZTQcjEdZZA
zCcdDWePJsOtB7SfEr4QiFxXh/XexpLhtkCgwm1K//NMCeFgSyCD2Xhe86EJ
Sr+32PtufwoZ0nfzvnIbJRBnpheiGbPJkDavz0E1QCAemChI3FVHBpbax+6c
LRS/GN3dixrIoGffbmvWRCDSS8vr2zaTIcT0quWHBgJxV0QP00AHGeKN0t14
ail+aa64fhwmw+73OmI1pQRiV72gusYKGazfFWkvp1PWX1s5tfcHGUwP7BIY
/kggNvEX7SlZo9RLPhttxQcCsdLjSsmxLYp/7Ou0D5MIxExJ0+O/98xD9Zvc
vXHvKPvzKWo7hmselGR5PPqfE4h0Y6YDWjzzMK+y0mDiQyA+oz+dQ8s7D9+6
+4XI3gTiY6tiywfH56Eq5pP6V3cC0Zqvv1tebB5IZO8DbxwJRMW3zKnfrsyD
/1v6s8OGBOJedy8dyQfzkHT9hfxeEYq/3xc3Kx3noWBvnxAT5T43t9SPU3g4
D5J7iulYBCn9XV10QfvxPBylu5xCQ3kPPOMf97DzmQeq8yd8ig5S7rOmS+lJ
kfPQXPzWXfAP5X1xYJWauWYepBuZf6rUMxNzn9/6EFo3D/y5B1kLqpmJpn8a
VA43zkNieZwcRwUzsWY2JlywbR7Ilm2dnYXMRO9i5TPEgXlov1rYuTuVmUht
9EHfdWEeWq9IHPN8wUyk+miUNc26ANYKL2q7FJmJDYuDdnEHF+CDo7kplmcm
BohpihhwLICMT5B+JjATDxUTP/XzLECEDJ+G80VmokijYHqT4ALoZCa8rjzG
TDSY/ZGSeXkBmMqnXyn8ZSJ+5nse+8h6AQ6++aQqmMFEdHiXFchaswDBy5xr
rzYZiUV/3j2vqVuARykZL8op79E/Rr5eDo0L0P/xLR1piZH4/Jihc0/bAhDc
F5tOTzMSozPoDUMGF2Bk6oWXcwsjsb7CQph1aQHMjGkUON8xEjm+Hm7dz/EN
8sbvUqdcYCSWC/nR7bf7BkE1F5cljBiI+5UchL2ZF0GlycDDKmofcexMV69b
2SKU3aQq93xAS8yOBYEZoyUQrVczLJHYSzTMurifZ2cJfM1Fxjy+7CJ6+iR4
jaUtg4uNxazKeSriJzJPFLPKCtz6ePJBotQ29ovxMZ5QWwH/p41KV49tY3Ot
peOZmisg3MdtssCwjbnLyrJV9VZA/7mZsdD4Fn4ZdKshwHQFyo98uR/psYXv
XIz8Tu+2ArtahQ4J121i/mdsirQpK3CydeqJocoG3rn0hGkwdQVim+eqB8U3
8PDS156U9BW4uHxdUJNnAwfr5Rkq5KzAGbaTD9Hyb/zvtJajT9kK5O7cmOAI
/o3HuoNid/eugCmjheDH3l+42Pe3WW8/ZZyLfoqj7BcOlb59KmloBezFl8/4
Jf/Cyu9F8vHEChCOiSZYOP/CJa7tzV7zK5BgX17IfegXDjtzIUhzcQXYZJ6O
vPi3jh9MR+vwrayAAc3utl+kdSyoYjtZtbYCtxNWxbuK1/Ee6r7k4N8rINBa
USKTsI6/FEhbG2+twIdkWqGPL9ZxmXWSqNjfFXD9tB1w0GEdhx9lWP/3bwUU
n7eS/v//zf8B2nTWsw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$7237#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
//9/83+SRubn
         "]]}, Annotation[#, "Charting`Private`Tag$7237#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
xJ2b48B6oYWb///71v8APAUIlQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$7237#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox["\"x/\[Lambda]\"", TraditionalForm], 
      FormBox[
      "\"n (\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", 
       TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {369.0444641113281, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Electron number density n versus position x/\[Lambda] (\
\[Lambda]=10\[Mu]m) at varying gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\) and fixed \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V, \
\\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V\"", TraditionalForm], 
    PlotRange -> {{0, 1}, {-0.02524078472910864, 1.8782770477833785`*^15}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.15V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.00V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.15V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.942184585792087*^9, 3.942184733636518*^9, {3.942244261327977*^9, 
   3.94224433208923*^9}, 3.94225387675043*^9, 3.942255655940537*^9, 
   3.942268479583602*^9, {3.942268640038735*^9, 3.942268661189281*^9}, {
   3.9422688003751163`*^9, 3.942268814124675*^9}, 3.942268936863175*^9, 
   3.942268985747095*^9, 3.942514594034531*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"f81dc2f9-1ef4-424f-986e-317d6732f988"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwV2Xk0lN8bAHBbiuyimReVpJBoIYU8da8klIS0iBISkSKUVISvIlSSrEll
F6FUqGTfZuxpoYQZUtM2Y43f/f0153PeOe+98yz3PueMstOpvS4CfHx8j/n5
+P7/aebCbns9Ymu0QUhkyxdBKSyEKe9+ug5kLNNNVhWRwhvSEpKL6caQKk2f
OiEhhc1bep6k0G0g+gMr7zdNCts5j1fcpDuDi2ZFo6CWFP6k/R++TveFLgGt
epX9UvienGX4NXooqCasabfKk8LBC4pXXaXHAXu95oUlNtJ4/4H0xz9/PYDR
vKSe0hcyeOFcsP2OJY9h2Lp3m/+sLFa1+sF+G1kC1echPERTDvu3boaEv8/B
dmzz27zD8nhxiXQfP/8ryHrj61Z1ZDF+OoCbGYZVkGDTHN2wn4a7TYN/Xd9R
BRXeGmW77GmYV1Apb7G3Ckz2nIphONKwXuDmo/XHqyB8dx1udqXhMllt3uub
VZBveC0r25eGnxtTy56wq+DAxt2Rf2JouPzRT5+4uLew7vzA0opqGq5yT1E4
MFYNxrouC7gr6bh4xMPDgVcNsUyaX646HT9w0395jK8G8KxWvqMmHYe59hz0
WlQDxzOHfN+so2NTJ+nEK4Y1kH3YYr+7IR0zDoTRCqJqQHDn9v49VnT80dRT
TnBNLZRLxUSdPEfHLXUGLgv0amHDpaix94F0XGkiWiq+rRYOdokI7LhIx2nG
mTY021rIzNA0p12hY6etX26tCaqFSEbz9rQoOmbr2crsb6mFa5kK9kZpdMxd
uUUy37MOmhNCVlVU0bHRAKq7FlAHRx4NbJGsoePwFNNLblfqINqn9bpDHR3L
L7LhqNytg8LV2T1/m+h4I78HI7G6Dir8N/LzddFxwIeEmAiFetCb90gxdpiO
Z2L+Sjo31IN/gMvKW/MpbGw+Vbetsx6Cy0v0IkUoHCXMd3lpfz0wPsieuryQ
wkpBC3++/1sPTrT6XU6SFDZyX860WtYA1f/uvxRcTOFLxntiwb8Butbe/1yu
SmGByVwpBdVGuLjy6VOhbRRWaEF/QLsRQquqIAxRWCe9t8t5cyO83BluJGhM
YZed85MKdjXC2KdnSeMmFK6/66SK/BrBuzG28Y0FhWP06fon6hqh5OnVnA92
FM6SKFSMbmsEnMXnvOEAhV8PmMw9+dAIcgPR1yMOUvj3Nd/qGU4jpPmkaa8+
TOF9Hxi7Y2lNkBsd8MjKicKKF8KPPTvRBKo5h2kqJymsu0fJ5KNPE5zLFs63
8qTw7hUlavwXm+DjWENekBf5fc1fvpvdbILrB/zGWrwpPKC4JaDvRRNEO550
tjxL4eyKP1HzxJpBP2/RZFcQhatuXDulId8MR3pHlT5cpPB7F+W9lsuaoVg5
JPvTJQqLSVguvqvTDP0Gf/+8D6awt0NOuubhZkD6YpZPwyi8ce7IU+uCZnB4
u2+EE0Vhi12vQ7aXNYPi3AeZuusUPpa01FKvqhm68y4+T4qmcKxeH4vqboar
JnuDtsRSeOTUIfrAv2YYt2npdbpFYb7KF0Md81sgtb1zWDWOwvJi1JMa6RbI
VD17apgYZb0zy1ZtAZujDb8d4ymc/Nn2gveuFpA4+qVc5y6Fn2iVmjrZtYDK
1eb0r8T1FxbJ2RxtAcddv/liEynMpXXk651tgfrxnWu+JJH4We3pn01ugbB7
bZtdUinMX2WGro+1QK32ef6/9ylMk8qRuMRrgc/U0oDzGRTWchD54M3XCsM5
pa6zxAen6nxsFrXCqVv6ubMPKFyyfvtDBcNWyNx+oPXzIwo3Xn5wWtykFS73
GfJbZ1L4c6ug0ZxlKywLXpVbRSzuUdU9cKwV9kpmHUvMorBrBizIiWwFL7tb
zqtzKHzhV2pn0u1WUBVjW1wlvgWz966ntULku0u5g8SvP5RvPl3cCpqGy5tu
5VK4W11R+FhFK3jSBKNYxGP+ge02da3gE99RtSmPwvRF+h6bPrRCXjbvRgfx
Wqe7ehpDZD+HVmgo5VPYpHBCUJHTCoPD43rOxGcsniXPCTAgwGtXyShxRKL8
iV9iDLByeLxco4DCaeyzul/lGRAn5S98nLg5VKe1VoMBhbtm1/QS60s2CdzQ
ZcCV1BfvZR6Tfrh7VO/QVgZs7TC/upNYfsWEh6o5A/7G3d8cRHylIPoex5YB
accKv+UT/9yk2vX8CAM2xR9P+0Ds8PalSKgHA/IOvrQRLiTvf8c+QwtmwMAV
keq9xFlOlzIHIhkQ6v8jyJdY/rvcx7x4BjRS2zffIg71z5PyT2fAy1YhXgHx
L368fVseA441qZbUETtE9Z5b+IwBX5em+3wibpb3Luh6w4ATT7x1fv5/vXTh
r2nNDNDZGsOb+/96q1MWu/cwIPHwxHOxIrLe0w0WOgMMEPLLuihPHLq18fLs
GAN+NCUbKxH/bjxSWj/OgJ8BHQuViQtzpn138jOhxNO88/9mcUxiCoSZMHta
KHUp8RLdm9myYkzIWTHnRhHbnP/0NkCaCdnThroyxJGv1Po+yTNByPi1wHzi
KiHfCaTIhPfKUW0TZH8TO1/JZCkz4Wjsg3QWsXaM6BrxVUzoPyrh00Hs2mm7
44wmE4qAsb2cOIWefrRnHRNwznf6feJOh7FAQz0myEx6c0KJFz7Qi083ZMKj
g0drnYnRSEihMGLC7c661G3E57RaGz12MOE8LghQIC70oQ8xLZgweXCpzW+S
P1aZ85zuXiaUPVy5rpZ4yexjepIdE+zDmJJ3iG3x9Aa+w0wIW6/x05k4KsJk
t4sTE1rKt7VrE0/KfArR9mTC597hpHJSX2v3q6XEnSHrV8ZduUjsmuLzbNKf
CWtWbPPcQty5SnTsbQgTXlr1mzwh9VtoqGe7P4EJstYucgGk/lnBIacqUpjg
HqgruZx4SV3L1eUZTFhfmr+wgfRPlJVz5Vg+E/LkpsUkiN1cb6wKfsuEVdcm
N/hmk/rP/bhtuJ7E2+HvdmHi7p+r7M1bmTAa7HfoNuln48DKWLleJlzdEnsj
h/T70thvk9k/mDCxqWZN0UMKVx69lP3kD4nPu9seOsQOG2QPvJxgguGNV1Kl
5DxJ7tYvaxZog937k24UkPOGpnTNjyPfBpuWCZ4OSafwsx9KKycU2mD/r5Xf
f94j98froi4+5TY44V3QZk98+1ivjszqNpjffK5TM43CMjlqf3SgDVKLl9Tk
J1O4KLD8/hbjNqiCgIj5xHt27dlrsrMNHOPcSh3I+Rjz07/IzroNqlcVW8wj
56eYXt2p88fbQNwi8eyGOxSeV+0y9iqmDXYeknsne4PCD25PJtXHtYHMROxO
Y3K+Gx+/bt52tw1COkJWnYmhcIhoac5ARhvkrbujXkvuh9k9QifmlbVBzLod
FpbXSL1+uj9k9rkN/FUnDYZDKPxtvL+va207KIfoHlc7Q+Gnx2OqzDa2Q121
6Ykf5H673GP06JVBO7QVuHkWnSL99yzFM9ukHazWGwRpkfsR+R2auWDfDkxp
mxohNwon/u2mr4hoh55LnubLyX1r+qvF5kx/Oxz52Tmjsp3CskeDNrEG2+GE
2G7+SEzhPqamov0o+f7O94s4ZD7wLYz8up3bDnd653kUGJH8n9p5hr6wA17s
a/4ssonCvO/VMa83dsBoza/DOhokHqMvGyWiO2Cji4/6ITEKe92xVHG/1QFZ
cz36XqIU1jP+GliT0AHROs7hFxeQ+yJFdM2FjA5YkkBrjRci59OeAzEjZR3w
Z88y7UczZL56xrOu/toBLZceFm8do+PeK+s+ndvcCSv/bWl1a6BjCaVMzuBg
J6yp15jLJPPd1n1XPn0d6YR5QgvBgMx/Z2IcmwZ+dIL9L59NzX503M1Py/w8
0Qn1bL2DrNN0nDoc4fBRrAskFCTdBdzoWKvQvaVDpwvGjk1tbbam411YK7cq
tAsSFdVpxWQ+jTpR6npvRTeoNO+I+dVKw6Nb8yMWanTDiYo/95410fAO2sMc
P+1uoPf+tzGwnoYF6uJ+WOh3w1OezK+pNzR8boWv36RlN3D7Qis+ltCwa//6
8L2B3dCw9n6oRiINb7MtfCjU3g3xfi5+XCcyf2/NHXS71AO3Tr/2u/x9MfZd
X10i//YdZBg6pz2dksf9BdWRbcrv4e3rkf7GTjk87d6ZpH7+A0gOya4WTlyE
V2+bP+v68iOUeuo4dRyVxTvuKx8vWtwHFnFb0Es+Geyv5Lj8i30/PPU71/qq
QAprjtku7Nn1GfKaRbLi30hgWcmfC6qnPsMD+4u7On8vxEKvkh6rJH8B3fVC
d52dRbCHzsteEfMBsNri2FRTLoxzdzrdq+QNwPaD+g9kzIUw9xslNRz/FS6I
1bZrrBfApdY7BOOMB6HYpPjNeTU+HGFeFqa4YxAGFlGMo8p82B6rL3i4cxA6
bCObLCg+LLBhofjT3YNw7mR0gpYYH94tw5B/t38QSmrbjuPPc4jN3Keh6DkI
KgmRw9Gn5xC129Xqwe1B8M0P5G1OnEWXTMPSSoYHoY/pqpog9A+1O7jZrx0Z
BHZe8YrSiRm04qw5Pe/bIEB8ReD7sRnUmC59K+PnIDx7YGFo1DWDFk2nhN+c
GgTpj9W27o9mUFb+U09viSEYDpvcZ2c2g5gybAPNjUOgL/Iw5k7CNFqu3jSR
uYk8T8ntqr4+jc5CQamKwRCs//G8YSpkGlEnfbUVtg6BV5BW7WXPaeRcw6ci
ajYE3+7X23HRNJrwp4uyDw9B4t1A6SucKaT8yexdRtgQ5Kf+lkCWU+halcFj
24ghuOgdfeOp8RT6nakZPj9yCI5uupulqz+Fqs5I6HjEDsFI6cs0a9Up5Lyg
PWZ90hCkhrQKSs5MoqwNB3a8KRyC+uMbV4bnTiKta8ef9n0YgkDXBZZXZSZR
/Kn912P7hiBrv9w7W5FJNGez0xl9GQKGyYdda/gmEXPpaplHw0MQ7MEU+fd9
Ap0u/eHp+WsIbt5wE13WOIFKPp9VnREehkSZYHu/0AmkrxcaR18/DFYtmbJn
+SdQtxN9Y4rOMBx+F5euPjWOfKILepbpDcO7krV/Wb/HUd7QO0rNcBja7MN+
BA+OoyVxa9I3mgzDCRzrtrp+HAn86s63PjgMVxyqf9neGEdNOep110PI84jT
PYtWjyO37ko36bBhCHec3DxPdRwJCdiI3v5vGPbZK9+eWzKOjA5c3JUcNQxu
KloGMrLjqHB+R0dO/DD0rH/u9Xiah+KcL3yuyxmGrRcjHje28pD9EsYkf8cw
zFtuPH79Ag9J0M+UvuwahuJs+9UH/Hnojazc6bPvyPsO/zNde4aHVoocYrM/
DcPQvAoTATce4vwZ7mawh+GyWaWvrg0PhTTMFqfMDoPBjp6OXi0e0qlOP2XH
z4Kjb8zMnDV4iFVpvFpaiAWM8D2vp1R5yKLk2v1QERZs8FMqNFfiIbk0+Rse
i1hQMbD9TZAYD2X5anlt1mBBnGXzE5XvXHTwVJv6H00WGO+79MRrhIvE3X2H
8rRZILzasbpmiIvOOL6wX6bLAk+5juUJfVxkYGZiPn8rC0BmIauFyUU/jEeE
3yAWrOh/GXeuhYvuQVTV+e0sGNBMsl/XyEVCuu2bf5ix4IPNA6Oat1zUutRB
rcuWBQlDdi4Xn3HRZYp/MHo/CwJFxGavlXDRBrkHaaaHWJAcLVOWUcRFCaKj
8uVHWHCy1PXWZC4XOXHPzsvwYMHf5IR/G9O5iNt4fcA7mAV2wstNJ69z0ceF
XW4zV1jgf8KS9j2Si6osFDn/hbMgUwGHf7vKRbGtOdOpkSy4XhG4ZUE4F2m0
1y1quU3Wy7yx8s1FLpKSlUzan8AC6TfHfosEcdG49T7lwUQWWHcUOx4O5KLq
rsE102ksiDb3X7YigIscevl3qOeQeJQlbF93houMqZ0tJXks+HLgvBrDm4tW
H4q13vqYBdnPWY/9T3HRxMclR+xKWPBQ4UU++yQX9Sm5Dg88Jc/zqlYUeXBR
jUP+Sa/nLNhHT90W6s5FNz8bnAurZMED53FPMzcuClC+Mif1hgWDUYIXtxzn
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
/jtmPjEtie8sXcidm+OAaS9N8v//b/0Pi6sS7w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1:eJwV2Xk4lN8XAHB7RQgzsktRslaUrTp1r+zZorSpkJQIUVotRYXSopIlRNmy
U2qsY806Y00hMWNmkEmLLH31e39/zfN53u28955z73mfUXE753iSj4eHp4+X
h+f/v1Yn2fQajvPOh1VCb8IOCWIBLOf3RVYfzv9xDRQ+KYj1UuKTSmRNwWtg
/aZH5wSxdXt/cbKsE1j41D/OuCmID3j8qXwo6wGzYufojfmCeEj3Fr4rGwj9
FPs2IX4hnEq2i4ySvQlB43YjbrlCOGx5yYY7snGwJL9X/+/CMuxyMK3g+0wG
8K7SmtRoFsYi/8KOmCsVwMLRzOo8O1Gs5jDNrosuhbLc8xb1ueL4YocRxP96
B2fN9U+sXCaBV5dKDPPyVkO1wjmhtcKS+M0obuvcToX8gkatjXxSuM8ibOau
ORW6W1X35wlK4dn8KmkbRyocyT2trbtCChtcMTrRfIoKSdm1XzVXSeFyKd3Z
modUqH9602yFkhR+Zyq3pphNBb8HFhv3GUnhilffz8fF1YFF72Clgq8Upp5J
lj84VQ+H7h975USTwiUcb2/X2Xp4pSlFEumWwhlexhR3ngY4eHCjdXWvFI7w
7D/kS2qA63wjkiqfpbCFm0TCje0NUF1uNvuBKYU7D0bI5Mc0gGwGXCtckMKD
Fj5kfu1G6PK+o9G2loTbm0xOLjdoBMtPkVHGaiRcZSZcJrq7Efw2CaS+2kDC
KaaZTjLOjVC5tJ5zUYuE3XZ9faR9rRHSNJrGlraSMNvAWdKlvRFS+aQXki1I
+Pf6HeJ5Pk0w+vNqg8JZEt45ipqigpvgAu/QZ19fEo5MtgjxutEEGR3NmlV+
JCxNcuKue9YETZHpQU5BJLyN17szob4Jurs2pRy7TsLBn+Njb8s3g+3x1Pfc
WBL+G/tL3ONDM9zrPlb/o5CETa0Xmnb3NEP86oLeiWISjhHiCVX+0gzMbWKi
I6UkrHhN5PunX80QfJ46WVtOxHNmLc1hzQf47JJ80L2GhENM7e/DxQ8wGZ10
XaGThPnmc1fJq7VAXFihk8cECcu3o5+g2wKJipVDjEkS1k8b6PUwagF6Ruig
2zcSPmm5LDF/bwvwGxUbHfhOws3P3NTQhRaIVIv2Upkl4VhjWePTTS3QInHT
woSXjLPEChXu0VvgIP8i7yM+Mq4ZNftX/LkFNHfc0WTzk/GPqMD6v9wWKOt4
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
2jax4eJO3VcrQ4nx2fVmzkqPDUpOUwXhkRTU/E/9soUhG+TOrLE8HUdBOsdG
jZuM2XDnv1DVT4nEfFUlLu7ZwYYK7WnO83Qif66JXcOIDYlMkWHVUgr6s/Az
ZKcNG7Ze23xlwwAFHTmUt6vSlg16tdE528coiPrOk3e7AxsWtXPNM79R0L3g
gXCj/Wywdcb51/gr0PrZqgj942x4fi22bqteBYpxDjYrcWPDNvGHk3+hAv0o
3bxsy0nifZuTA+X3VqCq8xm3dc+woe31sfpjRP3vn7kTrRHIhpSbPEGi6RWo
wh7bZF9gg0F7asnT4gq0tvDvSvVLbKDIbyi7Qq1A077n7qldJ8Y32d3RcawC
RUw5PVhzmw2xDraxeGMlmrAWc0yJYsONwd6AlyaVyD63SVLpLjHffkfZ7raV
SOGMcZz8QzaMrxSSmAusRKUs5afSSWy4/ua09+3GSiRnPnDg8XM2ZKn3Mgc+
V6LQVw9lSGlsUFcs04qeqUQ2JwUTJF6xQaHSc1BMqQoxRieSVhayQcT8rVnm
lSokNVz2gq+eDToepJcRltXo3spr1942smH+z7KPHqeqkbCJqcvZD2x4+WFF
X2VENeKL7xLt62DDhysvp77UVaMfDtzg7AE2fIxYI/h3bQ2iNajb2XPZIK3L
8RYtqkE2v7gbBX+wYWw+1Xm2rgY1r30r8P4XkR8F61au7a9B1SF73q9bII4z
KJfxUg3KN3JT+yPAgWT7yfZ3drUoJi9xMVmOA/nj36O7/tWi5YNufY6KHBB8
l6Avt5qKbgprFC1bw4HYt9sv5upQ0ZVT5Z7+ahwQdVeLf+1KRWdUeummmzgQ
d2l25TYqFVk8Fsua3MOB7aeietuf1qH6ut7wVAsORHvfuTReUod2/Ug66mzN
ARFVl832tDpkYKcpVW3PgdLQ/a0ywvXE/m1x/eFhDqylx+GYsHokeC3Mycif
A8OiXhOnQxtQ6czUfPV5DpRkvrjwIKUBeXi6pJhd4EBY0KivUHUDqrfTndh3
hQNuuuwdn5Ya0M21QyG+ERxYTL0brR/eiASaDXPTnxHvm3dSRTS+CZVuz7DX
SOJAvEKMpUlFE/IoEp8tfM6BSM3r2ypHmlB9wviuqnQOPKbWTVZqNKMbPnF9
H/M48Ksn5FYltRnxSX3nFaNywPgqj6AwfwsqvnU4M66eA088lQRfaLUgt7+N
NvJNHFD+cKju0f4WRGUmP1Vv48DsFvfRiNwWFF5urY37OLDBJu5A/sFWxOua
6RI8QYzn+pXZh5raEE+2a8Go5ARcqVPsgolO1DjV75tCngDHUaY/SZKGYjY5
6ByRmYCFo5UbsS4NrS7Heb2KE/Bbvjrf7gwN6TSp5zarT0DfYuQ99TEaOsL8
8Sp/5wRcs+Vf/+MLHb1TufX88pkJWNy72txHqAddP8njauAzAS/Vfb/3aPQg
0+xLir/OTUDhiWBWsF0Pom06m+QTNAE1NteLg571ECuHQ8Lx0AlQNmpeizb1
ImlX+SdmTyagn3YoU/F0HwpIKLgrSZ2A2ntfig4vG0Bv/ybcotYT8a2TpLpv
GUB/XSPDApom4KBnd0D60QF0a93RoK62CdD4saT6oXQAJb0WPvqwfwK4JdmZ
2Sc/oYaqk1qS3ybgyO3emET6ZyQzJt8qITMJ0kG5LQL0YVSpeXu5hO8knCl/
ZXa0aBRt61nd/tBvEhbsVtjtbB1FhVczH5DOT0KBsIHGFuYoetHeKCcTPAlT
ewyXOcqOodvnBLWVwychI+3yer/wMeRYEu6g/WQS9A1sKkkuDMQyvpZgWTUJ
96NUBK+tGkcSVgFa4WJTwH35QsGkmIMGtWndlyqmgE/0D/em1gwqfA6qDNdv
0CbuOiKe+hsdLdgmobj0DW4vsL7ctF1AoRFpYYM50yDDCG6fyPqH8tiKiWI2
XPikfk/K/wwfvp0ccXzYlgvZu6peKV3gwx6O39TyHbgwn/xIvj2MDytUVBTu
PcAFK8fviVrP+HBU7OHGGDcu8G0ufvS7iQ97bXs2I3yJC74qd3e9VuPHa2+S
LJa94kJK/vu7j77y4yXDq6L9WVwwjTTy3v+NHw98G+t6lcuF+jm+ctl5fnz/
QMlRsyIuvHmg9CBtlQD+p+F4PqKCCw0fxYfKQAAP0mOf83dzYTMyLP+WLIDL
I/+4d/dyId6Q+7ksWwDHmRzbmP6RCyafb229XiaArV/qlKJhLhTN8FwVbxfA
74PbP4RxuBD7JXxG768AfqK9NdZhigu/tMuP/bdMEPuPJjmpcLnw1k+K1Sgl
iNVtzn6p+cWFOcOhLYc0BbEAb0/G/T9c+HpC4fs6A0E8UmZy5vgCFxya15Z/
Q4K44ky67qb/uET/7nLrra0gfqos8vvfPy5Uea0/9P//U/8HkZ8UVg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 1]], 
         LineBox[CompressedData["
1:eJwVm3c81f8Xx41KWRdJiZSm2aSicrzfV1Jkl2RkJzJTGZHZQCVJhIbSkOys
Mr723iN73D1QGVHid39/3cfz8Xh/3me9zvucf66snYexIw8XF1ciLxfX/3/P
ONI7KhjnNLTuNtFCLs7hVcTNnqOSKqD7UMrhicccPvQyITlPUgvkpEwH34bP
Yd2WvtwUSVM4tmUxrS5zDps5/C6NlXSAlV4PaUHeeTy87y7xgaQPiF/TEI3+
NI9fbTC4EykZDv6m749qLf3GIWvz9tyXjINe3fCxG0l/8AXz11k/fr6FvbXb
9jA3cxEFVkIsT8lkwW7x5L9XU3mIu4ym6FVR+TBu6xwetryKeLNVDRJmi2HV
SavlPhs+4sZ80RFu7nL4ON2pw3t5HbFggtjcdrwS7m8IfSpqJkDs1Qn5+eBU
JXSd1aBLWgsQ5zPLJPSMK4EiWB+/xVGAeCRAzbb+ciXYr/NdkbgmQCxav2++
IrYS8ij/6jseChCLtTZvy6VXgmB/xEPHGgHit3c/rsXFVUGJTWbhwl5BYqVL
ipQ5uxrGe/PuOc8IEvMYrq7W89XgJyTl0LMgSHzrrP7VnqsGRpxPdZ5YFiRG
OPVddBevgT1f82251wkRdexEn4cdr4H0PaFyJjJCxDbziE2Z0TVgvXzt8DYd
IeKQjtsGXuVaaHvA99gsQYjYUnfMce2RWih34TFSSREilmnzfxFCtSCw8V+A
YKoQ8aXWe9NN52ohLQ8LZ30SItppjj9RDqwFD4Ew3tIyISL9yDmxCy21cPXr
tv1/SULEud0nCJ/d6mA6Zap2QUGYqDGB6yJ962BTceZM8j5h4p0UndvOYXXg
Y3LnyTEVYaKEuOn0jsQ6KKo6tsf5hDDxMLdr2/PqOuiwOO8fZCBM9B1MeHRP
qh7qb6jmvPAWJi49miU4NNSDtlV+9dt8YaKW7p861F0PlhRjWlyRMDF6DVfw
1tF6mN8hev72N2HilkCBHwOz9SCV4reeWM3xx2V7u9G2Bhi7vG86okuYeFvL
MAZuNgB3q7Lawg9hIs/iJxGpXY1wrvgc5e4eAlGqBc/Avkaw+en++54Cgajy
ur/HQa0RWlbmZsOVCUTH03xJmWcbYb+ceZbbIQKxPtFuF77RCGrcAkI8QCA+
UpdUv1LXCJX9S82q5wjED8LZ0g87GmH4GxMoZgRixYT2Su5gI4Ts53vy6CKB
+CvSp3ppuhGemcj1dV8iEM8PtunHbGqCzPsD1bIuBKL0rTv2hVeaILXi7Yfq
QAJR1XCL9tC1JjhTPt8hG0wg6u/Ml+MOagIx7cAOv1AC8Xbz+OSZ2Cbw3tpr
uPkugTghfcJ3pKQJritWam6JIRA/ls5ErxZshpZqMReF1wRi5eNIDwWJZpDc
Wp6n8oZAHHCUNTbY1gxlWZONamkEoqCwwcZElWbYRO64pPKRQPS0Tn+tZNUM
g2PcEqxsAvHwik2BSWYziM/En7EuJxD1zlaEnixqhkcur1ME/yMQ7ZO2Ghyp
bIZVtVTml0oCMebICG1zbzO4Lj7wXqwhEBkeFpIT/5pBWyJcUauZQOQqK6F0
8bVAnOiTk40tBKKE4ObcGtEWeFfYdV63jUDEH76f+birBbj33bLS6CQQk8fO
3fI82wI+ezN+0voIxNy9X3TszFrgZVDo15P9nPrcEt9gatsCG/ha/V4MEIhz
m7o+H7neAgyLwE7NYU7+jAxHl5NbwO5zNEtngkDkrjyDH7BbgNo07O/EIhA3
iaQL355vgY2pe5yvsQnEvdbrBj25WmFXpenJgEkC8eKfumum4q1w+Il1a8A0
gZh/8GSa1PFW+PA7SVxzhkBsDH7rJaTdCuby9v47ZwnEsVZejRWDVkhwP9rK
O0cgCrlW9k7Yt8LfSDXImycQnd7A2vSoVlCVEkE9iwTirZ8vupOetkJqeLHo
4z8E4hNYfvXgZSt4bGG0nvrL0dPgNzWvvFbIIisLv1siEHvlpdfYl7bCgZTp
R2f/EYjsmwGdpnWtcCIx5t80hyXF1V2PDnLOl/cm7VohEPfbJR5RoLTCs+0H
m4s4rJ29wCs93QoiKexrO7hEiN56hckrPG2QthP/+Mjhe88lrvwUbINA8bfW
DA6/pF9XJUm0QUWtK97NLUJsDldprVVogyHemSsJHFYnNPE8Vm2DLNMsiU4O
f0i0PWKh2QZX72vWrOURIUrsXHDdpdsGsrrPrh/ncFjmw1fT59qgWTJtjxuH
fxzd1VNs0waOepaDzzlsXfV1XbhrG3wXyY6p4bD6d7r3ppA2EFJfXhHl5dxv
d/v9RFQbZCuTig9xWGJyw1BGfBvMt6tdN+Zw+M0MkZuv24AWvnjAncM/uYkn
UUYbxIRs/nGHw9bR/X4ChW0g0vs0K5nDzRKemT3/tUG8s6NnFofVX68hvWxu
A9v5sIPl/7enmLLRpa8NatdPzjX9317BIT2ViTbYr5RS0vN/e5qNwcvsNpAK
fRw8xOFfjTZf6n+3gfS++lNjHM5O/+tzmrsdxnZoioxzmDat/ShzTTsoyC32
j3BYRjX243rBdugdmHnbz2FT/+EqX9F26Mk54NXB4ahyuZFhiXbY/ydfo5bD
lat8FrB0O/B9DxYq4vDC6XKxD7LtEK2dOPyOw/se8SsL7WkHgU28WbEcduo+
d8pbqR2G5qpCAjicIvnatu9AO3jaTJyz5XC3NTvg+JF20MhyVNTisMDbI/Gv
j7dDl8h5np0cxozQ7DW4HSoivw1wcdhvb2uj66l2eLeYmj/AqU/2NUlKu147
7BYVj8nhMK3IYUXVuB3IFlJuERyWWc6STDJrh3vHanTPc/gc8e8hLqt2yKHL
KO3kcPQ9bX1Hu3ZY9D4sPM3Rz6LYcOg+t3YQihnsC+Dw/gtyKXHeHPs+98tP
cNgp5Vrh4s12MB9Q/bjE0Wf3Hn52VWg70Pi6Q704nH38yLkLCe0QLJaf6r5M
INJCQj1KU9pB0d40vpLTHzJ1Lfe3v2mHsl6tRyIcjjZyKGN/bofcZ6OPn3P6
zdnp8Z6Qqnb4EDw06rRAIL78NISo9e0gqNDJG/Wb038/9ljqtraDkmfv3o+c
ftYKKIvZ0N8OrrR1SV2c/t8aw1r8ONUOp0eudY39IBDLbG9/zJ3hsMwGAxrn
/bA+tN7860I7tD10TqRPcd63XvWiZp4OmJXeljTIeX82bYm8MS3RAQ0Z0+Zh
dAKxcGrL7gWpDlhrcMTYhsaZHxU5PVyyHSB/VlvqKJVAfGrfryKm2AGXVw1v
+04iEMXS5WZUoAOedO3mGRghEHMCvqWe0OqAIVb/vQec99DwrKGx9ukOkHha
MnFsiDPPftzMMTPpgNGvBqL3Oe+p4JE6D//LHeCzSsae0kUgrq52ZJc/6gD2
dnG5d3UE4tuni0n1cR0QaCkgwFfLif/yA92OxA6wXD9da1dNIIbyf0mfeNMB
WW0bm/g582HZcNWV1UUdcKPtpsiWEgJxYTiVcmasA04VDk6f+UQgsn6PjvTs
74QkT1PttvsEYsHlR5VnDncCdc7/jAVnvgX3abwrP9YJiw0lxuPhnHlRmOL2
UbsT/rRf8h68zZkXNyyWbll2wu9Hj3nuXScQn8/2Su681wmrr1YLV3Hmrc7P
FlPv0U6QPPvEq3YfgbjeNvAojdwJihER/nFKBOJIu5K0JbMT1nC9eG0pTyD6
ZEeRTs51wp2tc2cHt3Pq73HaW1KgC5okQ9ViNxCI85PVjyoOd4HyQvMh2qIw
8S3za6Pwwy6oOdzeqFImTHR/ZrDD5UkXpLsmTl4sESYe0SIF1CR0gU9PTnhA
gTCxMYVf+dabLniavFk8I1OY+NPQ/BGjqAs0hBV6G19w9pnCeZNqUhf8clUZ
XQkUJvaHHRj2U+uGd06O4oZHhYnCW95Pk8ndkL+kcaM1WYioeT5smMToBnsf
zgLzTIjo/ehS08RUNxAMOugST4SIvdyb3o8tdAPzhLnS2ftCxBfUe9ZDgj1w
LZVPL+y6EHFvtktLl0oPHFQZWZQ4K0Q8S9z7qTK8B6LTjn0gc/bT6CtfnF7t
7IWXq/zibYmCRKbm53sCCr0gT2svnjwuSDy1KS39xr5euC+zSPY5LEjkqYub
0lPvhSpzwkUfeUGi306fG4sGvYAVZn4dIQgSnUYP3jEO6AVGi3JIV78AEZ3L
TlvV2Qth5vkOV1w5+7fmJ7Lz7T4IMnBxvB3MT/Q5WJ0vUfUdXlByCljP1xJH
M6ujOmQHYHjy2xFxgzXEvy7dSfL+g3DzsGhrZD8vURHxLTt9HYLKU8bHd13h
Jp5Klb2cs3EEtio1LDDO/sM3t1zaPm45Cq2oR35p9QJWYp8T6Ds7BrPP7R8p
tP7C6wk/1lb/GYPAhEB+mi0TrypPytqRPA6XCzaqntQcwwPHtXRGX4yDPnHp
Gp/EGM4qYY89fz0OV8aOCfzXN4ovFpwQE3s/DvH7G9fl7RvFOZ9Hfbhyx8HL
Wazqx/gwtk7eoT5cNw5xPy4mLRsO4iK/T9XxM+Mcva6WZtr34oe/TayM58dh
+XuRC2ljL7a/vjQntDgOu4+tUTjW3IOFvc7uiVgeB1rDY2Ghwz3Y0Xn6/rV1
E+AoN7XtqnA3FjM7ZGC4dQI8/1qEvenqwK4qX/vX6U5A0bmpq3E3m3BFe09G
0dkJsPyd5vd7pRFvcPtx+7LhBOw70//32v1GXJ62a3fNuQlIEHa0qHzZgNdv
jPEOtpkAUeIhwnR/Hf666CDw+/oElISVFkvcqcYi8bdH0nwn4LvBfs2ZbdXY
8eDzHNOACShUy7jKW1qFCa5tZrnBE8AnOytcuVCJ7YfU3rpFTYDDQ6JZY9B/
WKBc+AT51QS0qEY+DI8sxTYW8iJP3kyAWVNfuijtG/7ym0hC7yagw39bzTrt
b/jSfr/7Lz9NwBJrYlFF4CvOe03quVgwAbItmUs4twiv1Vj+sK54AgammlZm
ZYuw1cCmW0VfJ0C/9MBh7rhCzLdef7vEfxMwuSTgIX27AFuEF7l3NE1A2em1
Ejxe+Th7WxcKbp2AoSCneYWZPLy6dFJ8XwfHnnLDgdibeThrbvvX6N4J0Ktj
kvnv5mLeyw/4dMYn4NSp2No9Fdn402m7V2XzExDaslzsp/wJqyjJasDiBDT+
/Vl0OSQdlwmPDZb/nQClhrrA7O8fcXuX1cb/uEjgFh0mqvT4A561Mn9YxU+C
3k/DvCVy73Cg5iYlLSESnPFXSHOLT8NrdvQ1VBNIwHLRUFbmS8OSdNPVteIk
YNzT2vP+5xus4W14q16GBJ4+/kVOjNe4zpSw+bQsCZISp+bN3V9jwyOthQ07
SKAwlhq9Zv4VtlvSnWmUI0Gco7OQndArfPfOKZeWgyRwyl3t9O9LMha5smat
vioJ6td57DrISMLPdWvSWo+Q4CHVAB+STcIZIsTxtuMkiH7XoqXzMhG3P9e4
0KlNgp0DJ/6EdMRj88B/c8anOfHsPdw4LBePJy59e9KlSwIl5XvN9uFP8exO
9bZuQ479yQ33X56Kw5JZqtp9F0kwVp29tmDpMU59PEsysyLBvNZSBr72GCv5
5IV8v0SCVx3bmi5NxmANtQOl/Q4k0NrOyOT9/gjbVSmpDLmToLJik3G/bDRm
pbE6LL1I4P+bmbZGKwr73Ev3GL5Ggj/U1OKjVyPx3bNyn0Z8SWDa08XY2XoP
Z/Tt2D4eSoLijxMpkd0RWLVkotw2ggSULwU7dHZE4LLk11YTd0kQ713+ZN3N
cNxuuzWRFE2CpQdOXtuUw/Aca7MINZ4EDj5uf7zag3FcCq0uOZEEiweNXG4c
DcaHDPJvmyST4FlDX0zamdvYK/fsdMVrEoznPd0gvTkQizhsfn/zLSe+0vfd
ZoRbOGsDzXrvexIYXRWxAKEAPOkb3JqUQYKebyV1Utv9cLTC2TvGWZz8K34d
TTjqixWHJDXW5ZJApyBKpvP8TXwF8j7fKCSBnQVV49nH65iymhptVEmCwt2F
wuGp3ji8MFdrbQ0JOrj7o37+8MI7rtxeKqsjQetNGZmbJ72wbfOmq0otJAg/
iejCXJ6YK4iyg9TG0dPuUIPoJnf8cl/uYGInR3/X//CVv3bDw7G6unzfSWBv
uyl8i5srvqW1ibdsgAT7Unk73tq6YKl5conPMAnIy7rm7y9dwebmQQoTEyRQ
39G+in3jMu7ZmrOudJIExrsiPML5HbBPR+B/136QYNVNqRQatsfrw874KcyQ
4Kn2df+4UDtsRCXRny2QIP1WbHGPhC3+8Sz7lf5fTj1PLX6YcbHBj04HXli9
TIKqS79ShyIv4ZYMiXpvXjJ41Jy00pC0wletSbfl15ChyWB08/efFlhAJPvI
2FoyfHLsbovouYhPXzv9/qwwGQ5EKZxK/HYB16jduiMnSQajS30raSum2IGl
ozEqRYY+ZmF8225TzJuyYf6pDBm88yP/nj1vghFXliPvTjJ8wy+1pFqM8FhO
wJaS3WQor8lX7F9vhG/b6/R4ypMh4zZfXYOtIS6tHdca2UuGH+luu3126mNL
38yluANk2BTQc+I6XQ//lQ/I11Uhg9mrTVMjRbpY7YH4zmI1MsSc5dGTDjyN
v5ic4o3TIkOjuruMw92T+J5uUYT0KTIIrcmsfpGjhS2J8mvTTpMhS07UpJ9E
xDyHBIQK9Mnw6mB31d5LGPco3HqkYUSG68G/K8rfI/xh+6RonQkZAifvlxz/
rYn1xdokvl8gw87dJfP/TADL8msm2liQoSh0QOWZpAae5c6RYliR4b8WiYe7
WMdx0s/YbX/sOCxaQLmSrY7p7ecVpN3IkLnnTMK5osP4a31dxlsPMgznXHuh
2amKH1Yc3afsTQZ+zQ2SgnMqWCV7s4rGTTIU31+n+NvkEOb7EFVQ60eG3ihB
w5uPDuKBl0tHDW6Rgeeral9C5wEc8mjkhE0IGQaONfS9cN+PTe8aVNDDyCBv
mST668E+LHe7AnvdIQO+ta26XHcvbnVPPRUaRQaL8wT5XLYi3qzvZPT2KRnu
emXzqBTuwZMn+7qUEsiwmanzpLNqN644oXP+y3My5GbfiBYa2IWdlBUsal+S
YSx5aTNJdidW25U0rJ9Khr/+Fy2ajHdgwS2CNn1vyTBLm97KitqO8wSnHOgf
OfnYXn/l0QZZfGfVJZpnBhkEPEtd/B234YtLbVcWM8nAlSx3uct3K+Zi57jz
55NBL3yxI3hJGus1XfdVKiPD6GCKadzTTXhrFfVPfgUZrsjUPb39bCP+VWIW
eKKKDE5lajIv3kjgxHS1UP16MiQHr/5v+Ls4vpqavqqvkQwvH8h/P84tjjWf
S9291EIGvup8xpmD6zH1/r8oz04yaKnft9r4WRQXh7gLL3aT4WndQNm+eREc
7TcaE9JHBpt67sF0bRF88Mp/T2OHyHBWLjRIY1EI39aJeJlPJQNV37F/6so6
3GntbLmfQYboF1pjW53X4p3XdSUzWGQw6Fx4+tiTDze+Fn3y5gcZNBhPP6e8
WI2li2YNts5wGF/dc71qFfZo7RNMmiODdb3BYb6fvFj8b8qd2D9kUNs9Cv8c
eLCTaAhR+B8ZTuoql5Skc+PiPQ5ckSucftEdukf5zYWtTRX8Q1ZR4OZd4nK2
/gr68LnAzVOYAu81u1cbvPuD/lQlKrBFKOCz/2XRxcRFdHbgFu3yegpkSF9W
3/FsAf1aQ7S9tIkCXJffRh/NmUdaW3bLDG6mgHuBHaOgeQ49O7Ru8PwWCjTM
LA2Y/pxFx23aTPW3U8DXt7U70HQGPbyRK9q4kwIo4pmUeewvNB79tPXkHgqk
B25Vnu37ie4UW+icUKJAO1/vrn1+P1C7GP2Y0mEKJNltj4vZyEbb5ZsW3h+l
wODPYC2VFSa6DplfdhyjgPlpksSqXwy0+arPPilNjv3YyBDb3zR0NdSMHY8p
0GhvLrpxHQ2VJ6h/FDtJAaHMv2Y6O6nIoYZrB/8ZCozkB40kXSejgkHSaIQe
BUSi/N+u+URC637VJnMbUMA4UXUskD6BMmUeSCyaUGDd8Sf9p/3H0cJNSX66
FQXGKYnH90wMozMPl2rtbSgAx/Xr15UOoZS3o2GjdhTo/NF4P/zNIMIdaf96
L1MgYvy/IJfH/SiOdq/E2IUCYQ9rrs49+45o/1xvtl6lQEulbprZhz4UrXDw
Z40XBcSfNXmLUnrQiOaGTORDgZ7bfu3pIj3ogNmCS+kNClw496/whVY36g0r
I+cHcPzffjoIV3ci2eEz399EUOB5gV0pU7IdRVYeyzp3jwJaZyNtMymt6Nd7
pTt8URRY/4qn9mNaC6r0FlZxjaHAjtxj40lnm5DChRX+LU8o0BvjbOum0oie
nPgx3vqUAtIT9y0k9jQgh7Wdjw4mUeDjiSo9unIdap6sdCKnUCBXdXSHNKpF
ql15J+JfUcAzeqLguHUNWvPiKWsxjQJZE8mpsflV6MMh81P/ZVNgNFHzSVFt
BRKRPCNzLY8CX2c/rjknU4H8ltXndhZQ4NYZ4ZL+xTJ0pkH6zb2vHP3a650s
T/qGcjOF/NXLKPAqZ234+dtf0ea4ZUN2BQWMSO5f3rmXIJb12LJBLQUiD5pP
3XAvQqZaHT3cDRQgiBru4wsqRN/kKzPymiiQ3x120fNZAYqefXNxYwcFdtP8
VHZR89HeyMsFI4MU+BHhHuhHz0HxHhcexIxw/JEw0BE+noNWTE874HEKHFb/
upwYn43atyqKvaNSwIVy60V/WSY6ulqaYcbg5CNExlv/+Wf0iilYsY5NgVZt
zebAkAzk9WXKze0nR7+tqXWSXulo4Pmo1tZZCigqr3353PcjwsHtUh3zFIhd
cvn57/4HJKab26CyRAEdIk2vsf4dyh+7vmtpDRU6d3Rd4s54g6RrnZY+r6PC
9HDzgb+/U1HEJ7OuS4JU8Pl96M3KmVR0/oZaSJUoFRpSwrV4Vr9GZRYKF66L
U+Gn/+MD111fod1Iat+ejVTQ9/GmFGa9RL8F/g1FSlPhuWfMf1JhKcjm52Te
8a1UMHl5aGP9rWRU3zsSOSVLBSfLuYS7wUko4XXFUeM9VCjh8vz66m0iUj8S
Hid5kAq9wqdFWk3jUa+d5OEUFY69ZxGGiq+fomsPM/u2HaFCfOyajwMzcSiD
8n2z3HEqtEeaOcGnJ0hH1P3bJw0qdMzXR4QSniDKcV7rfYgKj7mVeQ75xSKZ
OOXXh7WpsFbVAxMsH6OS8kpcokMF7lCuuP7uGGTGMiOf0KXCzGVpVX3jGBSD
Q/ecNKSCrsFHHcKXh4jnZ+9nk4tUuMJvTHt5JAq9kL5q0GdJBeWRo9oMl0h0
TIf758VLVNiMdShb0u4jn5eKKnYOVLi8/m7ZaeV7SKSpoofiRIWTT1Z86/zv
os/z525euUKF+84V+ETrHUQ9G1zi6U4FkcOvCw7fiUChfhssZz2p8AmdcTBm
hqOtaen/bl6jwiqZheWnJuHowlK35m1fKrQYBfIOqIShpnT5ugehVBAP2VaW
oByCnHvLnEUjqBA9TRiULwhGq3hM+Z/epYLlre0Zz3Aw0jAPOpscTQX/vR++
rTQHoYHw9dNbH1GhfssxE6+/gehm9oeYN4+psLzXueHp/kCUzdfVlR5PhV2l
//7xZwYgvUPO1/cmcuJNu87DmvNHDOt/ErlJHPt+lqeTif5oe8Gei8WvOPkL
1bJ4P+2L4hxujdWlUyHMK+bJ4YgbaH+MaKjuZyqsmz4XemX+Omr5+m5HWxYV
eKIK3VddvY7WrO9w6s2ngkdDrMugvQ9K1XBae7GQw/sVb7RRriFw+ftxuJgK
3miPZZLrNeT7365JchkVfghdfXQ01BuJT5Y8dP6PCuiUf26TmDfK2WS4n11F
hTGWm1bJOy/E9PC/NlNPhdjvu06qffdEljJti9xdVJCXjU2uLnVHwpLeX772
UKG/qSDEjssd/bd+g9f171So+naqZu1pN7R7nQWdPszpl+798wksV/Sdd/lN
6hgVkty6D2856Yoil19dsiRRQTTloMnIGxc0PUPtbaNTQclVRcfG8wpKnbof
e59Fhcne/n8Nw87IlKGkT5yiwi2phj2VBs6oaMS7pmCGCoLz//2r0LyMQhuW
81KWOfePVsUvGzsilerXHmbcNFh90elD75gDopVpKYquosF4oR99t7cD0suP
TA1fR4PsfOUN317Yo+VMZWsNQRocPfapsEHNHmV/bJdcEKbBB8LI+FifHdrw
UuKxqzjne9pNnnppO1SfWKy3ayMNhES2mztX2SL/OMu1o5I0CO3RJ+VetUUj
91NvG2+lwW3DDVE/am3QB5+97moKNHgltyrz275L6KJHh/yMEg206PJ7Vd9Y
IyEXH0rGPhqccCemt222Rt6XSiy3qdLgpluzDnODFTp2RluXT5MGb5cPHPM+
aoGmtBhr/sM0WOlYvSOz4SJ6BdGV/idpcEQhQ2mP9UW0SrVTbeoMDZzVnRI8
Y8xR61ZruZ5zNHh/ZKFlauMFFLyZm/zwAg3cAhwskirM0KENb1/qWNBAWJ7w
vN/VDCXwMyW+2dBAPLlpe1XDeXRm9YPO6/Y06JELX9G9dR79W9n3cJ8TDST/
Cb6TPXAe2c1dX/3GlQb9vHKLPq/PIfEfm/6zdKdB8yxvX7flOVTH/HpLwosG
BOPH/Sc3n0NKY9yz92/QIJl+yGJXkimaa3ww4RlCg7UXrVj+eSZoSKDHeSmM
k08L7c1BISaoUk96+u4dGqANN9z/GpqgmNb0vy+iaGBkS3hPnDVGNwi/QhQe
cvxVCm1ZrjNGVoZqawtiaLDPvfuFeIoxUuisE295SoM06fz8Q7rGSGQ9IelC
Aue+qMMm+3Yao98m52XJz2lA87IycFk2QtU9ZOW/LznxeshnRhQYIet+7lPy
6TQo8eKMSBUjpLX5dEt+Bg3MtGkiazYaIUWLGBPNLBrkq/8Rdf9jiBaGZGzM
8mlQmNPz2anaEI1scaJOFNDAwHg2cyrdENVYf77qXkyDtlGSiF+sIYodO+YX
UUYDu7ibHyMcDJGvbNiKyH808A7blM5lYIgu2TVGJFfRwPQBI95D3RApkS/E
5tXTANT1HkmLGyKxXa82QRNHryz1t6Y8hmjRkfaisYUGnaU1fowJA1RLu/5p
vJMGQY6pjjVvDVCGXOkBtx4a/Oo8+8jsngF6cmVV0UIfJ5+xDsnv3AyQf7qu
RvgARy+ylb6ZpgbIhhVbTRimQWI+t7HrCQOkrTRwJmmUBt+VVyf17zFAym6y
HbsnOP02dkN4fr0BEs90Nssl00DT68SrUm4D9Gcqa/gEjQYMSdUo5Z/6aGzf
b/sGBg0ON+wyIU7oozpPDaYpm5N/gYTPS936KDMnwnNsiqNPQcoLswZ9FPer
ed71Jw14ijdaG5fro4BD4oG/Z2hAP8HjxirQR3Y+Frxh8zR4V1wfIputj3S+
pN4XXuT0w2Xis5l0fbRvnkF4/pcGPpPyZJv3+kjiyIH4Xcsc+zscqM5p+mjp
pq90Dhcd7MulTgpwmFRUnnqclw5XH5ssnXqnjxoX18jXr6bD+vpRta0f9VG2
un6WyVo6cB06eOXxZ330LOCp6ig/HQgBk6ov8/RR0Lehry5CdNixFB95+qs+
cvi3A88T6OB0tSzmcbU+OqPhWh8iRoeDWb+yfNv00YHbufpCG+jAPB4RxTWk
jzZVLHYnbKTD3vqmdYpMfbTMhSx2bqZDdtV9gz+L+oiM7o1nSdMhePpenaeA
AWoKbbt8bCsdGhUK1j+WMUAJq6x9jHfSwWz6idDgaQO0bL9RtWM3Hb4fnyl5
YGuAHKra5wzk6XBLTsOE6m+A9ocSb57dSwf9gd2eCbkGKH586Ujzfjqcu7i4
+0+7AVrSLFg4c4gO6jdkVMV+GqD6FTl/naN00AiKOXdcyhDtvTShXqdOB+4h
lVy6siGKK0v6e/IEHX5vev7IHxkim0DhQCKmc/onJe2iqyH6/WfmtoYeHf4w
XYMuNxoiy4ufNUv16bBh7qDsc7Ihqix24j5uRAc1eRNqy4oheujbH6p2ng7v
ayvTT6sZodm+WGLRBTp4swLuPDczQheP6K06YsH5fkzs+PINI7R7vixCxYYO
l44oUkWLjVD0OV/tPDs6vGXf3Ns8aIR+5R/gO+hIh8Lc0sXPK0ao7Nrbe/tc
6LBm9cbF5TPG6PzP+1EKPnRIVXTICv1hjL4ZEvU+3qCD5ja55h1bTND27CVB
OT86LOwtmdqqa4Km3D0e7gqiQ86Nh09PfTJBEWzTx9vu0aHdwrb4SKApYuoK
G7+MpIOF0c8XsV9MkeGnOjGZBxw97Ex3j542RdIu6nFSsXRwyDCPDnc+h/Jp
W59JJNPh2KvRNdke59HmU/1mT1/QIcFf2l2+4DwKfhe7Sfw1HapsPvo9Xz6P
9BxXPxd9R4fRC/9OP3tqhsgTzGTBbDqo+jxYChq+gM7gt1ZRuZz6t1jxHFY1
R9mvrWT4v9Dhc9eo2oVH5uiWTftLvhI6HO06HiurexGtH/mSylNNhy9nRX6V
T1igh4KBgYW1dFBIuVe8w9wS8R/TunC1gQ7i33ZtXd9liXgSOoV6W+nwS/eH
+epOKxRUm0iP7KDD+D95QaKZNfoza1MF3XR4fKdmf+iYNfplNO37sZ8OYg4W
w3dWLiH34AIT6yE6lN1qPFx/xgYxMwP3rh+lw1TihxbRBBs0LiBIvkWmg5/H
n2dlaraovUbOwHCaoyfZZvQlyQ7pzU7Lr/7Fybe8SbbYX8583l64qmSWDnoB
imRrK3tUfvtkyY4/dJhlZATKKTog9UzBp9+X6LDpzNnCgXgHVDDU5fFghQ7C
78V8KKsdUaaa3a7fqxjQ53AhxG/KESk4y3Nl8DHgw4j5bk1nJ/Qu/seADT8D
kiif+AcoTihlJiimkcDhXIEnhMnLKPpz0t+UzQzITsgbCt/ngtYO2fUab+Hc
d2E0cqzJBYXzK+TwbWOArfI+OS03VxRwucjJaxcDEt5c8xgsv4rmn95Gu+UY
wNP5ptLDyw15V2tLDyowYGLTwVstcu7IRbanQ2s/A3RTawS+ffRAVIPkjMWD
DBBWqO8ZUfNEdkH2dzNVGeDq4aqmmuqJzAd/Ht90jAHny6+dsAn0QjpPhT+w
TjJg+5tTdEfba6i6qif0lQ4DEnPalSrJ15Dmr2Src7oMOFXqrB571QcdMVBc
X27IgG3EjXFqkddRbuCvyWsmDFj3rvug67YbaG9Gcb3ceQZos1c51ny9wdn/
dIJiLTj+RhhtKOXxRalHCOanrBngnTF1tzrTF8k49R5asmHAeOP9d/U2fkii
yoHh6MSJR1E7Jq/PH60ODDFV82JA/jeLt5KbglD+T/Zi+TUGFPi8N0hiBSEH
pwsvtW8wYHNF8Ns9tbdRtcE+pkkAA0wrAt7m1wcjn+rnjwYCOeetCxpNUQja
qbZG1TaYASytEKvVZSEofPvwbfcIBrTb3Tt2sDoUqTzT2TV3lwGCZy0frZwN
Q2SB/MaASAYEEjaH3B4KQ1pzkRvuP2LAjPI6X921EWhV/dFPbxIZsDOoUsz5
1V2Uf/ytoUIyA16f/BK4/tw95JBDmM9+wYkvrlJMUOQ+qn5O1Sx7w4DQhq1j
A4mRyIdgTNV6x4BGv7tWB69EoZ3hpVFNHxgAp29V9UM0CnOL6/3+mQF6R0Yu
HV31EB2cWAm4lM2ACptF9p1fD9HEeVdZai4Dzl3WMjBlPEJYE1+dKWRAiOW7
uyMLMYhn/Q9u4UoGFJXOq5KOPUG5dy3ex1UzwM+AuOZv/xNkt1SrJ1XHgNMi
L2hdgXGokpLyTK6ZAZfopoScvqfI++K6E1mtDIgdQFf2PYxH29t8JlQ7GNB5
I3afve4zFFqkq0zsZUCt0I6ivwMJ6KByYWfDd069dKfI058T0cTr7b6GgwzY
YzsdU3TvOcJRi5VWYwzY2Ms1x2eWjLit31/wZTLAN8rhuOj+Vyi7U2x5mc2A
tbrHP8WVvkI2p4LeREwzwHM5+ZOX4WtUsf/cVOwsA442GxhK3E1FnmkVTyR/
M2DswNtyY8U3aNtmJbVXiwx4uDXofmfPGxTMyxv+eZkByxcDEl9rpKH9vu7y
KtxMSLp62c//XxoaY/e3lvAy4Zub5M70qndIszdbsn4tE65+F/+LLn9AXB+t
sybEmOAnHMAOEM9Atew+95cbmGCncsH1sPJnFL3faK/lJiZMis28+m6UiTYW
ET/3bGGCpuu157dsstHQ329XY7cx4ceRkj96a3JQKhxWMtjBBM9jXeRDeTlo
b53cp3o5Jsy57f31YEcemuVPdYlQZEJlViMzk5aHSvSlFPBezvnTlddwfj46
2Sv08eshJvDw7Kw741yALCm/3mVqMCGq86bYp1MlaLv8VSdXxITjcHhW2OIr
ol+l7JLTYkJwmNp3P/9v6Nps39vXp5lw5NaFicTRMnT0qJGDtR4TtO7Jrz+x
vgItBzTukDJgAvNmxo6h0goUyVuaGmfKhLInScxF+UpkeOqwnZEZE+IuXJhX
ZFciiagsWeGLTLCPDP4zU1CFUsVSX929xITPRSJ6Q5drULHs3Rf+Lkz4T5Wn
+DixAQU5clkfcWOC2g/o2Xe+EWl99Nsy68EEoQ0X11693oTa919NdrvOhNZ1
W5zWDrageB+KhYIvE/4oPeN/sb0NWRZZS9H8meC1/G2vz/F2RAej5zbBTFjg
F1VTSu9AmWGN5lvCmCDxe6bQ160T+dQRJQcimECSk1B6otaFVvQPJ5hEMaHq
q2Zy72Q3qo7NMhN5yIQil7FjI709KLJXbmNLDBMEfSUfeDX2IglrqXjteCa4
7oyvOdT1HQ29jjvHm8iEUeE1n90Y/SiVIrShIokJ50/jztOCg5z9lytO7TVH
Dx4T1Sf9h9GvbD+T+TdMEPb4LyetdgQVzf4Sy3vHhMPGIrbiomNI6xblsVIG
E/x/1xcWhI8j/gprI0YmkzMio6zNdCdQO+93kXc5TNAhVaevkyIhi6jGR1sL
mbBpeE3auT4y2tZGNBgqZkJmvo1iTzUFUcVKhRO/MeFRbVfgwVIq8n6e9UCs
kuN/z7WBh+10VLj0/G5lNRPEjpVdOE9joCXrOyHedUxoe5Wd8p6fhe7usLre
2cyEvtC5tSp+k6g5QscjtI2jv03m29/VTCEx+qErBzuZ4HS8Ge6J/EDJGfxW
sX1MmH6oSK0J+4nGhefP4wGOv/yXC/jO/EK7vcYNfw0xISwiNfeo5AzKVi3S
Mp5gwv2jj3X4u2fR3LM3GjwUJhx8Kpx5t2IOqf95eDSXxgSw4dXMLJxHNWWO
SmKTTBjm1fpCr1tA/LJGuyunmeBA3nmFd2IRGYYd3+b9i6PPV3THnrV/0cCp
9eKdv5nwRFfLaTroH9qaviwU+odTX8eheY+2ZeQgyOQ7+I8J9eBWGr2RC0+1
V/x9zMMCqwGZxyaPuPGhQxlzaDUL3pCzz66Y8WDfp8+mf/KxwDVTY2+ePC/m
vehOMhJiQUu6yNYexiqs8818mFuEBeuWfO5v7V+NH8qc7MsRY8HN3PK9il1r
8CaSVJPoJhYcFCY8vc5Yi61O8tX8t5kFHcF50cVr+HHq+19lXltYsCfF8mXD
fgGsdLUht2M7C1wSckcTPgthr9b8jJBdLOh/rGv0gJuAC/a/endAjgWaZo+v
Wx4UwWjuxvPHyiwwrn3w/ctnUXzHzC4O7WfB6NkB4n5fMdxcfPbhz4MsSD06
q56vux6fD9oZanSUY/9GSKk3YQN24eu8IkpkwcXFI2mLGyRx1pVS+/9OskA4
nyeqW2Uznm36YOWlw4ImF9OrTjZS+HbMbaOOsyyI8u+9RR/dgqt/ueiGGLLg
QaHs3lWqWzH/ufMnD5iwwDTHSeGZ3jYcJ6ms9vgCCzwJYulp9bK4P2DTIWTB
Aucrj9cZPNmOZUZ4lX9aseBLs17LqNMO/CF1YJuRPQuuof4jmgq7cKnivbWi
7iy462Dx4IWyPD7cvbEl1pMFHxRuDwYeUcDZt94/Fr/GAj+KzBpZPUWc2lK7
eZMvCzS+itk4PlPG0jfOjyb6s8D3/XIbo3UvfipDfSMVyAKW6wGvW+v243se
q5W3hrJgd+ljrfO2BzD3pqc/X4WzYPXHkoxPGw9i/4qdBdvvsiDZ4ka9Xs9B
7CaqBbujWTCRnib75LIKNs4LNVKOZ8GasE/fP/04gpssxCSyElig7b0+pYFx
FGutSh3Yn8SCp69L476x1fCRc//Zq7xiQflI4puXosdx9j9DuYJUFjRIeLWc
VzmBFd6NsY+ksaDTvybMy04DS/9euX4snQWHdidgopcmjn/5SL00gwVOwdzG
uZsRJuhsXdHIYsGdG/0bCxsR5knUuIfzWdAT0ewcAERMUw98frqMBba8EVrq
YdrYhiR4qamCBZGdqSFxzqfwQFTyjrNVLKjyqVTKOa+Dm4e+ZhjWs6Di9MKV
6/pnsHaErldnIwvs2RfNai7o4nLlQVXTFhaM2N55IOemh3OD/pSZdbJAtk2J
9uyLPlbcExnW382CdDHDATumAX7bJqlj0ceCA77b3C89NcTPtql1WA+xYNLR
8yOZZoRvVd4kOVJZcKJPZj550BTPufB9oNFZkNPwY83J9HPYff2zq1dYLNBi
hSYEB5/Htg4Fc1d/sIDL8WdDsdYFPCCoXTL1iwWJDdGCmofMsemXniDPORY8
Elul5KpwEWuvmePz+cOp5xuN132HLHFFZnjz3BJHT9ekJHK1rbCamfjjmyss
iGW5lNrbW2OlD4c2B6xiQ13NQEqTlQ0WPeOtFCrMhvcuBX8cF+zwq/8IAuqi
bGiQcWRFlNrj/WqfGT/Xs+FNYAbXlkgHrC9Hf2cryYabpDcpBepOePhlRISk
NBtC3xi2aW69jK9u3OHQIcMGlPEoykjQGUeusZZFO9nw+ze/qiK3C5YM+ruy
sJsN534wXKPWueIPcwkj2fJskOzd3flK6iquI3clbdvHBn3r+OD91u54VdVp
CS51NjxJCMvblueFn6jTZguPs8HjvqtZi5033p4b3uUBbCB+ozoWbLqGNV+X
x4xqseG+6pL2qgQf3LbJyuPZKTaM8qmbttlex9Yxf84anGHDSMnMqTcHb+DA
26oC5QZsmB3kz+YsBVjwdyfjhjEbUloDtvt2+OJkd8/6vefYELWKdSuxwg+X
WH2KeHGRDc0ih4vCCwPw/DFZriBHNvh6j1fZ8QXjiLyyEVVnNpTccTHleRGM
xRUtSydd2HCi49dwnFoIPrT5mb+VJyeeb/Y+MsGhuPKxivmGa2zgvVw5bakY
ho3XdR5puc7xT6xXc8tQGPZcEJw7HsCGnx62bsX6EXjFI71rNpANE2oB7HGR
O/gh7VRuRjAboosF7u7qv4MzekM9pO+wwXDtA8cXt+5hRv4C428MG/QeCDoM
rY/Gvkrx9XlP2HDwpmq7tcADvPbtofeu8WzoDwlUOsv/EO9+4u4wmMSGwOKq
yhhCDLbzIo+UvGOD+/dxw37TWPyTznlXP7KB73PFzpYfsTjYZmuyQgYbvKo2
Nh94/AS/NLho/jyHDWHd9+qzRuPwkHJ7l983NtTEWk2rFTzDL1migbzlbCCF
SsZcck3Adh9Ndj/4jw1bacZmYrsSMWNnn++rWjak+RwT8Hn3HM9LjWypa2fD
wvPRE0GkFFzSv7XOsIsN2XeuONuVv8CBz2w9B3rYsO3WO73br17iVesplZMD
bHhWGUawKn6FRfnZl8UpbNDZd+J0Y0Yq7q5TFn1BY0NE3HaPtv1vcEKER8ke
Jht2bTCvqSt8g2W4ZwSPTbNho1johtLWt1hpYTHHdpENQZ06pymy77E2lW8p
U2gS6rPnrfWcMvC6t6fTjopMgnXjdR1Pmc+42TZKv1JsEpq3RXkrDnzGJsPC
r3s2ToJse1V5tGUWtuneoL0kOwmPNcHvr3YO3hlrNh2xcxLM/pyrpufkYJpB
YgJhzyQ81wqpqJbJxe5N0qztSpPw3v5L3IXlXBxQuSPm9OFJ6P5revRCTz7W
CHZU6zo6Cc6hhVo7Db9gHo33E5bHJmHUX6L4b/MXfK9YQdVTcxJsk7V/f28u
wPHZBwbiz0yC1swho+eUIpz9AnaSrSfB/sY014HAUjzjP8NnazsJcCnsfKlE
GT5s9p41bD8JLtU3Gy/lluGvBEJen/Mk1HQU1zGmy3Ft8Ahq8p6Ef8dUgoXx
f3jQLvBS7p1JyNCtm3ZbW41l4ABx3/1JeDjGz0dzrMY2UpTdGVGTgH6oSTlX
V2Nql95UWswkuC3/ogWF1+AfWtKBic8ngecSP5kkUofX7Pn6PDhzEgjF+cf8
zBvxaV6PoH/ZkzCUF+/IrG3E0aPb7fzzJoG4IHtHX7UJiyZEyvsUTcKnT8d0
6OLNWHrdxaLLlZNw/oO/quJoCz7IWujR752EJy8Uzde1tWOrrMOiW5YnwXvq
p77JQDcuuLgg3M41Be8+VOp27ejBwmtKBMN4p0BqTnzNF7ceXGF5Yi1j7RQM
ulEG43l68XZ+rZX89VPwaOTUhbf7+zDVwWhST34K9iceqnZP7sfum6823DKd
gm9KXtpZ70dwcMTrkKH0KcDSCmn3U8n4M31LkrDeNOTxq6zvmZ3C91IibEb0
p4Emo1Jwf8c0djCe3JVpNA03PqRwY+NpLP3tW/ZZs2lwEm3WL82axpGPLGqj
7aaB6p8R4K76AzsfTvzJ7zcNStVcZ/p//MDbw8V1+N5Nw4y5MOGd8y+8fPSW
UN+HacCaG8oUg3/h/klS57tP05Cg2KqX++wXjjHLs9LOmYZfeVrs/2p/4RUF
42sR36ZB9YmiM3PnDB7qePSCt2sa4vntVszHZ3DRnd/2XT3TEErw1GIuzOC4
Y5fk33zn+MsTNOcvMot10/bm45FpWPO0PigFZnGJb0tDCGMaTBqvO1BTZnG8
suojI/Y0+J0aBr8vs9hrItlUdnoa+Cw+nRVsmcVyeldHK2anQb8gj3RwaRav
4u5+G/N7GobzIq1q18/hsS/HXGz+TENnBvekueIc/ubyZt/+f9OcfY4WOYnn
8LOtAnMrK9MgMsq/////v/wfHAr5SA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
FWse2lnbnTAxHwPUskL+9wEu/N2V8KpT9mPAH2xkbcaapwK6PZeunx+DvGbR
3CIVLjxX17lPbXfHQPI9j/c5aS580YPN7N7MMXghymbazZrvRudTLceejMHt
PjKHoiQXPpavroRUOAbz8QLc/az3wz87jB9X4xgUxAdYLQiw/PqhgGpBGIOQ
i6P7+f5h8B9/LC1OHRyHbhXz2LQFDL7+/N0OiyPjIFZ6KUF6DoO/OYP812Yw
Dso3K9LyZjB4iYaciy9NxkEl0aE8i/V+RK+c/hPpOg57TBIQ014MPmt9Wkrp
9jhoKTZZxLLet2arQw7BS+NgzHm7LD4WgxfzjDpKp4zDKYPr9fbRGPziqLqs
6/I4HKrP+CATicGHVt4hG2+MQ9UUMykrDIPPvWQeLMU/AT9GroQd98Xgv3/u
utt+ZAKcy99e+s8Kgy9aft0vlDYBK5+6tq1vx+ADH9nu8b8/AdO70/ZJC2Lw
ukbkiHePJyD/zn/t+rwYfH8On0Zk4QS8PSFsd4Edg1+1c77LbJwA/y550eRV
1v2q4bt9F3kC5BX3ybSNcuLf39L6cE1vEsZkXeyE73DiheSKv1Iok0Co1q5O
Zd3vsCdvfSAzJyFNbV2rdpkDH3z3zADpyyQYcnUrTVM58NPsO4sJPydBYt3a
V2CBA/+Mdtt9QWAKcp3+JKK9HPgDlf5DEzpT4LY8fng6lwNvjT/wqiNuChpO
H6QUsu6nKX51PnlK0zDQfHF810N2/DK27Da/2jSczHm3UXqXHW+683nJFc1p
qJv8vEsniR3P0ZP5xUp/GlaEMQ+1I9nx15RCr2zaTsMlAv3AD092vM/SoYQT
EdMgEafYkqHOjsc5Vj7HjE9DpfDLvL2trPs39hXFN3oGPPhb0aj/ttDQQ121
Ep2zcMbWmuo4/xtdKu+6M7Z7Dh6eqKX/h/+B/vafzN53fR56Op48znT6hu7H
cf/zeb0AhgXf1gRWllHTgt3nqyQXYYXtBCWanYDqPBZS6ZZdhNJA8ciVqiV0
V9pvytzuRaiL1cr54bGE/ro25YVRX4TVwzWfrNsW0bLjSe6nsIvwhzrVeCzq
AyrGvur413cRXM7mCLtszaFLZ9qNzJsXAfM589gt1Wl00LGM071tESRNGOtS
C1Noo2VWR3DXIvDdEu78lT6FZuiGYp8OL0KXgkZZwe9J1Fh4r+FX0iLwrkl0
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
yCrsgeTWXxsbdPAyvrkzA6vG/gfE5+nw
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.5, 1]], 
         LineBox[CompressedData["
1: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
PTE0IrKNaP8HTSQHAQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
D02/EebZRCevWfprYYGAoq7JNKPNkP4fOkmnCQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 1, 0]], 
         LineBox[CompressedData["
1:eJwUV3c81e8XF5UtItGXilQSQjJy7z2fj1n2DIWskBIhQpkliQgZZWXvvffe
2+W618qMQlaZ8fP76/M6r/M85/1+n/N8znMeLlNbzUfkZGRk7MfJyP7/VXy0
0F+3qIMjXp98sH82XOK4zDm7SXZRkHoQkyPvHiNxMy4yupBdFkYoxo3ishMl
lLoJBTHs2vDxRWUIn2e+hK75VnUIuzmkVD3qpAvqlBi/8U4mkN0RXNf0++1b
yCTjz6j5+rO/gfPNMucEmCwlvagKr75nD4PQac77yfM3buvpf8tdXUsCgxRF
wuUbVVK/R7VpEs4lA0vivw8qA/VSvkZUj7RkkuE9maveum+LVKGZ7bmSsGTg
j2uJTdjul2J4hn3rJp4CP4o1qE1q5qWavYn3T75OhcnLDPrRXUwYkSymkxxU
GcCSYWCk/t0M0y7YbNwtlAFxS06ZEXVWGOP8l5Xu+hngrqfTL9/7DBNYMmk3
lZEBge71fWeHnDELddmjKSqZgJb+tz9+PwDjIWMipueUCVkbLjjl8E8Y1haW
T9RxmVBjc1XPqOczRqbTTf7paia42t+XrqyKx5BUbnzjZM+CIOPgJ+NlSRi7
vum9HjQLjhVSfc9JSsfEDt3NFw7Ngqia9W6ur4WYW3r/aGcqsyCUbOc41e0y
TBcpzyJsNguc6cYH9n5VY0wNzevl6LNBflC3lfJlA2Zn8izH1q1s0Blg8uhs
b8EEm3Y6pRllQwmyt5V+rgtzZc69X/9dNrhycYOOZj+m2lKEnzYvG97J5og9
0R3CaP+c860ayYaYZVdxujskzK+nUVM2x3LAQN1tKof/O8b7tzLmAl8OUJD6
KK7Pz2DY7cki+jRz4NUF0+PXXi5g8jYL17zcckA1Ulyck3kFo+BsqXwzKQfC
vPdUzrisYyZ2zqXOduWAacSHWxU5fzGOr3qOhf/JgWBNLhHn4T0M7aGXgcL5
XDhXT4hdO30MG/lY14hfPhfGj3GcbiEex/Lg+Y2ZnuVC6ZtCdSsHamw+jtz0
7+dcOMQKd12kP4XFpRPMRqtzYe7VwNbcymlsJ3P2o7q5XDgY5cEtMZ/F8kN9
4cDJPMBPdAkSODmw9puZos3n8qCDlbEm6TwXtjw9vLhUMA/CTrhRvh/mwZI9
9BLLkM6DY8aca1z3r2HlWZ6WRt/LA5kxRm5DvCA2oP2eRJB1HghWDNW/qxLB
Drqj5V7ueeC14c9m1iiGPSfKf9sxJA+0Z5pVXZOksMaLrJUWKXmw5LMWktSC
YFNij2H0K/JAJ0TcQ+2+LHZZa6lKqScPqIwFOZGcO1hRagIWN50H9RqPX9/8
qYJ1ramvEfqbBwX9uOf/zmti6xyy4BJNPtDwF/sFrOlgKa9F1J05nw9ph1sm
ekH3saoTXiiVSD6oXA7f2mQ0xoaFPm3YlcsH/3Y/j082ZljSHV2ZZf18sL1c
xmnvZonlOkCbJm3ygZNx8bW30VOsVSG/3IBXPoRVPL/w6+JzbI7V2Zamz/mQ
HNJS8y7LEbvJSa5Qmp4PuqFKXCfWXmKlBpda06vzoViMNP+U2R3r7Ue4E92f
D2c5SlupL3pj27AN7R/n8kFJL6GKbPgtlmEjS9FrJx8C+URuqCv5Y3XSIjod
6Asgg2aQcjw5CBtt6K1swVUAE7+fTL6gDsVOn7bp1rtVAGVBV51lZ8OxvG26
qkp3CyAneqP8i89XrO1r6V6sYQE4n65K2PaNx5aICKgLPS+AfOzDi6Ejidj9
H2f7ud8WwKXr1Zpr/alY6RhyzTNRBcDkgu+PD83CvtdcHqDMLoBPDtG+wtz5
2D7KEa3dugLgPSvPeP19EZa1ugG/hC+AhlzsSb4vZVgD+2ydyYUCoKN3om1/
UY1NvBo53L9fANMq8+um3+qxP8e8dZsYC+HpOHXLp7PNWKEQm5ESnkKwxzDf
q5Noxzop6OmnSxSCf0fajs7lHmz1vjTpq3IheL5rgu/HBrDHCwQefDQuBF4J
w9wWzyGsoiXbmKdjIaTl5QTezyBigzkoDB38CuHjeMpAcOwEltC/PP4ouhAw
lMjrWHQae/7diJFeXiGkT7yrCGqYw5pjGicVmwpByEFw4tPSIjZjLdsYO3KE
z6jJ82tiBbuWEjl1Y6kQXvA9O5B/uI6VMPAx5SYrgqhjZv6Bo3+w7kzPZlhY
ioDXsuQ81cEOtqlFz5yStwjosAyLZ+YOsLSvZOZ2pIqgU2L9ocx9cpymsKDF
kloRvJfsKlDoPIGLnGf7MWFWBMs7MUSHCWrcxFcKq37nIihhChyhy2fAXdZY
WWj8UARII9a+QeQ07pyHwm3Lb0Vw7uajHcnpMzjG7PgPNKVFkPLnUiynyjnc
idGdseyuIvhyi637Z8QF3C6VlqDGdBGs0JWPUG9x41bFsjw2t4pgyzEhOrn+
Cm7O/ER/BH0xfHoV0u6reB1HCjHilrpUDOp7B9v/PRDC9dWVOkxIFINAIdUm
Y+RNXPMKY7OX6pE/rcXyxwtxXAWHNetl82J4sZQbcpMZg8tTbLRscykGzH9n
yzg6EFzyS47yJ0HFYLTNmrDLJIv7kvKC5lRyMXBznnifvquAC8b3PCioOIp3
7kWgaoIy7i05b7ZOXzG0NAiVKrJq4FyFvA6254qhO157YdhEG2drRFKL3isG
J5lLJhXKejjzgJvfgKkEzsYmHlptGuDuVwSsT18pgVhyGVs81gSntjAn44sp
Add0V+X6t+Y4WVb4fE2zBC7t7D0TsLbC3ZaNnO+yLAGz5E/nYyltcDfs18Tt
XpfAdL2vyjA8x/HEK75nDi2B47T62xuvHHHsPYmkkrQSmJyN9H6m+RLHsL9/
/X5NCdQybYUmj77CHee79/rfYAksIMYcZhxeuB3d3J74xRIY7t6I6lF4g1t5
S3VR9rAE4oPK+OVP+uFmC02e/2AphZraCFX88wAccaqiwZ+vFOhQG6IXPhjX
c4qFRRApBbEEr5y+H6G4RqzNo36dUsiPrZLpfReBK3vSUuL4pBSk0JvFtN1f
cTlRF6jYvErh2nC7IJd1PC6x9aV+ZXgpRKfEpr17mIiL/NOfYZRVCq58s1JG
pBTcx0vX9481lMK/O8jDyLUMnI/GG5VkQinYj1G1kNfl4l56jMfeWS6FNjER
dvuCApxNttjqL/IyOM1ZPfuAvARnOhqEBrGVQXMa1RPyuXKcHvViiIhgGfx3
qgzL71CDUxGXnh2SKYM3DsrfiLP1OOlHX2+56JeB3PkT/WdONOMkQjd9OWzL
oOl9kcZAdhtOoF5lpPZNGbSW8ec2/unCcf9OuWb2pQyeU8FK8l4f7iwnmdvJ
vDLYucIv+m5hEEenpN+V3lwGqdcX01W0CDhylwJOldEyuAyn1qPUR3FbKbS2
q6tlcMpqI/7e9iRuCW9eF3qyHN64k2twFk7jpslrmMQ5yuHKs/uRN8bncASh
s2Yk4XJ4RCF1/m/AIq7LyK7otUI5mNfG3/5NWMY1BLSf4DIsB4sD8yzXJ2u4
0gpu3Sb7cjid41xmrLWJy1pwS7P0K4ezyk73kKItXALr0A5NbDn8iz21Dd/2
cBGygko5heVAXvCSFcNGBgH276I12suhb8yaqaCaHLzjvy9vTpRDRaaecH7v
CXDukYTIzXJgn6Wg5HlIDQyCxXPtVBUgk01BzyxKD0mBQgF7HBXAsaWnn9nF
CLeXM0UEhCvg8c/3Lzo1mKFf+SrRSK4CGFV9xQRusYJVVoJHsH4FjL3I7RF9
ww4HtOevNNhUgG+v7/ULqpwQ9iSqa8OrAs7JNH+4OHARrneyOFwOrwAWH3/k
qsolaOALZtfNqAAYSnbUuXQF9Pxp6/xqKqBY+y2Dqck1WFn0tagYqACrfUZc
1RkBeHuXnH5pvgIy3hp/NE0TAo7014WcexXwkGSu6Hf6JhRQ7eirnaoEN+0h
CcLgLbhj5UjmdakS+mTNlHDbEjDZ+julQLwSAvo3KtBADDhdfaIyq1QJzZnH
Pc9qIED3bn7jjHElPLzZ/PV6kjQkzJt8UXCshC9SgQ/S7sqBpPw44uJ3tH5P
SCde+Q70Jev9yIiuhPfRkUPh5UpgcQIfOJZXCTovuoVyYtVg31xNlKG5EgrH
e4aWT2hCaFMHCYiVsPLkw0Dwe23g45H3er585L8FBlbmulDnU3818VgVECzM
NRe+3Yd7M5ge/JkqYFL3WtlWNYJl6TLHk3xVYEl0u3EaawJvEm7+J4Grgi+1
57/PRpnBOfLc+seaVVC7lk95XcEC8kz4rL5aVMGFkbLvqNpjUKhPZuh2rQLr
e4UTfdVPYeIiV/HBxyr4M16esK1mB46e0Q+EEo/2W9tdFfC2B5rvZ8lNS6uA
rrf0Rvs/R/gGoWmhnVVg3PLm1+kuZ5CIY1BrnqwCtwdW9PZbrtBz8P7P340q
mI4Tavj0wR3MjU5E81JVA40eBtuo6AV71Z7S9zmqYfXAf2vvkw+EcO4vfBCq
Bo/Th4upl3yB97VzULVsNWDGXMb+Ur2HmrH1W7/1qsFWlk5TSDkAdDDPxi7a
VMMcjZzn4HYQLH1d9Nb0qoYPwt9Mx+lDwHvP/Nqbz9VwVQH/6ptJGLA9+N5b
nF4NHQRz78rDcMiteOD0o7oa9vhSmS6uRYH8OQIH+0A1fKGdIWc741I75qLZ
qDhfDTVv3KqebZjV2hO7H7/arYYSR26gwj8Aasm7jDkMNdBlSf3KfcUF4iOb
Sia5a4CbPste2DWiVmwbDJnEa6CV59mtJqdPtV26lRQySjXAkftQYszlba1Z
qViG48MagLdKnyUrH9fushaopzjUgIP+Lt9SsyMEOwlsEd7VAKNash6DUCBc
GU6LoY6ugblU2n/O7FFQfYtHViqvBo45H5z/1vkQtD/H/XzaVAPXqrP3Gr+F
1v7cPPcpdqQGmK/4+ga9dqj11A4X71uqgVOwJ6Qr8A7OFjFNHDtWC/O5Bimx
6fa1BgF72rOstRC+fsGOZiK4NsF8rrOFvxbkfP1OH3zzhB+YXul06VoYZyBF
loSZAP+Z8vIPerUw+zBd9ZHdzVr75QShZ89q4RpdK36hQAtKmwNS1d/UwoJ9
mOMk82vYj3E6f/NLLTikDzzQSQ2qlXYy/nwmrxbYaWxpW2eVwU9VkW67uRZs
QnV6W6YioPuKqA9ptBYME4m1X8ZC4fQh527VWi3s5qN5ilURkPXLp6yXog7K
txp4d6zMoYewvVHHUAfiWW+i01y8atcabW4UsNeB67zlnYTsSGDJm7ZO5KmD
S3537y/8swCxaN2UsBt1kPenIyPon2Otvl/X1NvbdTCZgt+L2zSAV44op7Nc
HViwF+kYFUVBrHGJnpV6HfBgzzPThetCvfL1MP0HR3gFBrjH/nEwKxHfq2hR
dzRvUBJ1eULg5OUztJjndXA6RJ826FMsXGPylxd4VQeeZ2SuMIklgvK/A6/z
7+rg+QmmPkXnFHi26FB9KqQO+lbToh8OZMCnoYVtspg6KM6TK7xW8w2K6g1F
11PrIOGJnWWFYQ4MZw/YzhTUwYc5C/Q1fT7sRClk4qvroHY16duFhFzg8K2a
b26rA8MIkRil88WAsxfmLh2sA7FvStqCR33axCjFMG2iDko9RuhFj+6pN4r/
RUUt1oFwvs3If16VkCIWjPffrAMJlGKHqr8elhhclWxo6kFJjRaxYGkFhr0V
X6Mz9UCifarKt9sBwj/MGtQu1gP+gDO3jLwTtAdH/iHX64EsWH8y51cXONWq
SIqI1cOXvj/fLRX6ISqzwfESWg9zl6Yjvv4dgKoI8TwW5Xp4KpauKpmIhwmf
rF8ndOvhbwD5TIEvAY7ZcV3dMqmHIArlcuVtEvAYhJsuPK0/mneqyVUdx0D+
Dm0s0bke/sn/+GoWNgmPRT2JHd71kPxEsHSRfhoCLv5hqQqsh4I6hPbw2Azk
0FmrZ0fWg8Dvtx9isuegf3viQ2xiPchsG3HuYhdgc1arNSinHhjsZug8//4E
1v42cq/yeqj/t7MdLb4CktVYnH1TPZRQN7Mky62CQXqBi1lvPUT4alkrya2D
++erxdqkevh68b5Klc8mfPOKXpWbq4feFFrUyuMvNNkw8Yuv1sMZ9y2e5pZt
mNf3teTdqwfFG47FHd57QC2/l8B+sgG+m0fnjLocAL+I3QQNUwNY8JvoaraS
Iarn59j3/2uAx4QE79Mm5Mhzmvs6y1caQPX6Sw+N8ONIybRMVy+mAQwnycrU
TlAjw3e81gIVGmDD90ZNuy8t8jenhlVZswGKvHxfBAgyIKxn9qVoDBuA70ee
SGoIIyLuJmnSZtkAHLShnXTipxG9KSdfX/sGyDEudc05zYK8VCjKlH3dAI3f
BGo8j7MiZcw3/taFNMCb/6ZMXd6fQ0Zcnv7nEXPE9yetuzUvJ7I9mY5g0xqg
9fKttBjiBYRN/sejvYIje8OjLMyZC5HI4vlQXt0A3r/be7yuX0L0TpvmObc1
wN8I4d81ezzIy5dxQ7cGGyDp2StXh79XkMiJsd2N8QawEjK96XT1GlIue+5i
wUIDDFCbUyv5X0dIGbpydhsNcLGVy+zqOUFkl/GzteBBAxTHM5kt2wkh55wH
gpaoGuGlcQ75xl9h5Pb4qeIM5kboBMHP5nE3kfsyKiSr841w3SVXK+TpLcQ1
3f/wyrVG+Ne4b/LaTBypeHFCMRHXCD3q6+RBw1IIaVTa1uRuI/jRhA3sa+KQ
XdQz7IJ2I7zPqqhJ90OQc2nV5eNGjTA/NIM/d0IakWLYm/j6uBHKWk17x2Jl
EANHieP3HRsh4B6L2ZX7csgr0otrbB6NQOLnDePHKCBVKasOYWGNEOQ6thrp
poSM0QlGacY1gk3vfw2XR1WQffsnNYwZjfDgr1bYDwl1hIOYNtNT1AgyqqmU
crEaCBbmqQJrG+FVhNkNhYtaiFHyJUGljkaw1znrEVmnjbjTmmhRDzWCdOjA
9pLPPaSGMBrz9mcjDAQPsiY530cmsOyNMn8aQecHrWZJjgFykHhv4RhZE2QI
C1HmMD1EztOE0dfRNEHBUTcv6zdGcHb9Iu5nmqA4uWnujagpYjTMoIe52AQz
42p+lgVmiDtG+fUuXxNETs/tXFV9hNRStbY6IU2gzKk+TzNnhXx/dnxZVKkJ
Lk8KmzXMWSNkQ+jpDZ0mSIuvHo+ms0EuSnmI5xs3wfzMHl2YgS2CfKsysH3S
BH7OGSXqS3aIMeWul4BTE0jX8yzFovaIp4146i/PJhi2VTuQznNA6iQL1izD
m+DJilNQyqQT8j3uN+uVb03Ql7XYt5D4EiE7KYCZzWwC+p5e+W0/V+TiU2uT
hJImQCYeujYEv0LQgVRf4/om6GduGBWqdkdMJeYyz3c1wRg9Q0WinyfiHcvd
PzbcBD0vsnctW72QBuuY//SXmoC1tuvpt/dvkMLFJ0+M/jaBfVPkl+DNt0iS
1e1KM7JmaJyoaB53eoeE/aCifUzTDMFnDYP7mN4jby0I95+xNEOc20hvYYs/
4jSXnOFwvhlKqlH8RngAYmHuuPuStxl8L7+edXjzEbljyvTFB9MMOX0fzbKN
PiGSU5OLfvLN0JkqbazkG4LwGedIflRvBiM8xdh4bSjy3+Sr96H3m2Hh7qe/
6XSfETojJWKkeTMUJWf+emcTjvwbY78W+6wZFHIFEwtnIpCVBwsvE18e+aMr
ivTsopBe/bdsOQHN0NNLLTXbH43UjWhZFYY3w0DTh1T19FgkT5e7rCy+GThs
BcXEVOOREJ1a3caiZrBOa+vttUlAfPCBqW01zUCnx1Wh9zkRcdQy2Opua4Y6
gUzqke4k5J7GTvjI2BH+4YMOsRepiEJf6/z4fDM8I1+P359LQyTUwsVmVpvh
h+aNh4+fZCDsKjeHl4+3AJmuwjHHsmyEpuvYlQ2GFrD78Y5dwjsX2VXse7HN
1gKcL95eDSnIQ8bu2JyhEGgBD4pzbO+rC5DuVqlHVOItQM0j88N8pBCpkacp
pkdbwItchl6XvBiJk03VZtNpgRXqqLRQ31IkuPFFEufDFihMbBDUmi5DPKVl
N7kft4CDhuDUHfUKxBSZChV43QLrz+4eY7KoRrRqc2dE3rWAhGJDRcapWkQW
535T4lML4P/D9blZ1iGXMf8NSie3gI/6lLDy3QaEtXKR+05uC9Q/1g93V25E
Tt4us1cpbwF+rr7ZEIMmZEFc57RedwsInLrOWZDcghBLLpkaElqAMnWn5sdk
K9Jxaz3fdKoFKF5MCRpca0cybwZp2PxpgZqXettRS51IdIHhN/vDFrjrjx8q
t+xGAoT515ypW2HaKeZey2YP8uxGe7A3Zyvs3NBjHLjUjzzMifj+7morWAZ/
FH9NOYCoC1gIBQq3gr2bM3PqnwFE5DpFX4RcKxRceHjq4gYeuZTRfyFGrRUq
29aKlSiGEZZr8bYJ+kd+qY7dnAsE5M8V7Klsm1bwJoVN/XMnIrhp6Vb/l62Q
3W/jNzRBQnxj7nhY+bTCauxytLHaGMLKov37UlQrPGvZ/nDr0SRi1Kufeiyp
FR7/kFFce/sdSfF/+HAypxU8t+92UphNIWLHnvR+aWqFoo7MzBGpGcS9yu7d
y95W8Dd/2mciMYu0ODvBPVIrcDHxOwgjc4juilcu0+rRnOP6KVzN4QfycjQy
yO+/Nigx9FOtdlhC6sJjFSyutEE45QOJxOFlhEoz6VBGuA3IhhaLre78RqLa
cm0P5dtAomXn+l2BNWTap/jquEYbZHl+2D34t4bwQeVkhUEbRD02tuMjrCMV
xS1qTvZtcFcdz76XuImQP++i1H7dBsdXDkMEIv8givwDtcJ+bXBFgkNh/fNf
ZDRh/MZyTBtwHPaIGuRuI/tBm6fM29sgc0UCZTP9h8gq7bai+DYQCL3KKJV5
gAScJPO8MNkGXVLux4TJyFDO17SrpM02eOlsdeKE1THUQoIprezwKF7bttSX
y+RozgarcThNO5TMrdwnLZKjOGvuPo2L7RArIddK/e446nuZ1+/G9XboYrYX
0zA+gfZ8F0Doxdqh4JBsZx05iRrpSua1KbVDRF9Y+Q4bFeohqx4Mzu2wHHb2
McU1OrTtUOcOp3c7ZLi36zNI06OMlQ/I9gKO1r+JU50wY0DjhS3tShLaYdEa
14WaMKJ1593VBXra4bRa5Pun26dRKpIPFS2xHS7OLNR6ZjCj6p/f1y3MtMOj
q/NemSYs6BTtZ6GknXao8GZ6+HXyDEq+k8n43+UOKKi/PSTGwY7+1y29ATc6
YHFIy8jhJzsq+o04ZC7ZAZqv1Cpyqs+hj+5Sfs1R6YDGi8x5Rg4caFuU6WVp
pw4w0qbviWW4iE7Z7FBaenYALi8I99b/IrqLBv/84N8B5p67XJeouVD+n9W5
Q7EdUBXk6x/NwI0G3Wa//bi1A4L65oPZpXjQNIY8jo/9HUCYs4hT7+ZB66bl
DwtGO+BDeuXeI9PL6Lq/Y9P+7w7QGD+tI/H5CnpvtFc1mK0TrPfTw+o4r6Ec
r3zNSh93ApbisjtnpSB6S51TfsyhExwGebcm3G6gqjxFvMfcO6FO0ZGu7oIQ
6tE1tawY0glslNwyaT+E0GkO7MuJik54XfAmQtFPBE2v3gg4QdcFpq02TZ+o
xVCxQ+MSrZwuiGIt2RGcxqLKKnXecmVdcObO6AU1cxxq9vWCmnhDF2QICNqe
+IFDg8Unfpwb7gIB/OltqhVAF20fsE//64LXwSqG4WQoGv1d55WdSjfULtWb
RbHJoAWCxXdMdbvhusaNzaAHMmjbK5Yz2ibdULjyNcImVgb9wzaYLf6iGzie
7m7VX5JFVTXUJw+iu4Gef4fxJL8ceqxBUTpwqRscLGNmPvAroGyMGQwef7vB
hLSV6W+tgAoaUY/akfVAYKLk191UBfT+bquDNksPeJ5N+XmK6w5aJCKX/B+m
B8b2L6NAexft8Ex6Ti/fAy9nb2L+ytxFv/dQ4A7VeuDdsDnjjNtdlP5Jw/C0
WQ+4LWw9RhfvohaJQJXxoQeW3vncVCpXRF+txeK/fu6BYymLrT9/KqKhcBAf
GNcDn98aBPv9p4TWjVZJPi/sgRPCGoVJLkro8DWOk2bVPWCsFabImqqELjm7
DWi3HvF5rBn+dFAJZWe5/URitAeUHk9ey+VVRoVMo8T55nog3GasIEhDGZXP
26bg+N0DozXTjlgXZdReuTT6kLwXxFf8qn42KaN+X1gfr9H1AksUedbkgjIa
t/Di1gxrLxjO+RcF0KqgXW9Ee1r4eiHphnjmnrIKevtUJ/mnW73QO/f3D/JM
BU2LMhF/gPTC52QaqpVAFZSVZ/vJZaVeWNus/fAvUwX1yfkY/1unF3C3Q12s
21TQVYnLQ+XGvXDyneIJoRkV1KixkvrNkyP76aP0u/tH8UcW7Nm8euG5+T1f
q2uqaJqpR+r0h15w0Ixns8CqoqzLZ8aywnvhv+kbL9PUVNE3zlmMzt96gVB0
7R2/sSq6dkxGDs3qhQKBU46/n6miRgFEF9rSXliu86tYcVNFu1jtcobqe6H2
IS837ztV9Pa3kzNxXb1gwdZeHRV8hHc95qw1oRdIQuOraOQRXslNZdHpXuh/
+c36QuwRHtLhebDUC/zeU9eEE1TR9Q7j4ratXnAki3Z3SlJF8zL2HO8e64Ox
SMLBypH947d8UM7JPmjpOhn9JVEVPX8rJJ2Zrg+0WLEfXeJVUW3X8caXTH3g
pC9vGPBVFf1QyzsxztoHfm0rs4NhqmjDccdtaY4+ODx7SUEjQBXdvlt7Oo2r
D+qvJx6c8FZFbwTRCNBf7QOaG+IdGy9UUQu8joI9fx90FuOrOaxU0Rj2byYE
4T7gK9sT89FTRfFGS24Y8T5IWMghXlNQRWmTxMO/YfqO+n1NPLOoKiq96J13
UroPxB/rtMtcUEVdBHs6nij0AaIcOVZNdaTPgX2uT7kPbvTI575dVUHPH+Sy
f9Xtg0XtVOypShVUR2bvJplhH1g0IfvEGBU0wE9e9ZFpH/Sjy2+Oe6igO6fH
vW/Y9EFyysfZQIwKKqTHGxNm3wdbW3qELTYV1CLGoXTHuQ8+8uu2ETaUUfxV
mqVG7z54m6bhczpZGc3DiOvoRfaB7RW5c4J/ldAfXt621TF98HW59y9ZqxJ6
vrX7PXdiH7id/SzgFa6EBmiY1yxl98Fj8OJIF1ZCrSw+XfVq7IPViLPHXukr
oheCf+2kr/RB1dhHm3anO2iNiUd6wUYf3PGTEaq/fQc1usmsX7ndBxGJDaJ0
Bwpo9PDtsi7yfiAcTtNVeh/1E05/p9+s/XBMJIX+3lt59HQG74Yo9EOqfDSV
lpMseqLp0VJtUD/MquwmXsQgaNLnna9tYf3AjzmvbroOqKxloFJ/VD+c+oLv
3H0KqDdNccZ0Yj/YjqRP1Znh0AP1449PlPWDUqNbGkkPg26PJ8wpfu8Hq6wB
9SvWEmhErthnrbl+kGUQ5slcFUfFvDpkDX4e8ZORz5R+KY6+4FlPtNnsB6LH
gHeLvxi6bo2aBlMNQHW+ETWxWhT9tTU5MSQ0ACop74yXjYXREsugBkWxAfgr
x7w9sy6EehJwKbVSAxAYYvvbzVcIZS2NsUmXHwDseZENiUc3UGmnB/uvDAag
tuner1YsP0o/T/N9zWQAWO4Wxem+uo6O6FQ0WlgOACf5+ba7NXzos1vsH9Tt
B6BVISpGT/ka+mVzmJ3H78h/5+0U06cr6CNz33+RgQPw69ECe9bPy6gQ/tYU
fegAsLJyc8QpXEZbCsPStmIGwJa9f8yDlgdds9cU7ywcABcBiV9JFVxo1fSx
/5DyARgoRpS9BLlQX838g6KaAXBuWzT6kHwR5RBhbIltH4DkHc/RM7cvoHfW
urXtJwcgalFRJNPkP5TZ5LXEj9kBsOjUrPNwPYdO9PFzGPwcgA5FRnfeKHbU
Me/DjNyfAbAKuKeU9uMsGmd7156ddhBuaeE6L7eyoNaT2zofGQfhz9nL3OZ0
LKioWpokBesgNNwYkuy7x4x2CFIeW744CM/wf8xGdpnQv8tNQXVig+CYQBIz
3mVA6w0dHW5hBuH3ten29gF6NKD7km4GOggbVKdGuIvoUO5s7/NhyoOQFdzJ
+yuYBl3mECGn1hyElnYx3oMP1GhZwNTca91B6Eh5MaMQRIWqPEWyLU0HwcZ/
XL4t+yTKNvY7eMxyEHb0jn1KbDuBTivFOWrYDML52xqEg5/H0ZfXD6SkXg7C
kMvuvJccBZr0s7KD4eMgUB5oTU0ok6HPItQuWYcOQnbZk4ZDmUNEXHbGrTly
EAaHm8pZdv8hHTE0Aq8SB+Esb/47V789JEwx9i0hbRCUwssmhIx3EaMt4QmR
nEF45XOf30d6B1lT1w9aLBuEQ/WHw32Xt5CKf0s/ZGsGQeHDMxfJK3+RNxme
SHzjIDxx+CXPJvQHYTuetnav50iPnO3axYcbCK70r1bTzCDQNfwsXuVeRajM
/bMuLB7lz9p74WbvCjLAeP6E28og3Hw9+lTNchl5ZC1XIrwzCBHcRbSH9T8R
wbNEhsCDQUheothM81lEthufWi5Q4AHHP9Ipr7mABHCGscUx4IHahpIlkWUe
uddx9fkuMx7iQ1nVAinnkAvOle067Hi4cjvHqebELFLQN+1Kx4MH7/5P+Rbc
08ir106Dltfw4C7+6tN/yBQiz0fD3yiIB/KLBQlhlt8Roo/wuIskHr771HTi
k8aRBKHmW0M4PNg/pdEW4htDno7rfRSSxUPVfpGaQR0JIRP3hB+qeDhJ/ajq
K8cI0jHDHCmtjYdbG/XSLlPDSGhw6mqMPh76QjDh5UVDyJWfPd+0zfFQ2YSb
534ziKyGm+7mPsbD67STJ297DCAVMn81aW3xwK1UIxfk24+oxHAeb3DBg9yX
vI1p216EVTHfgNMDD28Dex9xN3Qj3//KFr98g4fkeAdR5mtdiKP6U4sbQXjo
VQsoCxNuR3D/Dmv8w/Cw+ohH8G1/K0KZEXp2PgoPVls+ykTvFuQLRWVbdBIe
DIVpTIpZmxDzPFWu7XQ8BFqu9/VtNSCChtMuWrn4o/eMn4bLj3qkvoT6Ok0F
Hng+HpvImKxF/M1ifB7V4mFPRzIzgaEG0WYUHqtrwsNmxeX6Op0qZOGxXqBz
Lx54uZU5/+MtRwpYl+YG8HgYKM+XksgvRdwaPXCCJDz8PAz8oKZagjBwpv6e
ncWDUPRt8oS6QgS55zM+s3hUf7xVZ3dqAWIf9LBzegUPmZ9Che/G5CPDx9hS
v2/jISno84GISS5CJbUZNvkPDzVCRC3rL9nIbcc+7wnyITB41Dqu8isTiZ33
MxqjGwKu8bMZLb1pSN+FR8qjTEPwlKlEWdIkFSHXR2+TWIdASeOuhdTJFMSi
c+fMyMUhSK9IPmB8l4hEHh+mIFwego/ECMx5kwSkA1uwNsQ3BNJeEe2XlL4h
gnnW3YOiQ9BIy5MrEhmLGC/KVw5IDsG/Lwob6w3RSAj3pfR+3BCEUt/KHaH8
ivwNG33Te2cIwrOdv/qSIhDenlL7HpUhqNNXcdt5FI7cpwwz7tYcgv3XfmU2
Jz8jNS7KmE6DIbh+nFvwrXcIslrAy9dhMgRvrwYuMBt8QriXjrO1WwzB4+V5
+VT5YET78tSJtidDwO15ovir90fE16h6o8VuCOxz6SOawwOQsoioqeYXR/o8
fm4UtPojP/te9Da5DoHKm4JiBpb3iIqMYGbDmyHYeqMv1Lb9FnF/RRNV/34I
tE+9Tnf4+AbJK573rfs4BMoUriYrkj7I9EqDY23oENjQRWyf2PVCWHjjTGsi
j/AWjI/juz0ReRM39eqYIcixbhcOtPRAXn7RxVUlDIGg/tfS0/deI2N0jOcq
soYAl+BufyfUBWGQX6Iszx8CyZEf03UTzgji0fantOQo/xhJeSE5J8S+LGmm
pHIIygfr8guaHZGkNc/+4rohCHuu99TbyAEZ5jOsLWoeAp9am+lsevujfiSZ
XdgxBJ6LjpzogB3ydHjNLx8/BA+qVUpWb9ggsad6nPKIQ7A9rXifi/8J0ncn
wzx3YgjuXTENXb77GCH39tXMmRkCjUHhSoZ3lohopSmSvTAE5kkrbIlTjxCL
TZxg1vIQDPkpk9Z1zZFIgf84MteHYM29xOjcoimyHze4lbY/BCJdg/SuGsaI
IDF3LvXYMKR9jNDvUjVCjE8HDKacHIZvyhz+L7kMkBAlq/pk2mH4e7K9SYTz
PtL0RjY3iXEYbJIl9Hok9JC/1RdjEs8MA/3EA7cUp3sI79a+f8K5Ybh8R8pM
GK+NBDwutojnGQad49Fnrk5pID+RbD9avmGo8W5LLXJURxTYkjOcbgwDjVr9
QJqsKpL0O7prSnQYgkIn15jxSgh5a9iK8u1haNOjV73z6S5iHBvAWAbDYGWk
krHqqYDUvHgjckluGMQVO39RfJZDXHgcnXbUhmFjNkLUR0AaGd57EmmuMwxD
1f99Tc5BENFBs4re+8OgSriWl/AJh4RkPBi7bTwMc3uKEwKUGGTVS+sg+dEw
/LDNirfOlURU9ZUuMj0ZBt/HaWWG78WRTCEZ6Vd2w+B5oTz6m/8txGJSxFfT
bRgiv9a946QXQZpK+NKqPYdBXvWZjZe7EML9kbuD13cYtv6tuiVcFUQ8H51b
Cv0wDHQiAs1E3+vIOOY0w2HwkX7uX1eirl5DbrPQCFmHD0Pl6uYH4d0rSOSv
Y5pDX4ehnfLMJM0BD6L9Ze1zZsowlHxpDBp14EIKni+WsmYNQx4Vjaoa4QJy
6u4U0St/GMokv98bneZAnl4k7i2VDEPsJjv2o+U5pGOrj1Ov6oiPdBx+k5wN
4e1tg8b6YSgmXAnVnziD+KbUmQi2DoPwqO5vRyIzMvu6zCeqaxhYKHwauLhO
I6hOXvLxgWFQMPusPKXHiMTyp7XaEobhkQyudWWAHtmniF8kjQ2D34NK3C9u
WuT+aASt/PQw7F+KrdDNp0LKCoIE8n8MQyqPyJD7tZMIq/87NY7lYcjlUV87
QI8jDiYez9+tD0OpRqOgpxY50ifhHLq+NQxULeTShrVkiCCjbbHhv2FwzhGo
rSQ7gIAfFoQ2cgJUSW5n8wnvwc8ao52bVASoUVE0dKvehjvh9/6LoydAIgXl
2CObv5Bso4qlYSYA9tHzLTauTSCXk3/4go0ANoKKnI3K62DMgfP6zkmAYsp3
q4Meq1CzcStR6RIBftpSSbwtWgaOToHmEl4CGB1wN8xw/ALXhMs/uAQJoN9i
Mfy1cQEILpzUgTcJgMnYbcrWmAdRjTPXtyUIkP+vZpMlYAZCeOlVzHAEaNlN
CqdVmYbVw+O2PTIE8GB7OsMf8v3oXO4HS94lALlMb3Rl/xhk5WwWJKkSYPdY
qljELBGofZfwp7QJoPblxx2fzmGwMJz966pPAN37CoJkR/9hk+gY27wRAWL6
n6Tv2Q0ANx3+toY5ASL+TGqdyeoDz5lOg6rHBPDbb/4v3rAXJioa3a/aEuCa
hnXxhbUukAqpjA9xJEAst4ydvVQbRD4ubPjnQoCHZ9j4eCIa4S+SOWvlQQCy
ODbH4fBmqEr69dX5zRFfiQdijY+bwJuKX8v3PQHEA4dWvLGVcOfpU5rPHwnA
39Zw9czbOmDoy6pPDD2yAyS5Lm+UAv7m8suCSAIUVovI7vaVwJcIAaH6GAJc
bufRqqAqAuM9mx+9CQT4GHIQEfGiBK48zImdSCWA1/HkhuycIlhqWNFZziKA
nPic7cDFTCi4coN+P58ArVkh0q3+efDS37aJppQA4QY/MMjzNMCt5LqxVx3V
d97A+zaaB8c1V0V464/0rUhWB2SlQEex0E+xFgIs8NrdG4rLgGD259/kOglQ
MRhgldgQCvde5+tp9xHA7qLmy6bvXsAxtXbKbOioPhttS/51ITAtK9L6nHRU
D4eWRr+sVEhLs3f3nCRADkmayoDxCzyjK7wVNEuAZ5P5Clc5wkDUbmMpZpEA
FN+qijpZo2F38GZS1goB2DaZnP5xf4Q6cccHlRsEOEO2E+n53R98vxad7tgm
gHvzKxE+6Xe1yoeb7SP/CNDsZizlmOQCp81uef0gH4EifcGvxq/iYaTlhcRf
yhEwIXgy8aXFQyxfye/j9COQY/87oEXIFcw//k1hPj0C8RxqNxevBtTyrYsZ
cZ8dgQg/tkPzZQdY1XE+I8wxAq+TaVcbBGOguLy0C7hG4F+1e97dxTe1rpzb
PqpXRoBPXy5kwzscEC8JKcPrI3Ci6nHiGMm79uTcy/UnQiPQPab8pyfGprbr
Tnm6660RkPgeONou6QghWTvG72+PQOJ3z8vp/z7V6jHeZouEEeDV4rpqe9eu
9ryja2+K7AhczTfB6Qn4wSyhwrf47ggYrWnFbfY8r82Q2sM2qY6AbJw5c7JC
aK1dnNSfAa0RKDM1vKEnZQpiFK+ypvRGYPiVr8TKvSjYt6gyWzUcgXcy4t27
YYHQ0LF/7tB0BHxCH5rKWL8AP0HsAL3VCHy7Ql2gWGBVqxry+j2HzQik3TDi
uyj3tpblbzVy3X4EVlMeqLOZfqol6R9sSTqPQH9nHKeadURtfDUu986rEWBg
u/TBltMVLLg8LHS9RuD65vrw9H0D4H9by2nhOwKax3sTx5vNatcXDvGOH0aA
/aSWnAKlS22ZMhLgEzwC9L9X/ytfjwL3PE+ZkM8jkBl5xnDmMBxkWep347+M
QDNr0lCScRjQvDxWkBs3Ag4tD9r2aUOgbxR9XJM0AntvpqNLNoIgHLwvdqeP
QCG6vc8kHwAGiQ2E0ZwRsBTon+Mifw/clBRBPwtH4IqwwIo+hy8sWMvI75SN
QPSfFlVLfx/I6fH5R1kzAn+pjmUwyniBo0hTEWvjCMg4zdKIvHIHC9GL8Z/a
RiAuxCA2M94V9MRefaDrGYF8y9E8bnAGRYkRp3eDIxDFUTf2444jSN0WNSUn
joDqzwsDFPnPgR8TrPJ6YgQsepkraUaewXncksT2zAhIDgcQ0ietgRG5w+Ow
OAI/21t/sVtaArl00qmVlRH4c+lPXLaROWzKkO1ZbR7xlzRrDi8zgTk5g/mZ
nZGj++llkGG/EQwrlPUbHR7590pK/NvuQ9tdlmricSIci5FxXpTRhQoluzRt
GiJcT7ep+iOiDVkqXaG9p4iwYtV2UfCdBsSq8XooniGCs4A8dY6lKgRpvLFu
PkeE3B8isu8fKIKn1ncd5CIRIommefeG5cFeB4NWXiaCHqPJ1s8WGTDXjeQX
u06E/XtV5zHnUbinv3k2X4gILK/W9CEWC3ceqFPwixFBal2agStaEiQNs1ZS
pIhQpoBV2eISA76HVCQulAg0dZS1l8/fBA4T8+ZoeSL8fs9Eq+glBAxmdXln
lYlANsQs/8uNH8gecUSHaBBh/suzX5PBvLBu8fIdvS4RKLN7L5AJXIYZK7y9
nwERHic6fHXBcQPeWsiIwpQINl3fDT88uQAtTwPuulsSIZ9baqWG5j8oe7Yg
uvOUCBxU3ddPypyFDDvZi472RNByEqlaPGSGaPt42t/ORKgG+8PYG0wQ6Lj/
9/FrIig81XExeUsP7k5607PeRJA331J9pEsNdi+Luh/6ESEoi21iv/oEmLoy
lpMCiaBc/dJwPYkctF89TdIJJUJft/ay559DnLx7W1BfJBE+CLyNem68hxP3
5HFTij3iQ+ZW8MRuC8fr7WnRkkiEmJ5q+2yGTdy5N2MaaPpRfGZx03dX13B0
vhLYqhwi7L2olVzUWsYdvAvjFS8iwtOwqTlPhkXc6vtV5oJyIthSf3tq+2gO
N/VB+ZC/lgh2lYKubdLTuIHAtJ+pTUQYzmPGyF2dxDUFHR/m7iBCUTHH84dB
JFzJJ+P6mF4i1H4oOWj+NoxLC63KYhsiAv2SWqmc/CDuy2e2yFASEd7zLEvS
WPXhPkQ4+jB8J8Kk8FKW+s9O3Kuovmfv54hw6KsgaVfVinv2lf/+8V9EsKJs
YNu53oQzjvGT81g90vOiHhHkrsdpxs0K7f4hwkung8+sZ6txst8Qjhd7RLjx
c4ExKacMdysxmnKVjAS4lkRxtZUi3JXk7XXrkyRIV9Rld6/Ox7Glak/M0ZKA
ikaQG8eQg6NJz2s3ZiJBP86ORss+HbefQVc8ykqCZJ8X9439knErWVbx9zhI
cIxz7fgJsQTcZE7Th34uEhyGimJs2mNxfcvHl0SukiBUFTm5xPoFV8cvpxzG
T4KyuytCq2zhuLwnb7P+CJPgrEJ34lBRCC4+o5lOV5wErbhT/umpQbjgxRM2
ZRgSiAT4D/9q8sd58cp3s0uTYGDMqV0o3hdnb+kr4KZAgrhTZH0snD4405SW
wDFlErAFOGIeXvLEac6dXMFqksDjxK8z/Rg3nAyPgmqcLgmsvwdX8u844UTN
3uWQGZJglj7BGG/ogONJaGUwNSVBpNBjNUTDDscyRWnbaEmC7oNkalu3J7gT
F+/08tiQIKGOkujFZYn7a+R3w9eeBFa+wajmCzPcfExb0A9nEqSc7P9808AY
NzxGtXrnNQmqx7iiyDwe4Fr/u6ue4U2CKepQCnI2XVzZ/fd5tH5H+n+Rew6a
auHSotoZbQJJsFhH0YqXUcdFjlA/7wkhAXXjpjVWQQn3/qxi/41IEsAnSKkf
k8e53vMX/hRDAtvJ+6nZV2Rw1p87Pq0nkIAOt3AzmQrB3cfTrGulkUBrsYjq
4dBtnBKzkmZxNgmwhd8+sz0Xw2E0PxSwFpKgAZv+WbZBBMf/qfP0yzISTFR9
PnFK7waOo4/WgVhNAv4LE1/P8PPh6E4pD95uJIHzcdobnwmXcfsqATej20hw
AyEM7Itz45YDukL/dZOgXn2pxMz4PG6ik27TaPCID11J31M1dlwPjYp23QgJ
jp95YTLNfAZXczewiGuCBJreSpcvfWDC5fh1s/jMkICMfNBPUIgeF9tK/2J2
gQQB6hJGCbJUuKCTqkNyK0fnkenS6QS+4zhPuY+3UjdI8BZhauioJcPZven5
TLVDgoXJuuWQnj2scSPD38cHJEhsp3m/yrSF1SBXu9dJMQpcGW17WK4NrDQa
VMJPPQqm5vNkd4p/Y0U8e1k/MowCzdy18nSZn1ju2lPOv5lHYcxvLUGtZg7L
fKBGUGcfhYifsln5/6awx7HB4gXnR0EQn1XztX4cu+nWF8HMc7RfxdRWOHIE
O1vBuO14bRR2GSv3hDXw2KEddb1hwVHYBNEo9ZY+bIvEpzJx0VGg/xnVdTe3
E1vi3M8WJTkK3YKnMFJDLdiUEiaXXdwoyJYULWEHGrARfzSID2RHoWtbpZGV
ohbrJxoiWX13FEyUT25eel+OfekwEHVebRTaHs7MjlAUY60KTu96aI8Cm43f
F+q7+Vj9Nc37U/qjEImLePHsSRZWUSi0QvrhKMSF00qU6qdib9sOnksyH4U7
2qytvfyJWL4cZrcT1qPQ6m7wutQlDntuWWvUwnYUithFXxT1R2Fp+MOk2hxH
ofbekP8W32fsnjX+6zXXUdDKGzbX1vuE1RYz/CToMQo3AwVMr3QGYLOOzfve
fDMKxc7Px7Rn3mFPdD97JfF+FE65t5oy9fpgjSK3nmM/jsIFc7lR7iee2FIz
T0vp0FE4VIzyFhN1wzLeoDZUiByF7C6XmG5fJ6zV7idN5ZhR+HLJwYUi2R5b
33zujkbCUT5ZXWlvE59hz31KxN5LPeJz36iS0/sx1t6A/+aDrFHYavFe5Tjz
CNt5tZjXOH8U8OMelGHWJlieDez5RyWjQOHWT0bRaIB9XdPCbF05CqI6EEyq
0sUOv1ejtq0bhc9ut5L2wrSwgjojBw7No+DK0CRjeVkd++6iyebLjlF4aPAT
yxKjiP3+a3Hxde8oNN2uktJeksNKlNpPeuOP+LrWm5DTS2M/ee/h3xFHQVX2
v9PbxVjsT5U3HQETo+D+wirtk50EVoadvu7TzCg8IJUyc7GJYqNnPxeHLxzF
46n2d/URwm7mns/8ujwKlOMhHTRc17Eqbqnx8eujcJwvco5R/go2RV4oPHnr
6PykDi9qKXBjD5jKP2Tsj4LQvESl9T4nVncc9co9Ngav+WY9Qz+zYfPSOpyK
To6BDelSvfllFiy1o9bTctoxSHvlcV7TkxFrCmMmNYxjYEnmZTl0nBZbQfNI
t/HMGHBz/cIwcZzEMg8vK7edG4MCgUwyxzPk2KffnKS7L4xB9+oEs+Wnf5im
p4fiAzxjgGUEA+TaNoZTwk+AcG0M3vfy8/ZWbmCcKJgujQmOAcFH14mDYxXT
2xPFNnVzDILcBj7oK/7E8H7hZpiXGIM/ZE8URZ7PYTwfZVL8wo7BFy4h8W7X
KQxRSHTnt/QYLI3IzMq+GsOI7FetbCqMQaaEbQzlTQLGv1Vudkd5DJpvbdjE
Tg9gZkJ6iAcaY9Dor6vwrLIHgzHS7aXQHQOrzyL/6R20YT5f+95EZTAGHy0C
iRwaTZiVTasKepMxMHLCN8x51WHk69ZyT1uMwRRjpGh/bwUm7oNr8tknR/sT
F3w+NhZjtu9RfOWwG4O8oII++7R8jDp3QDDXizGQ7rM66ErMwpCXx7hd9xgD
2b/xn9d7EjAP3lx5LvRmDNzPh/caOMViitRyLW69P8rHhYO/gmmRmEfzdRoQ
esQfu8KeyRWMqcm/qyAbOQZNHSuUA8z+GNbXA5i7MWNg2jNTp8/0FtPGPHtV
K3UMGvJXpK2c3DDXUcoDi8ojPNdf5riblpi8jMyrI3VjcIA3D/yua4oRZVHX
uNtyVF8WhgT3fwYYzI/IpOv9Y3CdiSIx6LQmRjWQT2l1fgzMHpjizRekMPZE
lUiX0+MQJqhX//UmI6b8eZhIwONxmIEVXvnUQimFBC7L/LMTEJj+m2r99MZt
Z86H3FMGk0BrOHnqnpi1JP+SDi1B5TtQPgtqj0hpFGc+tUrVtPsdLnkyumkz
Dd86Xvs191L0FNCYjK0GpqzffCJaSaRWmgbJC1PFTvkjwpl3TeNr/k6Dtqt2
ierzjht/fp1jnA+fge6P2RHzub8FirUUKMJkZyG48WDAlYqW3+PO27ii+Vmw
OvvHsI7LkY9rXHEk8e0cSOa+t/hwiuPabfE3Yewi8/Bf3PiWuu/qVYPzvTvH
BufhvfW9cNHmy1f/dARO23n9gLTDbMP7iWlXIo8bOWryLEBRdNT2hfrgK8wT
xQnkTQtwmYrP1D6n98qJ117aks8XIbi3wNb/nP1VsnSj3OnTP6HrAasgRaAR
r/2X3MDTDT+hc2F9YSwt71r1dT8qpme/4EW0nWPGiPR1JkV7fm+GJYhHFD0a
85f5xwT6Bl2qlmABuK0GC2YE82KBZ9ZoGT6NttKqF/cJGeaKMXEeLAM7H6E+
7lmFiOfbb15jGSvQHCwZdE2xXTR7gfMrg/Jv4Ba9FJR0JknML+at8YTqb7DY
xzu9eJ0lZq65fDlH4zfESsbknrlZJMZRVZWnovsb9JZb9lTuNon5Bz1oCTD9
Dcsjx8IfPZwVsxKLWqNx+Q1XdoNQ+F8AEwHs/i8kNyKEFEgHpu8/IDEBACdk
ojf+OHwN16jvP5rhx9UPxak32e3j0qar7z9Uot58/AuyN5BXs11Gse8/wwca
0e6twTf/KlJzhbzvP18sRnio4eA33NGPngPT7z/nB2MKMSgeOLiG92PT1e8/
HIEhRuv7JDiUO18po9jvPy3TCPaNMC04S6UutELe7z/d5sxADTQ8OLp4zcmB
6e8/s1KQ+kIwWjiWLTWPUezvPyAEg4VZKGI4ceKcVCHv7z/IFa6Q3ippOChM
bN/A9O8/egBLjGMkeDgEAdSkkPfvP/OqtoVOtYA44LU7amD67z8p8Lpcuh2H
OLxqoy8w/e8/M1deWX/3jziXHwv1///vP7D2AanEF5Y4xdjKJQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7517#7"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"p (\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hole number density p versus position x/\[Lambda] \
(\[Lambda]=10\[Mu]m) at varying gate voltage \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\) and fixed \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V, \
\\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-0.023533220631241237`, 1.878277062056813*^15}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.15V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=-0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.00V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.10V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.15V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.942184585792087*^9, 3.942184733636518*^9, {3.942244261327977*^9, 
   3.94224433208923*^9}, 3.94225387675043*^9, 3.942255655940537*^9, 
   3.942268479583602*^9, {3.942268640038735*^9, 3.942268661189281*^9}, {
   3.9422688003751163`*^9, 3.942268814124675*^9}, 3.942268936863175*^9, 
   3.942268985747095*^9, 3.942514594338326*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"cf4bccc0-0e5f-4de5-964d-ef65732b3bb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datSlide19a", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.15"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.1"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.05"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.10", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"n", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.15", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1", ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0", ",", "1", ",", "500"}], "]"}]}], "}"}]}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x/\[Lambda]\>\"", ",", "\"\<Vg=-0.15\>\"", ",", 
        "\"\<Vg=-0.10\>\"", ",", "\"\<Vg=-0.05\>\"", ",", "\"\<Vg=0.00\>\"", 
        ",", "\"\<Vg=0.05\>\"", ",", "\"\<Vg=0.10\>\"", ",", 
        "\"\<Vg=0.15\>\""}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datSlide19b", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.15"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.1"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{
               RowBox[{"-", "0.05"}], ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.10", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], "]"}], 
           ",", 
           RowBox[{"p", "[", 
            RowBox[{
             RowBox[{"Vg", "[", 
              RowBox[{"0.15", ",", "\[Delta]Vg", ",", 
               RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "vd2"}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1", ",", 
           RowBox[{"dN", "[", 
            RowBox[{"0", ",", "1", ",", "500"}], "]"}]}], "}"}]}], "]"}], "//",
        "N"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x/\[Lambda]\>\"", ",", "\"\<Vg=-0.15\>\"", ",", 
        "\"\<Vg=-0.10\>\"", ",", "\"\<Vg=-0.05\>\"", ",", "\"\<Vg=0.00\>\"", 
        ",", "\"\<Vg=0.05\>\"", ",", "\"\<Vg=0.10\>\"", ",", 
        "\"\<Vg=0.15\>\""}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 19a) Electron number \
density n (m^-2) versus position x \[Lambda]^-1 (\[Lambda]=10\[Mu]m) at \
varying gate voltage Vg (V) and fixed Vd=0.01V, \[Delta]Vg=0.1V.txt\>\"", ",",
    "datSlide19a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Desktop/Mathematica/Graphene Integrals/(Slide 19b) Hole number density \
p (m^-2) versus position x \[Lambda]^-1 (\[Lambda]=10\[Mu]m) at varying gate \
voltage Vg (V) and fixed Vd=0.01V, \[Delta]Vg=0.1V.txt\>\"", ",", 
   "datSlide19b"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9410826517471724`*^9, 3.941082667576785*^9}, 
   3.941082739026586*^9, {3.94108279063868*^9, 3.941082851876617*^9}, {
   3.9410828979746037`*^9, 3.941082909185974*^9}, {3.941083028104246*^9, 
   3.941083054976014*^9}, {3.941083099998667*^9, 3.941083185786687*^9}, {
   3.9410832211802177`*^9, 3.9410832380801487`*^9}, {3.941083364515154*^9, 
   3.941083372998526*^9}, {3.941083692268456*^9, 3.941083699684286*^9}, {
   3.9425124235587606`*^9, 3.942512428699046*^9}, {3.942513548153973*^9, 
   3.942513686832376*^9}, {3.9425145553678083`*^9, 3.9425145686701717`*^9}, {
   3.9425146164142637`*^9, 3.942514642930215*^9}, {3.942514723267373*^9, 
   3.942514729647469*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"5313e427-cf6a-4163-88a3-86d83e40e303"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 19a) Electron \
number density n (m^-2) versus position x \[Lambda]^-1 (\[Lambda]=10\[Mu]m) \
at varying gate voltage Vg (V) and fixed Vd=0.01V, \[Delta]Vg=0.1V.txt\"\>"], \
"Output",
 CellChangeTimes->{
  3.941083274514997*^9, 3.941084554378696*^9, {3.942514622291732*^9, 
   3.942514644859561*^9}, {3.942514716634284*^9, 3.9425147324448643`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"20170f0a-cc72-4d9b-9cd8-3708c0f25fe1"],

Cell[BoxData["\<\"Desktop/Mathematica/Graphene Integrals/(Slide 19b) Hole \
number density p (m^-2) versus position x \[Lambda]^-1 (\[Lambda]=10\[Mu]m) \
at varying gate voltage Vg (V) and fixed Vd=0.01V, \[Delta]Vg=0.1V.txt\"\>"], \
"Output",
 CellChangeTimes->{
  3.941083274514997*^9, 3.941084554378696*^9, {3.942514622291732*^9, 
   3.942514644859561*^9}, {3.942514716634284*^9, 3.942514732446755*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"ea2cc729-db73-40df-a909-b9c79209ba1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nm", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], ",", 
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.001"}], "]"}], ",", 
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.005"}], "]"}], ",", 
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.01"}], "]"}], ",", 
     
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.02"}], "]"}], ",", 
     
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.03"}], "]"}], ",", 
     
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.04"}], "]"}], ",", 
     
     RowBox[{"np", "[", 
      RowBox[{
       RowBox[{"Vg", "[", 
        RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
         RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "0.05"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(n\), \(-\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.001V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.005V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.01V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.03V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.05V\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Carrier number density difference \!\(\*SubscriptBox[\(n\), \(-\)]\) \
and total \!\(\*SubscriptBox[\(n\), \(+\)]\) versus position x/\[Lambda] (\
\[Lambda]=10\[Mu]m) at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\) \
and fixed \!\(\*SubscriptBox[\(V\), \(g\)]\)=0.05V, \!\(\*SubscriptBox[\(\
\[Delta]V\), \(g\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(\[PlusMinus]\)]\) \
(\!\(\*SuperscriptBox[\(m\), \(-2\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nm", "[", 
     RowBox[{
      RowBox[{"Vg", "[", 
       RowBox[{"0.05", ",", "\[Delta]Vg", ",", 
        RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", "Vd"}], "]"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(n\), \(-\)]\)\>\"", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Carrier number density difference \!\(\*SubscriptBox[\(n\), \(-\)]\) \
versus position x/\[Lambda] (\[Lambda]=10\[Mu]m) at fixed \!\(\*SubscriptBox[\
\(V\), \(g\)]\)=0.05V, \!\(\*SubscriptBox[\(\[Delta]V\), \(g\)]\)=0.1V, and \
disorder \!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[Lambda]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(-\)]\) (\!\(\*SuperscriptBox[\(m\), \
\(-2\)]\))\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.93908300569267*^9, 3.9390830067950153`*^9}, {
   3.939083047458062*^9, 3.939083146781703*^9}, {3.9390832225672483`*^9, 
   3.9390832403197412`*^9}, {3.939083299247813*^9, 3.939083319485052*^9}, {
   3.9390833513577347`*^9, 3.9390833551654787`*^9}, {3.939083655903719*^9, 
   3.9390836930281*^9}, {3.93917485962784*^9, 3.93917486151643*^9}, {
   3.939212811710548*^9, 3.939212813009337*^9}, {3.939769673012349*^9, 
   3.939769720046516*^9}, {3.939771306930085*^9, 3.939771307433805*^9}, {
   3.940179528551454*^9, 3.940179534370551*^9}, {3.9401796496781588`*^9, 
   3.9401797127519608`*^9}, {3.94017974909063*^9, 3.9401797663611526`*^9}, {
   3.940179845796677*^9, 3.940179881037079*^9}, {3.94017993328638*^9, 
   3.9401799813359003`*^9}, {3.940180187035486*^9, 3.9401801873041553`*^9}, {
   3.940180361056177*^9, 3.940180396327634*^9}, 3.940180441287957*^9, {
   3.94021144157745*^9, 3.940211677787644*^9}, {3.940211709202409*^9, 
   3.940211712305312*^9}, {3.940212279576302*^9, 3.9402123208464003`*^9}, {
   3.9402123669639063`*^9, 3.94021238154543*^9}, {3.940212412052622*^9, 
   3.940212440625399*^9}, {3.940212471512601*^9, 3.9402124983599*^9}, {
   3.940213502948702*^9, 3.940213554265012*^9}, {3.9402160222870626`*^9, 
   3.9402160264302893`*^9}, {3.940216280607532*^9, 3.9402162980399103`*^9}, {
   3.9402176672858877`*^9, 3.9402177011241198`*^9}, {3.94021773902728*^9, 
   3.9402178381697063`*^9}, {3.9402178682985888`*^9, 3.940217886575049*^9}, {
   3.940217936373032*^9, 3.940217967275881*^9}, {3.940218084936611*^9, 
   3.940218086934923*^9}, {3.940218139976227*^9, 3.9402181473260937`*^9}, {
   3.940259370253545*^9, 3.9402593778204317`*^9}, {3.9402594340432577`*^9, 
   3.940259512105522*^9}, {3.940259545945607*^9, 3.940259578702958*^9}, {
   3.940259743267552*^9, 3.940259768650807*^9}, 3.940259890156358*^9, 
   3.940260069718679*^9, {3.940260157931054*^9, 3.940260169153833*^9}, 
   3.940260241433413*^9, {3.940260328174909*^9, 3.940260355597039*^9}, {
   3.940260422677446*^9, 3.9402604247155943`*^9}, {3.940261594738521*^9, 
   3.940261596648158*^9}, {3.9402617113664513`*^9, 3.940261739758215*^9}, {
   3.940261777103168*^9, 3.94026180577817*^9}, {3.940261838283434*^9, 
   3.940261853361018*^9}, {3.940261893058531*^9, 3.940262013111327*^9}, {
   3.940262047936295*^9, 3.9402621660747643`*^9}, {3.940282593985641*^9, 
   3.9402826624950953`*^9}, {3.940282701556232*^9, 3.940282746535777*^9}, {
   3.9402828571661263`*^9, 3.9402828707993097`*^9}, {3.9402829509307537`*^9, 
   3.940282989937549*^9}, {3.940283248252468*^9, 3.940283333558888*^9}, {
   3.940284760762745*^9, 3.940284835097137*^9}, {3.940285025682592*^9, 
   3.940285026400893*^9}, {3.940285119202175*^9, 3.940285121954442*^9}, {
   3.940285728891889*^9, 3.940285729354741*^9}, {3.940286163410638*^9, 
   3.9402861899512053`*^9}, {3.940286261876781*^9, 3.9402863372937613`*^9}, {
   3.940286370682184*^9, 3.940286413145382*^9}, {3.940286515489167*^9, 
   3.940286551324666*^9}, {3.9402867974413977`*^9, 3.940286871934894*^9}, {
   3.94028700122318*^9, 3.940287081017647*^9}, {3.941074326848855*^9, 
   3.941074378672079*^9}, {3.941074454296358*^9, 3.941074462133305*^9}, {
   3.941081882506298*^9, 3.941081884869092*^9}, {3.9410826017973957`*^9, 
   3.94108260259729*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"335cbeb6-7c0c-46e8-91d9-12959b31e1a5"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1249.3582998794839`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 132, 56, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.940282665637075*^9, 3.940282749272291*^9, 3.940282872956105*^9, 
   3.940282992404441*^9, 3.9402833360246468`*^9, 3.940284841698217*^9, 
   3.940285028355206*^9, {3.9402857071414413`*^9, 3.94028573135734*^9}, 
   3.9402864290167913`*^9, 3.940286554222031*^9, 3.9402871018308687`*^9, 
   3.9410743846943903`*^9, 3.941074463974492*^9, 3.941081892632017*^9, 
   3.941082623409787*^9},
 CellLabel->
  "During evaluation of \
In[132]:=",ExpressionUUID->"9c8a7cea-585e-470c-ac5d-83de0ea8f9db"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1249.3582998794839`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 132, 57, 
   24686884604330719330, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.940282665637075*^9, 3.940282749272291*^9, 3.940282872956105*^9, 
   3.940282992404441*^9, 3.9402833360246468`*^9, 3.940284841698217*^9, 
   3.940285028355206*^9, {3.9402857071414413`*^9, 3.94028573135734*^9}, 
   3.9402864290167913`*^9, 3.940286554222031*^9, 3.9402871018308687`*^9, 
   3.9410743846943903`*^9, 3.941074463974492*^9, 3.941081892632017*^9, 
   3.941082623417618*^9},
 CellLabel->
  "During evaluation of \
In[132]:=",ExpressionUUID->"23bffb95-3ae4-4894-a69e-1326a25feef4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
D5pHjWY=
          "]]}, Annotation[#, "Charting`Private`Tag$4803964#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwV2Hk4lN8XAHCUyDKTNURJlCKVRFGO7msLoSIqVEjFN7uQJKIoUqJUZE1S
JPue7FnHztjXmRHGMiMifu/vn5nn8zzz3Llz7jn3nHd2Wzudv8HGwsJCxF/+
/653g9paTjNV7zqlLO9/mYk2Y2LOQ6JKwN8Y9M1Ji4mOxkXHZItqwn7OJRWr
w0yk39SdFStqAreHi/5T28JEZrZ/SiNEbYEn9gZz6TsDDRx6goWJuoMBlrhx
dysDxQsZPX4qGgiE2aTusoIF5M+ZvS9ENBLWAz4fChWdQ+aXEr7NzScD/Vj3
I8v1ccS94W+hs/Mb8K212ySXd6Lo22ZW8trf4L/s5T9Et04k3SF/jc/xG6T1
sow8lelE6p+7bfpKv0G3IddaxtMOVPj5dW6+QibY7LlsmWXajmYuTJfoN2dC
zGbT1dxZEjJNfdPgxpsFa3tM3lpfrkMxlgEGdruzQKI9wO5iZS0a5b/TZH4s
C5J3fHK7I1+LnHxRyynLLIhP9Bxk36hGIedn2jjSs2DqHgtt7GMlKl1D5PcG
2aCt8vsLjVGKNmcdvPL8WjYM0NesLBpKkN5Nkf6H7tmQNq7yfEdiMepunRm4
EZMNuuxTvU+MC9F8SvTIoels+KL26Mf09xx03OKRtRRLDsAg/Wfus2z0gM9x
TFAwBw62Lgl422Uh7vvYxIpaDuw+EPQ5XzITyZybpVY+ywHli47hU4GfkJif
jurNhBxo+ScqPGL8EW1Lj3/GlZ8DDoc8PMzUkhB730p/emMOsPv8MOkwSEB/
OS8onBvNgfN+A78cJOLQnPJXP8afHPhVemzYVSgGTdiyt77hzYWuHWoWpZFv
ETnCSkptTy6Ime2XcPj6BpHK890Gj+fCET2tnxftX6Pq2W3V/oa5oNO288Zg
dxQqErcXlrHNhYfFKskcK1EoU6/yZp13LnTzP+nc1fgaffQSL3QIzwXp3x6N
k2ei0bsUDy7ix1yIn5OpPmn3Dr3oaL6SVZQL9zZxaRzni0VBbLLppqRckDs8
rXdKPB7dO+y/vjyRC4Wx/Kf1xhOQkxXZKGY1F0auPnyxrzsJ2YYeTQC+PCi+
yyPU//sjMqJOYI9P5sGPBR0bCYs0JB2vFyLwKg9ay3SfhYx+R81EQUEFjXwI
V1gt/uZRjCpP3bnRapoPV7sKePtTSlCBQ02eu0M+zIbLpCZ0l6KkWq9Lxa/z
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

          "]]}, Annotation[#, "Charting`Private`Tag$4803964#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803964#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 1]], 
         LineBox[CompressedData["
1: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
PL/bI6kALnq2RYi7ssIGfM6Y/P//Tf8DV6ZxrA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803964#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
6H9XW3JG
          "]]}, Annotation[#, "Charting`Private`Tag$4803964#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.5, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803964#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
Xu7kXfz3jwnXXm6j/P/vef8DkVMnXA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803964#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 1, 0]], 
         LineBox[CompressedData["
1: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
Ty3wxJnvdB+2ZhLvUEJjC/BfN3Xnw/to6q74De5dLRD8xUx3F7Zo4T4TlcEW
cODq/a2HHajd4Lc80QKtLQ2XbbFZDU4F9fMtwJji+OSMnZP+x/MwJxVMFS8P
/3+/ZUzpP8ripYKey1qaI/Zm1ci0dQJUSPeaTjqKbeXd99lLmAqTJ3dqaWKH
Vsj294lSYb9kS+pG7Cpu3GSSVAj5uIE5g5+XfbhibaoUFUZOaS7WYCs94t8t
uJMKz1RvDzzEPtNhbeChQIWAa4qxZtjx4kmnuvZQ4YxrljQfdofjhI+WOhWO
ubgGFeP4rX6tHpOkRQXZnvoSJ2w0FpDDi6gwpHWihgP7lmJzw3kDKlwQf/sm
Fucn55r4CNWECuSqw/ay2Ixil3+qFlT4WDoylo3zuXk5W/yFDRWaJxXNlLCt
iT/7OBzw890YDEvB9RAWon/E1ZkK3zUbktdjL6ztC1C6SAX7gOdO9EFcv7ay
8VEeVLBClnx7sc/EXytauEkFzZLvYX64Hjt28k98DqDCSZsEZR5cvzla6ta2
sVSYGLHhysT9wPAPuPwxngpTjkI5VbhfNtc13d+WTIUPQVt0qbifwsxdyicy
qSCq9Ue6Hfeb25mInf6fqZCoNzh9swPX/7tendF6KuRqnV42acf993unvXEz
FVLfN/0Rx/2s61P+eH0PFfTp4Z0vcL9vefxzIW2SCuueZmpDAxuVn/JNy5um
Qpc85fUEnh+O+9YdL2VToYXzwtondXi+dWoWN3K1wqmzMhu+4vkjtunBjSnR
VjjoTJlhlLNR0eQmGfbGVig75zPo8BF/Dypzv3FItYLTY9Z4YykbRZ/uUVm7
qxW+2B6wiClmo7XpstMq0ArhAW0FnblslOtT9uqgbis8p5PZ63PY6KjpUQv9
w61QyBHwzTSLjR79vplrY9kKvC3HM9LwPBVQr7vsfbYVgtJKGinJbMRT7TpR
8agVfD52ro+NZKPX0Qsv6qNawW7edcYdz2vds+HGrc+wg5Cs+kM2CuAvSB9M
bgXvDW9flOJ5v3yU+xxPcSu4ZofzXPfD9dr3asToO35+6ZrUjAts9HN+oP+b
chuES5qDgTYbFZ59VGWk1gYFwmsr+Q+ykV/XoZSKA23gvlrsd60G7r+i+Itp
+m1Q67Djmhz+3qEbdku37dugvyg57ukONno+0ykuHdIGCS17XTfh76ch2WTl
MdAGLvY5Q+yGebTu1J39jOE2uL+SJ6avdh71UxUk7cfboKw7qrS0ah555oQO
6c22gbRKxG2XknmUcPmwh/jqdrijbfTSLW0ezf2qflSp1g5ZC9vadILn0evx
0gahh+3wnIvpc+nAPLr01Gy7+5N2yO+L2vpWbR6p6w751MS2Q55JjRttzzxq
iOfffTu5HSQC9/HskZ1H5NHjj8aK28E9t9suQQSfT4rmLKuH2iElRlgiZGIO
9dzd03dLowPUIk18v8TOIaFNb6eGhzug5Am9S21kFoWdKziTKN0JE89ErS/f
nkHj2pkhq+U7wdCNNqh+YwYZiL1Jv6HUCVHifSUcV2YQV13UpIlmJ9hP+d97
cnoG3ZL2vLFg1gne6ZoGFUYz6MzA3mALn04QCD4te1B8BulY57zhbuuE4b4k
KaJoGs1pvxt28+0CF4dmMak/LFT2+ueLm4FdYFolZtQ3y0IBfAqWwfe74LSn
kkv8bxYSomZ8Sn7SBeI8EuFyoywkczLrZf9b7BOWxtdaWejYnVxbK2oXACFq
2ZPKQgUfihpBqhtWN/pvsbFjIe9N7LtHZLrhV8oLdsYxFtL233/AYVc3lCmZ
R/FZsFCj4Yc0b9VuiCy6YtZqyELDXSXBBYe7wfHvyM10NRYSmfuovcujG3xf
92eFrGMhz73V+aKfu8FHKSnKoY1EZ1S2JkbUd8M5Tk0Z9WYS2ardDhVo7gbu
9rIscXy+P6Cp4szV0w0FG9b9XvhEIi70mjI52Q0ePxYJuTwSPTIPdK+R6IG8
7AcvLaNI5Gf53Vp7aw9UDy1eqnlMIg9rLZ3SHT1QLCHirBNOomPHZzbkKveA
bbTOok0wiSRPudTE6feArFf2HOctEqVf0d3q6dEDgrxftx13IlGcR+LqqZs9
8Cx1fdF1vB+Fey7NnbvTA5v7vkTE4/3pild+08mQHrgSMXaKYk0idT9pH+OX
PcCRnOF4x4hEsgF+Z2qTe2Ai/IDYnAGJJAJ7zXXSeuBM6vc33nokWr4XJaue
3wOPJvTvvtUmUfUj7s5tDT3AJC0UItVJVBjh9Cm+pQdcyj9dOI/3vdQnZRli
33pAWffOanO8D4Y+9bwr9L0HfEfb3uookcgiYVh5cbYHLr9TUinZiffpJG3J
6396YE1sKrB3kEg1OW7lbw4a3lezlAi8j4q9teofWU0DfUv1f/+24v0uqzq0
VYoGq6I27tiwkUTUX9wTe3fSYGUNw6BanESVCnomUQo0uGb0x+o/vA8nptcI
2KjT4Ec+n7u4KIkej/FcLNaiQSKd/mgR79f+svpN4ogGXGdS6Uy8fzun1Ib3
mtAgulxg6y+8n1uM8E4etKBBycig6gpsQtrgSIINDcgsxQwZvM+rnL6XxeFA
g4cUhwgbvO9Lv6oTcnamgbVv7XS0EIlEfqy8/PksDWQqsn78ECQRz1bDFumL
NKhO0D13AHvOMUQp2IMGQ/VJsa8ESDQaX/+IcZMG8n4NdzZgd/by/Ta8Q4PH
VzJlnq8mUd3Gw0fTA2jw4er2JHns4hP3c1aH0OC52dRiPT+O/7Mvay6G00Aj
8qPOdezY7lVXmyNpkKonfVcJ+/4Go1alWBpIV71qnF9FIu9jD/ZExNPA0zNp
VzO2e3RDBOsVDdxSrmbmYZ/o4GdZptIgxcD05Bts43XGFgWZNHhSeOxICraW
RWie6HsahN6PvVeArRDxda1XMQ0MbXnE2rElqauv9XykQXDQTYF/2AIUk3bN
zzQY5Mu9qoGfZ8k0bF9cPQ04NOysArB/hTU++dtEg4lo3k892P1fBWYc22lQ
9kS+GvD7NvObWlV20+A/1x3u+djlh8PzpfppcKL+QIU6jldWSJPI3SEaSLTE
tnzBflkneH2YSQN6pulbdxzvR7xHvulN0mBTsLmFBM7PlcDmaL4FnC/RBPMU
nD+nz0Jz55ZpUD5s8TEA59ecy+zY1xV0qLsmt+sSzv9evxbRh0J0sH85rumB
62VbBeXm1Do6VH0+M/0A19O6ZbOuo+J0sD0hS89bT6IZH+rTddJ0OL580UUZ
1+NwyRq2pxwdlLpebwzG9fpt4ahtpyL+vU3w7p8SuJ9utoo906CDY8r10KFN
JEopFL61eIgO8nfMJ25sIdHTWfMeO106LGVfaxWXIpHXtbZnm83oMDAxcvQh
7he3vLWLvlZ0eHlO/N9JGRIdJy1O/DhOh69Nx4/ryJJI83K7xGsXOlyV9N2/
T4FEf9w7Xsh506GBsTO1Q4VEVmoOEYq+dFA9HhS4pEaiDM7R4H2BdDg24aq7
V4NEjrHzVw8+pMPbbb0P6g6S6FONhKH5Kzro1jxmPfv//IhIPnjsLR2evkt8
twfPFw97hX12GXSI6Rf7r8sE98f0wc2uhXQY/OQaYmpBontbT814NdBBQ3W5
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
EkfXMTb6HySZBgE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4803964#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(\[PlusMinus]\\)]\\) \
(\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Carrier number density difference \
\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\) and total \
\\!\\(\\*SubscriptBox[\\(n\\), \\(+\\)]\\) versus position x/\[Lambda] (\
\[Lambda]=10\[Mu]m) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \
\\(d\\)]\\) and fixed \\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V, \
\\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-3.75655339210371*^14, 1.1272533033348652`*^15}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.001V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.005V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.01V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.03V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.05V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9390831525966873`*^9, {3.9390832270018263`*^9, 3.9390832406929083`*^9}, 
   3.939083329517968*^9, 3.93908336867577*^9, 3.939083695765979*^9, 
   3.939083730180607*^9, 3.9397695617058487`*^9, 3.939771309414948*^9, 
   3.940179713886042*^9, {3.940179751743205*^9, 3.94017975864262*^9}, {
   3.940179943718381*^9, 3.940179982972292*^9}, 3.940180190880619*^9, 
   3.94018044356889*^9, 3.940211681080147*^9, 3.9402117151823483`*^9, 
   3.94021232798423*^9, {3.9402123908975267`*^9, 3.940212413765997*^9}, 
   3.940212512779583*^9, 3.9402135569098463`*^9, 3.9402160296558447`*^9, 
   3.9402163002742777`*^9, 3.9402186081732197`*^9, 3.9402595191474524`*^9, 
   3.940259582225792*^9, 3.9402597751241293`*^9, 3.940259897195857*^9, 
   3.940260089749132*^9, 3.9402601731407957`*^9, 3.940260243494734*^9, 
   3.940260358548428*^9, 3.940260428966654*^9, 3.9402618592730713`*^9, {
   3.9402619319224453`*^9, 3.940261960694708*^9}, 3.940262031618779*^9, {
   3.940262148523061*^9, 3.940262168073441*^9}, {3.940282595707016*^9, 
   3.940282624523074*^9}, 3.940282665990011*^9, 3.9402827497729473`*^9, 
   3.940282873314085*^9, 3.9402829929202757`*^9, 3.94028333634869*^9, 
   3.9402848420157948`*^9, 3.9402850286738977`*^9, {3.940285707479384*^9, 
   3.9402857316984386`*^9}, 3.940286429218*^9, 3.9402865541894197`*^9, 
   3.940287101766862*^9, 3.9410743846336308`*^9, 3.941074463918571*^9, 
   3.941081892953681*^9, 3.941082623735023*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"560245a9-76f1-4cc5-8ba0-5fbc10dbfc17"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D5pHjWY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4804092#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\) \
(\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\))\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Carrier number density difference \
\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\) versus position x/\[Lambda] (\
\[Lambda]=10\[Mu]m) at fixed \\!\\(\\*SubscriptBox[\\(V\\), \
\\(g\\)]\\)=0.05V, \\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V, \
and disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.1V\"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {-3.75655339210371*^14, 1.1269661863601572`*^15}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(n\\), \\(-\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9390831525966873`*^9, {3.9390832270018263`*^9, 3.9390832406929083`*^9}, 
   3.939083329517968*^9, 3.93908336867577*^9, 3.939083695765979*^9, 
   3.939083730180607*^9, 3.9397695617058487`*^9, 3.939771309414948*^9, 
   3.940179713886042*^9, {3.940179751743205*^9, 3.94017975864262*^9}, {
   3.940179943718381*^9, 3.940179982972292*^9}, 3.940180190880619*^9, 
   3.94018044356889*^9, 3.940211681080147*^9, 3.9402117151823483`*^9, 
   3.94021232798423*^9, {3.9402123908975267`*^9, 3.940212413765997*^9}, 
   3.940212512779583*^9, 3.9402135569098463`*^9, 3.9402160296558447`*^9, 
   3.9402163002742777`*^9, 3.9402186081732197`*^9, 3.9402595191474524`*^9, 
   3.940259582225792*^9, 3.9402597751241293`*^9, 3.940259897195857*^9, 
   3.940260089749132*^9, 3.9402601731407957`*^9, 3.940260243494734*^9, 
   3.940260358548428*^9, 3.940260428966654*^9, 3.9402618592730713`*^9, {
   3.9402619319224453`*^9, 3.940261960694708*^9}, 3.940262031618779*^9, {
   3.940262148523061*^9, 3.940262168073441*^9}, {3.940282595707016*^9, 
   3.940282624523074*^9}, 3.940282665990011*^9, 3.9402827497729473`*^9, 
   3.940282873314085*^9, 3.9402829929202757`*^9, 3.94028333634869*^9, 
   3.9402848420157948`*^9, 3.9402850286738977`*^9, {3.940285707479384*^9, 
   3.9402857316984386`*^9}, 3.940286429218*^9, 3.9402865541894197`*^9, 
   3.940287101766862*^9, 3.9410743846336308`*^9, 3.941074463918571*^9, 
   3.941081892953681*^9, 3.941082623824979*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"fd40dcd2-e0cf-4f8d-90e5-a466cf21685e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.001", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", 
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.005", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", 
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.02", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", 
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.04", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", 
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.06", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", 
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.08", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}], ",", 
     RowBox[{"j", "[", 
      RowBox[{"0.05", ",", "\[Delta]Vg", ",", "0.1", ",", 
       RowBox[{"\[Lambda]", " ", "x"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.001V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.005V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.02V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.04V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.06V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.08V\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(V\), \(d\)]\)=0.1V\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x/\[Lambda]\>\"", ",", "\"\<j (A/m)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Current density j versus position x/\[Lambda] (\[Lambda]=10\[Mu]m) \
at varying disorder \!\(\*SubscriptBox[\(V\), \(d\)]\), fixed \
\!\(\*SubscriptBox[\(V\), \(g\)]\)=0.05V and \
\!\(\*SubscriptBox[\(\[Delta]V\), \(g\)]\)=0.1V\>\""}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9402849209640207`*^9, 3.9402849865874453`*^9}, {
  3.940285139627364*^9, 3.9402852072858562`*^9}, {3.9402853153675833`*^9, 
  3.94028534499827*^9}, {3.9402854621784763`*^9, 3.940285470960813*^9}, {
  3.940285621142827*^9, 3.940285628367672*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"5f7f07f9-4cf3-4984-9438-eca1c13830eb"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1249.3582998794839`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 120, 41, 
   24681567866119410280, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9402852136397867`*^9, 3.940285347590427*^9, 
  3.940285475786339*^9, 3.9402856323452797`*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"6dedb7a3-a720-4a55-87df-8db8333b1ad9"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1249.3582998794839`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 120, 42, 
   24681567866119410280, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9402852136397867`*^9, 3.940285347590427*^9, 
  3.940285475786339*^9, 3.940285632354847*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"6e2c41ab-06b9-4850-90b0-93e600124280"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
6uB/UWpTZw==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#1"]& ], 
      TagBox[{
        RGBColor[1, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
zIwQ5heUP5V0osH/AA6iFoc=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#2"]& ], 
      TagBox[{
        RGBColor[0.5, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
ubDAg/VdDVUVgY3wP50bHZU=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#3"]& ], 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
W7s8Sni+Gv4HqVM7Ag==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#4"]& ], 
      TagBox[{
        RGBColor[0, 0.5, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
QxSQ1T64pxw7Yk/TzcUJCnj7rKO3Yv9sOvOhcZYCWUU9ml3YhTl/r1pwU4Et
6n/0KzaTYxabL0AF7ulp4w5sRb1H2WtWUuH6ctuFOmzbwL6aAFEq3D6WHFqA
fQ+p9vdJUkFYjdoSh13Nd/WPsTwVshX+Dl/A/mOBxLKUqZCkuKnOEFsrVkhz
1SYqUM6dvcSL7dZht99XgwpdvqWjNfj7U2TSz3bqUOG74l6VYOwOp4kgI30q
9ESt1NLAXvFKPyHdiAqrlbbyduD4GrNvFQoYUyEkpSn9Cvb1LW1NnvupkLtq
SmgFduEVmVGqNRUS66t3J+H9Ypa4LOnZUKH24uldytiKiwUyycepoPSTJfAC
77fdvr+6XKeowJUQniyJHRNldtDVmQpyo3Z/I3C+zIn13dLyosJJw/0KFji/
tO1VU+J9qWDbWzmQivPPLeVK8Zw/FaTOKnlP4Pzs2CQ0UXOLCj7Jrhxvf/w+
Rvp29olU0HIXjRa9it8n7JbPpxQqTCU0vVXB9aHY0Hp3XQYVeqN3Zerg+ok5
4lI5kYfjP+SyoH2JQOfdHm4Kq6HCDe6G462eOP9ze/eONVLhwrjV7zQPXH8/
NjlatVEhNW3S2QPXs0lQZZxENxUSZL4VjLkRSCnu21z2JBX6o6iyIWcJVHk2
NLtomgo62aWrN53B+ae75kT5Hyqs3eDJ+uKE+xthWNLCQwNl3hu753H/kVaI
9uNI0sAra0Ms/zECFU8qbPwjRwOf9/wpfrYEOlb1lsGlTAON+buxgzYEenKu
e5vYZhr0vxDakHaIQGI5qtPbgAa/bm+VbDAn0Nugipe7TGhg6upuu4T74eED
h23MLGhQ43s3UNuUQLE//N8eP0qDbn6HmyG4n67Ub/AJdKfByKXFG9UGBOKv
dZ1AsTSYXjR7/0eVQK+ezCU3xtPAKk4iB+H+buJ+34r2DL9vztvY0A0EuiX0
IWcogwYL/Hc0xvH5sHiY7wJ/CQ3aqvwqPCRxvva9HLUcpMFh/fhSGR4CfZsd
6Gdo06Fppc0r3Q4G+ugeW225nQ7TCUdbCHy+3ezc/RrtpIMDxaXqcisDSRan
eGWb0UHbIHV1LD4fjf0cFoId6RCnau7lXsJASb8ImQ1RdDzvCSzG4vPWfKrV
1ncAX78RqdFoz0BrzobsYI7QocRCgelmy0D9VA15x3E6dD0LfPjvEANdLbw3
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
U6UVv5eWOPAyV+B6llg5/A+YTRIS
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#5"]& ], 
      TagBox[{
        RGBColor[0, 1, 1], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1:eJwV1nk8lF8XAHC0kKSSfalUyr6ERHJs2QkRFZK1qJSUJMmaUvGTFiERJXv2
Co/sYZgZzJNsMwwzYxtSosR737/m8/0M984995xzj7RHgL03FwcHRzEnB8f/
Py28maR6lqPeqJD1Q9yoAtYbiV8ZEdOA2PU/ygR5K0A940VamZgx2HXlsOyI
5WBJwEvTxRxg2TGoqtOlHJy8ftcmiXmBRp6RT/P1MhhSuWf0SCwIxAPFXLvf
fYDXQsdjH4hFw8LuOkFbsQKI4Ck7cF8sGbIWNz1cupoKzqcyi+fms8F8YNPy
z7XX2Oa1CBfTncXwXk5j5aJbJSZjN8tsjC8H05+Syp7vvmDBXdrw4udHCKFU
EwpU2zCR8u3DnJwY/B1WE7KsJWCVo0ad3boNEGI1npAdS8IoZhHzj0wbQEHm
cZBZIglbLKoTtrJvgET/SyvjKSRMK1T7XJtvA0Rz7ZraUkjCqneoLNYnNcAM
N3V5Ww8J+2gsvruU2QC2ZQYJNCkyVvN27lpyciPcL3SLf1lExhr80iVOTTdB
DVvCjfa5Bytj+fu7LTZBzu/ww3aNPVj2eZ3PnhzNIEy7xvm5vQeL8cFPXxZs
BhVBqtPt/h7MzGP7yyjdZoCYGXrFYg/WfSpGtOhhMwTHk35xqfZig2aXhNYp
tcDPVyFzS+m9GKH1iDePVgvMTtPhTXYvVmfCW7HFoAXUQ8+Ymub3YhnG7xxE
HVvgXOxq8O3qXsxDn/ZEKawFqofuqKeSezGmlqOAM6EFNNjhZbkb+rBf+49u
LbzUChmJU7LLPn2Y3qhh64ObrWAemjPpeKkPi003Cz8f1Qp/zz/dln+tDxMW
dGDvTWmFrc/oEXp3+7BDnP7dL5taITT7ZNumlD7s5sCLhDiJNlidP+ui+rUP
W0n4udXraxvI6d4nf9hLwYwt/7Qa9LZBmPvbVhE5CvZwI8fdXSNtEJj/eOq6
MgWTCts89/1nGzBk3n0U16Zgen57iHa7v8LdsC/GG20oWLixbSIEf4WIyqOd
njcoGNdy/jYJmXaok9jTqPyFgkkQDBdApR00D+hwWTdTMI3M/j4v7XY4WBVm
4fWVgnmbc6cWWbdD7MVbP8JIFKwtxUPG8EY7JB20jXalUbAEHTGdC63tsLLV
qq9zjYLl8pdIPia1Q2ujolroOhyrHzVZKx1oh7ytXbF7uHHsx4OgphV2O4hE
lUu48OPYyYFum0TRDpjilO65JYljkrdjPasudMDd6+WV3lo4pmkrZTJ4rQP6
+T8de6ODYzb7ymU573TAHoWe+v6jOBbeSZuxSOqAsbntN9WMcWxU8ujN4U8d
MK442htvi2PvaxcebuDrBJ+Pz15N+eJYw38PAuSFO+HfpOCTKj8c++4tbX98
dyekNX/yvX0Jx/j4j4ukaHSClmZ90Vwgjl1xy8tUdO0ExcPM11FhOHZozb3y
RFEn7LRVirH/D8esrOsjj1V3guGI5YXXT3DMM3XXca2GTpDkpPoxnuJYotYw
Q5zSCRUzek3uL3GMFXBGbPRfJ0jP8n3heINjHHWfxnu4CRAgwRUpkoNjwnzi
pc3bCeAcYORy4B2OGeZ+s3gvQ4AG/orTB/NxLI3qePuKNQGGJ5ev/irFsVLl
CjMPJwJU359k95bjWNttQSGHcwSgS/tGFVbi2C/RnkKt6wToDjRimX9C8bOz
HVlNIwDBJSNb5QuOcTZYGD6aJoBF7Pq7RQQcE92Wxx++SIB9BvdkdnXjmLLb
poErHF2Qo2n/PY6IY6f/tF5zEOwCqeILV0x7cKz84LEcCd0ucGlIOXb1G461
382+usWkC+qeWrvk9eMYtWud3trxLvgZ0BI++B3Htvg3UEY9u4BbcHxKYQjH
fN4AT158FzCGjeyCaTh2e/5Vb+rTLigQimy5OYpjT2D19aOMLji+86LJtTGU
TwM12lfLuuDY/ZPeJ8ZxjCInudGzFq0XRV+nPYFj08GhZIfWLngZpl0gwsAx
MUEd/8MDXXBizFusnoljqh4pWvLjXeCu8G3oPgvHTEqW1kmyu0BN2TTfahLH
Aq2q0ta4usHsrKd77RSOxb0UvjDP1w0hH6pN/adxLIN5XXNMuBtObzyjJTCD
Y53RGl0t8t2gbMRStpzFMZ2tHVz/aXbDpvYdNizk3JRzWmf0u8FFquJwOBvd
774lfxnLblhSfjPLN4djUUWPX7Mdu4FTrzIgCXnusEzfR/dumKO0fd46j2Nu
jZ83Rft3Q2ZPFTkaWecbM1A0ohsGRt+7n/yB1vcIfzca3w1nFAPxUmThGaHB
gmfd8Mo0U5R7Aceigwu2BWd2w4//du07gTzPaXTMoKAbNCvx5WfIbg/7QzZX
dcNoQWUKGblT+EpR35duEKnJX7fxJ9ovc+NYRmc3JAbnaqkh5yqki/jh3VBS
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
/GttjQ3DdoLR/UYV8D8OuBQf
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#6"]& ], 
      TagBox[{
        RGBColor[0.5, 1, 0], 
        AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[CompressedData["
1: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
Ytu/QniySWB2eZkDYR8DklSrCuF/ceoPuQ==
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6483720#7"]& ]}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox["\"x/\[Lambda]\"", TraditionalForm], 
      FormBox["\"j (A/m)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {744.1065063476562, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Current density j versus position x/\[Lambda] (\[Lambda]=10\
\[Mu]m) at varying disorder \\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\), fixed \
\\!\\(\\*SubscriptBox[\\(V\\), \\(g\\)]\\)=0.05V and \
\\!\\(\\*SubscriptBox[\\(\[Delta]V\\), \\(g\\)]\\)=0.1V\"", TraditionalForm], 
    PlotRange -> {{0, 1}, {-0.39196623545851417`, 0.6518621308683642}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.001V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.005V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.02V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.04V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.06V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.08V\"", 
       "\"\\!\\(\\*SubscriptBox[\\(V\\), \\(d\\)]\\)=0.1V\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9402622666858664`*^9, 3.940285088610303*^9, 
  3.9402852626868973`*^9, 3.940285396601878*^9, 3.940285524220415*^9, 
  3.940285680322592*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"f25e3199-3a85-4ec7-a658-f850675aab78"]
}, Open  ]]
},
WindowSize->{1179, 694},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2edd65f9-e4ea-4ca6-8e16-c2f1745f82f8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 10318, 303, 789, "Input",ExpressionUUID->"e6a0baff-c705-42c0-957b-acfe36208ee9"],
Cell[10879, 325, 3077, 84, 140, "Input",ExpressionUUID->"186333fa-6df6-411a-8c20-5f8e83cdbc52"],
Cell[13959, 411, 4373, 120, 140, "Input",ExpressionUUID->"6ecd9be7-32c3-4606-8320-799afda81333"],
Cell[CellGroupData[{
Cell[18357, 535, 12910, 310, 512, "Input",ExpressionUUID->"00835d79-f4d5-4ea1-8fcf-a9fc25a9e5ab"],
Cell[31270, 847, 88548, 1597, 374, "Output",ExpressionUUID->"561d38bc-6133-4b44-b3a1-4ae85e91577a"],
Cell[119821, 2446, 89415, 1612, 422, "Output",ExpressionUUID->"18944768-d38c-43f7-b1d9-a3cd6be89e2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209273, 4063, 5005, 109, 255, "Input",ExpressionUUID->"d12622c7-ead5-4fce-b618-7a0f4bebb835"],
Cell[214281, 4174, 839, 13, 56, "Output",ExpressionUUID->"3a564024-cda8-4a55-9918-c504255300ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215157, 4192, 9215, 231, 465, "Input",ExpressionUUID->"1863ea40-3b1e-4bfe-b46a-8f38dd667b9f"],
Cell[224375, 4425, 60288, 1136, 375, "Output",ExpressionUUID->"2f61d5b2-7543-440f-bb97-6b6e4424068e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284700, 5566, 2627, 64, 255, "Input",ExpressionUUID->"4ce50380-cca2-4cae-b9c1-7b4e7cae1c0d"],
Cell[287330, 5632, 408, 6, 56, "Output",ExpressionUUID->"9483ee3b-3c4a-45b5-a992-675bce3a24f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287775, 5643, 13082, 313, 481, "Input",ExpressionUUID->"79295320-c6a9-48fc-829b-c7c097399192"],
Cell[300860, 5958, 90669, 1649, 392, "Output",ExpressionUUID->"f48191e8-ef5d-48cf-bf97-5d0168a9099c"],
Cell[391532, 7609, 91486, 1662, 440, "Output",ExpressionUUID->"53152ef5-886a-4570-a89c-13a23f305a60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483055, 9276, 3622, 91, 255, "Input",ExpressionUUID->"0d6b6421-af2f-4ba9-8f16-73693316f400"],
Cell[486680, 9369, 844, 16, 49, "Message",ExpressionUUID->"d87c90ea-a3f4-4ed4-8e9b-6acd372ea4a3"],
Cell[487527, 9387, 832, 16, 49, "Message",ExpressionUUID->"406fb375-809e-40ce-9873-00f56bf49d49"],
Cell[488362, 9405, 843, 16, 49, "Message",ExpressionUUID->"6747b3c9-a903-4473-925e-306330e93ae7"],
Cell[489208, 9423, 528, 11, 28, "Message",ExpressionUUID->"30a3c37e-6825-48ca-b188-0e3a6bc613b2"],
Cell[489739, 9436, 555, 12, 28, "Message",ExpressionUUID->"6b68b066-d84a-48c1-b109-eb2fec4f1c0e"],
Cell[490297, 9450, 557, 12, 28, "Message",ExpressionUUID->"3360744b-1d10-4946-a295-c1bb654a1f97"],
Cell[490857, 9464, 555, 12, 28, "Message",ExpressionUUID->"1fef5ff3-7249-4a47-a89d-a35793c74850"],
Cell[491415, 9478, 530, 11, 28, "Message",ExpressionUUID->"a0472908-f8d1-4f17-bc2e-c5b12e314655"],
Cell[491948, 9491, 440, 7, 56, "Output",ExpressionUUID->"6df079d3-4a9f-4cd6-8035-961aa2406b15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492425, 9503, 27833, 683, 771, "Input",ExpressionUUID->"0dba70f7-8dd6-43de-b878-7f26fa2566e4"],
Cell[520261, 10188, 574, 12, 28, "Message",ExpressionUUID->"01c09205-08bd-4cda-a6de-d8aac46f8258"],
Cell[520838, 10202, 865, 16, 49, "Message",ExpressionUUID->"9e18f7c9-b9dc-4d1c-aacd-0b4b1147ad02"],
Cell[521706, 10220, 574, 12, 28, "Message",ExpressionUUID->"194f0964-7067-4dc3-ab32-ab4b4f15a3fc"],
Cell[522283, 10234, 868, 16, 49, "Message",ExpressionUUID->"7e114f69-a1e9-407d-abc5-a174ef516253"],
Cell[523154, 10252, 574, 12, 28, "Message",ExpressionUUID->"4e853eb1-ef4a-4a07-9272-41da8910652c"],
Cell[523731, 10266, 547, 11, 28, "Message",ExpressionUUID->"e5d7c457-b77e-4658-aea5-b36a78bd58d0"],
Cell[524281, 10279, 866, 16, 49, "Message",ExpressionUUID->"a75f5cd7-5030-40c1-8004-b35717e7b7b9"],
Cell[525150, 10297, 544, 11, 28, "Message",ExpressionUUID->"18efac64-5e2e-4296-91b9-c8602f3b287e"],
Cell[525697, 10310, 86241, 1559, 357, "Output",ExpressionUUID->"2e09074e-6cbe-4584-ac44-19c7842bb23d"],
Cell[611941, 11871, 64712, 1204, 364, "Output",ExpressionUUID->"f686b251-c170-44b1-901c-cd52d92fb993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676690, 13080, 15407, 389, 661, "Input",ExpressionUUID->"59d76fc6-ced4-4ef8-a7dd-4575ad2c4588"],
Cell[692100, 13471, 57673, 1091, 330, "Output",ExpressionUUID->"96929517-e750-4f06-a752-2f5d47a1e3eb"],
Cell[749776, 14564, 80186, 1461, 340, "Output",ExpressionUUID->"76170382-2e8b-4934-bb68-9753cc4989df"],
Cell[829965, 16027, 42534, 843, 326, "Output",ExpressionUUID->"d4bd36f9-7df9-49da-b289-58d76d428a63"],
Cell[872502, 16872, 65310, 1218, 331, "Output",ExpressionUUID->"6e77f620-7956-4127-acba-4a34bc451686"]
}, Open  ]],
Cell[CellGroupData[{
Cell[937849, 18095, 8824, 203, 322, "Input",ExpressionUUID->"c3ed1240-54dc-45c9-8c70-7a03ae1c4ee5"],
Cell[946676, 18300, 45299, 872, 420, "Output",ExpressionUUID->"2b77daff-37e9-47ab-83ba-6da6fc21270a"],
Cell[991978, 19174, 59686, 1124, 409, "Output",ExpressionUUID->"44f766ce-357f-4d75-9c3a-c54bf20411ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1051701, 20303, 6098, 146, 411, "Input",ExpressionUUID->"2b8ea758-93d2-4495-ba6f-0eaec2afd2e4"],
Cell[1057802, 20451, 568, 9, 56, "Output",ExpressionUUID->"07e66170-2223-4b7c-b64b-9a32976d4fb0"],
Cell[1058373, 20462, 576, 10, 56, "Output",ExpressionUUID->"31cd75d1-02d9-47bf-9d40-22cf225a01ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1058986, 20477, 7066, 171, 324, "Input",ExpressionUUID->"3b057b05-f7df-416b-9217-e9988434af67"],
Cell[1066055, 20650, 52260, 1012, 242, "Output",ExpressionUUID->"5fcca4eb-e8f7-4e34-9ed2-00912bbc3e35"],
Cell[1118318, 21664, 57020, 1081, 506, "Output",ExpressionUUID->"2890db76-75b6-4718-baf6-b7e9740e3ac8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1175375, 22750, 2850, 67, 209, "Input",ExpressionUUID->"8766128a-5dbf-45b6-9f54-746ca6ebf846"],
Cell[1178228, 22819, 345, 4, 56, "Output",ExpressionUUID->"34d00304-6c6f-41d5-994f-6ef7c54edfce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1178610, 22828, 3447, 87, 188, "Input",ExpressionUUID->"1fe5a867-1790-4892-9466-abf189b1f58a"],
Cell[1182060, 22917, 92449, 1665, 541, "Output",ExpressionUUID->"83d5aaae-5769-4c9c-b385-fa0d1b3910ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274546, 24587, 3262, 80, 199, "Input",ExpressionUUID->"105fdfc8-2dbc-4526-9dfd-29a43911e8fd"],
Cell[1277811, 24669, 411, 6, 56, "Output",ExpressionUUID->"cba80325-698f-428e-8c1a-8868881df864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1278259, 24680, 6564, 172, 320, "Input",ExpressionUUID->"bcf26058-b42b-4595-9c3c-b798f361094b"],
Cell[1284826, 24854, 489, 11, 28, "Message",ExpressionUUID->"4f55ead0-8032-4381-8e68-fe839ed67670"],
Cell[1285318, 24867, 136047, 2385, 266, "Output",ExpressionUUID->"71de1db7-c886-48e8-a000-67c86a0e41a0"],
Cell[1421368, 27254, 491, 11, 28, "Message",ExpressionUUID->"e4796414-2138-4c69-aab8-fb38a26b8833"],
Cell[1421862, 27267, 172217, 2977, 265, "Output",ExpressionUUID->"1eed6cfd-5640-41d2-93fd-6a9e97480f36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1594116, 30249, 7360, 180, 345, "Input",ExpressionUUID->"7b9b5613-05ad-4932-ac27-2aa6ee1887a2"],
Cell[1601479, 30431, 178681, 3077, 266, "Output",ExpressionUUID->"f81dc2f9-1ef4-424f-986e-317d6732f988"],
Cell[1780163, 33510, 179100, 3089, 260, "Output",ExpressionUUID->"cf4bccc0-0e5f-4de5-964d-ef65732b3bb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1959300, 36604, 6403, 157, 388, "Input",ExpressionUUID->"5313e427-cf6a-4163-88a3-86d83e40e303"],
Cell[1965706, 36763, 491, 7, 56, "Output",ExpressionUUID->"20170f0a-cc72-4d9b-9cd8-3708c0f25fe1"],
Cell[1966200, 36772, 485, 7, 56, "Output",ExpressionUUID->"ea2cc729-db73-40df-a909-b9c79209ba1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1966722, 36784, 8013, 165, 255, "Input",ExpressionUUID->"335cbeb6-7c0c-46e8-91d9-12959b31e1a5"],
Cell[1974738, 36951, 853, 17, 28, "Message",ExpressionUUID->"9c8a7cea-585e-470c-ac5d-83de0ea8f9db"],
Cell[1975594, 36970, 853, 17, 28, "Message",ExpressionUUID->"23bffb95-3ae4-4894-a69e-1326a25feef4"],
Cell[1976450, 36989, 136808, 2411, 267, "Output",ExpressionUUID->"560245a9-76f1-4cc5-8ba0-5fbc10dbfc17"],
Cell[2113261, 39402, 19314, 361, 263, "Output",ExpressionUUID->"fd40dcd2-e0cf-4f8d-90e5-a466cf21685e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2132612, 39768, 3121, 70, 142, "Input",ExpressionUUID->"5f7f07f9-4cf3-4984-9438-eca1c13830eb"],
Cell[2135736, 39840, 562, 12, 28, "Message",ExpressionUUID->"6dedb7a3-a720-4a55-87df-8db8333b1ad9"],
Cell[2136301, 39854, 560, 12, 28, "Message",ExpressionUUID->"6e2c41ab-06b9-4850-90b0-93e600124280"],
Cell[2136864, 39868, 92006, 1657, 498, "Output",ExpressionUUID->"f25e3199-3a85-4ec7-a658-f850675aab78"]
}, Open  ]]
}
]
*)

